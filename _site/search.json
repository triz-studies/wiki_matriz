[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TRIZ knowledge base",
    "section": "",
    "text": "TRIZ (Theory of Inventive Problem Solving) is a discipline of applied sciences that deals with directions of development and methods for improvement of engineering systems.\nOne of the main features of TRIZ is its structured approach to problem-solving. Unlike traditional methods, TRIZ guides users through a logical process, ensuring that innovation is not left to chance but is the result of deliberate and strategic planning. To achieve this, TRIZ employs its unique set of tools and principles, which have been described in this knowledge base.\nThe base reflects the current TRIZ methodology adopted by MATRIZ and, like the methodology itself, continuously evolves and improves.\nOur goal is to present a comprehensive body of knowledge, which is why we have intentionally avoided segmentation based on MATRIZ certification levels. The structure of this knowledge base – like the methodology as a whole – is built on the premise that TRIZ projects consist of three key stages: problem identification, solving the problem, and concept justification.\nTo simplify navigation, we have designed the knowledge base in a user-friendly wiki format. In addition to articles dedicated to specific concepts, you will also find a Glossary that includes definitions of all official MATRIZ terms.\nFurthermore, we have included an interactive contradiction matrix to streamline the resolution of technical contradictions.\nIt is important to note that this knowledge base does not replace formal training but provides tools to support both TRIZ students and trainers in deepening their understanding of the theory.\nThe following literature serves as the primary sources for the wiki:\n\nState-of-the-Art TRIZ, Theory of Inventive Problem-Solving, A guide for Level 1 certification by the International TRIZ Association (MATRIZ). Edition II revised, Dr. Sergey Ikovenko, et al. Warsaw, Crido R&D, 2021. ISBN 9788395985119.\nTrends of Engineering System Evolution (TESE): TRIZ paths to innovation. Alex Lyubomirskiy, Dr. Simon Litvin, Dr. Sergei Ikovenko, Prof. Dr.-Ing. Christian M. Thurnes, Dr. Robert Adunka. Sulzbach-Rosenberg: TRIZ Consulting Group, 2018. ISBN 978-3000598463. Buy at: .\nTRIZ certification tests preparation. Edition I. Dr. Sergey Ikovenko, Magdalena Krupinska, Dr. Sergey Yatsunenko. Warsaw, Crido R&D, 2023. ISBN 9788395985188.\nOfficial MATRIZ training materials.\n\nIn cases where additional literature was used to create articles, the sources are listed individually within each article."
  },
  {
    "objectID": "index.html#problem-identification-tools",
    "href": "index.html#problem-identification-tools",
    "title": "TRIZ knowledge base",
    "section": "Problem-identification tools",
    "text": "Problem-identification tools"
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe term of function-cost analysis is sometimes used as a synonym for function analysis. Technically, it should be considered as function analysis supplemented with cost analysis performed in its final stage.\nThe analysis is usually performed if cost reduction is a goal of the project. It helps identify function disadvantages and cost disadvantages that are later used as building blocks for CECA. It also aids in making decisions about which components should be considered for trimming.\n\nFunction-cost analysis is usually presented by adding a column to the function model table. If the project involves developing an innovation strategy, its results can also be illustrated in the form of a function-cost diagram.\nThe tool should not be confused with value analysis. Value analysis involves mathematically calculating value of components based on the function-cost diagram illustrating results of function-cost analysis.\n\nArticles\n\nFunction analysis\n\nComponent analysis\n\nComponent\nEngineering system\nComponent model\nSupersystem\n\nInteraction analysis\n\nInteraction\nInteraction matrix\n\nFunction modeling\n\nFunction\nMain function\n\nTarget component\n\nFunction disadvantage\nFunction rank\n\nBasic function\nAdditional function\nAuxiliary function\nProductive function\nProviding function\n\nSupporting function\nTransport function\nMeasurement function\n\nCorrective function\n\nDefect\n\n\nFunction model\n\nValue analysis\n\nValue\n\nIdeal system\n\nFunctionality index\n\n\nCost analysis\nFunction-cost diagram\n\n\n\nFunction analysis"
  },
  {
    "objectID": "index.html#overview-1",
    "href": "index.html#overview-1",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nEvery engineering system is designed to deliver specific main function(s). This functionality is the result of functions performed by individual components of the engineering system. Function analysis involves identifying and characterizing these functions, making it the foundation for almost all problem-identification and problem-solving tools used in TRIZ.\nThe outcomes of the tool are:\n\nfunction model of the system,\na list of function disadvantages.\n\nFunction analysis neither provides new information about the analyzed system, nor suggests solutions but is crucial for project success. It organizes and translates information about the system into the language of functions, enabling the effective application of problem-solving tools.\nFunction analysis, supplemented with cost analysis, helps formulate a system development strategy. It aids in determining which component(s) should be trimmed, which should be improved, and which should remain unchanged."
  },
  {
    "objectID": "index.html#types-of-function-analysis",
    "href": "index.html#types-of-function-analysis",
    "title": "TRIZ knowledge base",
    "section": "Types of function analysis",
    "text": "Types of function analysis\nFunction analysis is differentiated into\n\nfunction analysis of devices, and\nfunction analysis of processes.\n\nBoth serve to build a function model of the system and identify its function disadvantages. They share many similarities, however, there are several significant differences between them.\n\n\n\n\n\n\n\n\nstage\nfunction analysis of devices\nfunction analysis of processes\n\n\ncomponent analysis\nsplitting the system into components, which are substances, fields, or combination of both\nsplitting the system into components,which are operations\n\n\ninteraction analysis\nidentifying interactions between components\nnot performed\n\n\nfunction modeling\nidentifying functions performed betweeninteracting components\nidentifying functions performed withinoperations\n\n\n\nranking the identified functions as basic, additional, or auxiliaryones\nranking the identified functions as productive, providing(supporting, transport, or measurement), or correctiveones"
  },
  {
    "objectID": "index.html#function-analysis-of-devices",
    "href": "index.html#function-analysis-of-devices",
    "title": "TRIZ knowledge base",
    "section": "Function analysis of devices",
    "text": "Function analysis of devices\n\nOverview\nFunction analysis of devices is applied to technical systems with a fixed set of components that remains constant over time, such as machines, apparatuses, equipment, etc.\n\n\nStages of the analysis\nThe function analysis of devices consists of three stages:\n\ncomponent analysis,\ninteraction analysis, and\nfunction modeling.\n\n\nAt each stage, information is gathered to confirm one of the three conditions for a function to occur. First, a list of components is created, as both the function carrier and the function object must be components of the system or its supersystem. Then, pairs of components with any interactions are identified. Finally, for each pair, it is determined whether one component in the pairs alters or intentionally maintains any parameter of the other.\n\n\nAlgorithm for function analysis of the device\nAlgorithm for function analysis of devices is the following:\n\nDetermine boundaries of the system, its main function, and the target component.\nPerform the component analysis:\n\nidentify all the system components, remember to keep the proper hierarchy of components, and not to split them if not necessary,\nidentify relevant supersystem components; remember to consider the components that can provide free resources,\nlist all the identified components, e.g., in the form of a table.\n\nPerform the interaction analysis:\n\ncreate the interaction matrix template with the number of columns and rows corresponding to the number of all identified components,\nfill out the interaction matrix template with the names of components in column and the raw headings, in the same order,\ncheck if there is any interaction for each pair of components in the matrix; record the results of your analysis – with a “+” sign if the interaction exists, a “–” when it does not,\ncheck if the interaction matrix is symmetrical relative to the diagonal running from the upper left-hand corner to the lower right-hand corner.\n\nPerform the function modeling:\n\ncheck whether any function is performed for every interaction identified in interaction analysis,\nspecify category of each function,\ndetermine the level of performance of the useful functions,\nrank the functions (if needed),\ncalculate the functionality index of the engineering system components (if needed),\ncalculate the value of each component of the engineering system (if needed)."
  },
  {
    "objectID": "index.html#function-analysis-of-processes",
    "href": "index.html#function-analysis-of-processes",
    "title": "TRIZ knowledge base",
    "section": "Function analysis of processes",
    "text": "Function analysis of processes\n\nOverview\nFunction analysis of processes is applied to technical systems, in which the set of components changes as the time goes, i.e. some of them appear, while others disappear from the system.\nIt is a fairly universal analytical tool. In the MATRIZ methodology, it was developed to deal with technological processes. However, with appropriate modifications, it can be applied to any processes that can be presented as step-by-step procedures, such as administrative, managerial, or logistical processes, among others.\n\n\nStages\nFunction analysis of the process consist of two stages:\n\ncomponent analysis, and\nfunction modeling.\n\n\nNo that, on the contrary to devices, interaction analysis is not conducted for processes. In TRIZ, interaction is understood as physical contact, and since no physical contact occurs between the components of processes (operations), there are no interactions to analyze.\nThe first step in process analysis involves identifying all the relevant components of the system. However, the concept of components differs – they are no longer substances and/or fields but the operations that constitute the process. Additionally, neither the target component nor supersystem components are used here. Technically, they exist, however, essentially are not actively used.\nThe second and final step of function analysis for processes is function modeling. Due to the specific nature of the system, functions are no longer identified between components but within the components themselves, which in this case are the operations."
  },
  {
    "objectID": "index.html#algorithm-for-function-analysis-of-the-process",
    "href": "index.html#algorithm-for-function-analysis-of-the-process",
    "title": "TRIZ knowledge base",
    "section": "Algorithm for function analysis of the process",
    "text": "Algorithm for function analysis of the process\nAlgorithm for function analysis of processes is the following:\n\nDetermine boundaries of the process, the main function(s) and its final product.\nPerform the component analysis:\n\n\nidentify all the operations of the process; remember to keep the proper hierarchy of operations, and not to split them if not necessary,\nidentify relevant supersystem operations; remember to consider the operations that can provide free resources,\nlist all the identified components, e.g., in the form of a table.\n\n\nPerform the function modeling:\n\n\nidentify functions performed within each operation,\nspecify category of each function,\nrank the functions,\ncalculate the functionality index of the engineering system components (if needed),\ncalculate the value of each component of the engineering system (if needed).\n\n\nArticles\n\nComponent analysis\n\nComponent\nEngineering system\nComponent model\nSupersystem\n\nInteraction analysis\n\nInteraction\nInteraction matrix\n\nFunction modeling\n\nFunction\nMain function\n\nTarget component\n\nFunction disadvantage\nFunction rank\n\nBasic function\nAdditional function\nAuxiliary function\nProductive function\nProviding function\n\nSupporting function\nTransport function\nMeasurement function\n\nCorrective function\n\nDefect\n\n\nFunction model\n\nValue analysis\n\nValue\n\nIdeal system\n\nFunctionality index\n\n\n\nComponent analysis"
  },
  {
    "objectID": "index.html#overview-4",
    "href": "index.html#overview-4",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nComponent analysis is the starting point of the function analysis, both for devices and processes. Its goal is to identify all components of the engineering system and relevant components of its supersystem.\nThe output of the analysis is a component model, which serves as input for interaction analysis when analyzing a device, and for function modeling when analyzing a process."
  },
  {
    "objectID": "index.html#defining-the-system-boundaries",
    "href": "index.html#defining-the-system-boundaries",
    "title": "TRIZ knowledge base",
    "section": "Defining the system boundaries",
    "text": "Defining the system boundaries\nBefore proceeding to the component analysis, it is essential to define boundaries of the system. They are crucial during function modeling stage as they significantly influence function ranking.\nFor devices, boundaries between the system and its supersystem are necessary to determine the status of components, i.e. to determine which components belong to the system and which of them belong to its supersystem. Additionally, main function of the system can only be identified once the boundaries are defined – as the boundaries change, the main function may also change, along with the target component.\nIn processes, supersystem components do not play an active role in the function analysis; however, how we define the boundaries can still have a direct impact on ranks of functions."
  },
  {
    "objectID": "index.html#component-analysis-for-devices",
    "href": "index.html#component-analysis-for-devices",
    "title": "TRIZ knowledge base",
    "section": "Component analysis for devices",
    "text": "Component analysis for devices\n\nProcedure\nThe procedure of the component analysis for the device is the following:\n\nestablish boundaries of the system,\nidentify all the system components and relevant supersystem components (see: Recommendations),\ncreate the component model in an appropriate form.\n\n\n\nRecommendations\nThe choice of the hierarchy level depends on the goal and constraints of the project. The analysis should be conducted at the level where components are directly linked to the problem. In some cases, these components may need to be broken down into smaller parts for clarity.\nFor the supersystem components, select only those that are relevant to the project, but don’t overlook those that may provide resources that can be used to improve the system, includingair or gravity.\nWhen performing component analysis for devices, the system’s specifications can be very helpful; however, the level of detail can be adjusted as needed. Components sourced from external suppliers, where there is no control over the design or redesign is not permitted, sould be included as a single assembly without detailed analysis."
  },
  {
    "objectID": "index.html#component-analysis-for-processes",
    "href": "index.html#component-analysis-for-processes",
    "title": "TRIZ knowledge base",
    "section": "Component analysis for processes",
    "text": "Component analysis for processes\nIn the function analysis of the process, the component analysis is a phase when the process is split into operations that are its components.\nThe operations in the process are usually carried out sequentially:\n\nThey may also be performed in parallel:\n\nRegardless of whether the operations are carried out in parallel or sequentially, it may happen that they will create a loop:\n\n\nProcedure\nThe procedure of the component analysis for the process is the following:\n\nestablish boundaries of the system,\nidentify all the operations of the process (see: Recommendations),\nidentify relevant supersystem operations, particularly those that can provide free resources,\ncreate the component model in an appropriate form.\n\n\n\nRecommendations\nSimilarly to devices, in the analysis of processes, the decision on the level of detail in the breakdown depends on us and should be based on the project’s goal. The system can be divided into large operations or a greater number of smaller ones.\nIt’s important to remember that having operations with only one function is not practical. On the other hand, if an operation contains too many functions, it may significantly complicate trimming.\nExisting process documentation, such as standard operating procedures (SOPs), process flow diagrams, equipment specifications, or transformation flowsheets, can be a very useful source of data for component analysis. Interviews with employees who operate, maintain, or supervise the process can also provide valuable insights. Finally, it’s worth spending some time on the production floor, observing the process in action, analyzing historical process data, and so on. This hands-on approach may reveal discrepancies compared to the documentation.\n\nArticles\n\nComponent\nEngineering system\nComponent model\nSupersystem\n\n\nComponent"
  },
  {
    "objectID": "index.html#overview-5",
    "href": "index.html#overview-5",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nAs a rule, a component is defined as a part that constitutes an engineering system or its supersystem. However, it should be emphasized that there is a significant difference between components understood as parts of devices and those that make up processes.\nFor both types of systems, components are identified during the component analysis, i.e. the first stage of function analysis.\n\nComponent of a device\nComponent of a device may be:\n\na substance, i.e. an object with a rest mass;\na field, an object without a rest mass that transfers interaction between substances, or\na combination of a substance and a field.\n\nSome examples of components can be the following:\n\na substance:\n\na wheel (of a car)\na screw\nair\nan operator (a person)\n\na field:\n\ngravity\nlight (electromagnetic field)\nelectric current\n\na combination of a substance and a field:\n\na light bulb with the light it emits\na radio with a sound it emits (acoustic field)\na star (a celestial body) with its radiation\n\n\nBiological objects can also be components, for examaple:\nsystem components:\n\nan operator (in the lift to move things),\nmicroorganisms (in a bioreactor to produce biogas),\na flower (as a decoration to entertain a person),\n\nsupersystem components:\n\na pig (for a lifestock trailer),\na heart (for a cardioverter),\ngrass (for a lawnmower).\n\n\nField in TRIZ\nIn TRIZ, the concept of a field extends beyond the traditional scientific definition and includes any interaction between system components, not just classical fields like gravity and electromagnetism. The term field is used from a technical perspective to facilitate idea generation. Fields represent various interactions that can occur between substances in a system.\nCategorizing fields according to their types has led to the development of MATChEM that is an acronym representing six types of fields:\n\nmechanical: interactions that are perceived as mechanical energy, e.g. gravity, friction, centrifugal force, vibrations, etc.\nacoustic: sound interactions like audible sound, ultrasound, seismic waves, resonance, etc.\nthermal: temperature related interactions, e.g. heating, cooling, phase changes, etc.\nchemical: interactions and reactions like oxidation, polymerization, synthesizing, as well as using catalysts or inhibitors, etc.\nelectrical: phenomena based on electricity, e.g. Foucault currents, electrostatic charges, ionization, piezoelectric effects, etc.\nmagnetic: mostly magnetic fields.\n\nThe last two letters (EM) also may stand for electromagnetic and refer to phenomena like microwaves, X-rays, light, or color.\n\n\n\nComponent of a process\nA component of a process is an operation.\nOperationis a set of functions within a technological process grouped because of certain considerations.\nSome examples of process components can be the following:\nsystem: making a dough for a pizza\n\nmixing ingredients,\nkneading the dough,\nproofing the dough,\nshaping the dough,\nrolling and stretching the dough.\n\nsystem: polymerization in a reactor\n\nmonomer introduction,\ncatalyst addition,\nreaction monitoring,\npolymer formation,\nmixing,\nproduct removal,\npost-reaction treatment.\n\nsystem: a fermenter process\n\ninoculation (introducing microorganisms),\nnutrient addition,\naeration,\nmixing or agitation,\nfermentation,\ngas management,\nsampling,\nharvesting,\ncleaning and sterilization.\nTagged:\nfield\nmatchem\nsubstance\n\n\nEngineering system"
  },
  {
    "objectID": "index.html#overview-6",
    "href": "index.html#overview-6",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nEngineering system and technical system are the terms used interchangeably in TRIZ.\nThe function for which the system is designed is called main function. A system that doesn’t perform any main function cannot exist, but there are many systems performing several main functions.\nDefining boundaries of the engineering system is a crucial step in any project. The boundaries are determined by the project goal and project constraints. They depend on what is necessary and possible to change and stay within the project budget and other specifics. Everything beyond the boundaries, including the environmental surrounding, is called a supersystem.\nDefining the system boundaries of the system is important because:\n\nmain function of the system can only be identified once the boundaries are defined – as the boundaries change, the main function may also change, along with the target component;\nit determines which components belong to the system and which of them belong to its supersystem;\nthe function rank depends on the main function – since the boundaries of the engineering system are determined by the project goal and project constraints, they may depend on what part of the device is within the scope of the project (what is allowed to redesign, what changes are covered by the project budget, etc.).\n\nTechnical systems can also include subsystems or components created by nature, both organic (plants, animals, or humans) and inorganic (minerals, water, etc.)."
  },
  {
    "objectID": "index.html#types-of-engineering-systems",
    "href": "index.html#types-of-engineering-systems",
    "title": "TRIZ knowledge base",
    "section": "Types of engineering systems",
    "text": "Types of engineering systems\nIn general, two types od engineering system are considered in TRIZ:\n\ndevices, and\nprocesses.\n\n\nDevice as an engineering system\nBy the device, we understand a system with a certain set of components that remains unchanged in time. Their parameters can change, but no components appear, disappear, or merge into one. The device can be machinery, apparatus, equipment, etc.\nExamples of engineering systems that are devices can be the following:\n\na car,\na computer,\na table,\na book,\nan air conditioner, etc.\n\n\n\nProcess as an engineering system\nTechnological process is a process that uses material objects, such as raw material, labour, energy, and machinery, to create finished products.\nBy the process, we understand a system, in which the set of components changes as the time goes. Some of them appear, while others disappear from the system. To model such a system, the axis of time has to be introduced:\n\nExamples of engineering systems that can be considered processes are the following:\n\na conveyor system (to assembling products),\nprocess of polymerization,\na combustion chamber (for burning fuel to produce heat and energy),\nconverting sugars into alcohol or acids in a fermenter,\na concrete mixer, etc.\n\n\nComponent model"
  },
  {
    "objectID": "index.html#overview-7",
    "href": "index.html#overview-7",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nComponent model is an output of component analysis performed as a first step of function analysis, for both devices and processes. In the function analysis of devices, the model is an input for interaction analysis. In function analysis of processes, the interaction analysis is skipped, and the component model (in this case, operations) serves as the input for function modeling."
  },
  {
    "objectID": "index.html#presentation-of-the-component-model",
    "href": "index.html#presentation-of-the-component-model",
    "title": "TRIZ knowledge base",
    "section": "Presentation of the component model",
    "text": "Presentation of the component model\nThe way the component model is presented is quite flexible.\n\nPresentation for the device\nIt is a good practice to list the identified components in the form of a table. In the first column, enter the name of the engineering system, in the second column – its components, and in the third column – the components of its supersystem:\n\ndescription of the engineering system,\nsystem components, and\ncomponents of the supersystem.\n\n\n\n\nPresentation for the process\nFor processes, the component model is usually presented as a list of operations. If it is needed to show whether the operations are sequential or parallel, it is useful to create a graph, for example:\n\n\nSupersystem"
  },
  {
    "objectID": "index.html#overview-8",
    "href": "index.html#overview-8",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nSupersystem is everything beyond the boundaries of the engineering system, including the environmental surrounding.\nIf the engineering system is a chair, the components of its supersystem may be the floor, the walls, the window, the air, other furniture nearby, the person sitting in the chair etc. If the system is a seat of a chair, the supersystem’s components will be not only the floor, the walls, the window, the air, the person sitting in the chair, but also legs of the chair and back of the chair.\n\nInteraction analysis"
  },
  {
    "objectID": "index.html#overview-9",
    "href": "index.html#overview-9",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe primary purpose of the interaction analysis is to identify whether interactions exist between components within the component model. At this stage, the consequences of the identified interactions are not considered; the focus is solely on their presence.\nNote that the interaction analysis is a stage of function analysis that is performed only for devices. In function analysis of processes this step is entirely skipped because there are no interactions between components."
  },
  {
    "objectID": "index.html#procedure-2",
    "href": "index.html#procedure-2",
    "title": "TRIZ knowledge base",
    "section": "Procedure",
    "text": "Procedure\nTo facilitate the interaction analysis, the previously developed component model is utilized. The analysis is typically conducted by creating an interaction matrix, which is the output.\nThe matrix is created according to the following steps:\n\ncreate the matrix template with the number of columns and rows corresponding to the number of all identified components,\nfill out the matrix template with the names of components in column and the raw headings, in the same order,\ncheck if there is any interaction for each pair of components in the matrix; record the results of your analysis – with a “+” sign if the interaction exists, a “–” when it does not,\ncheck if the interaction matrix is symmetrical relative to the diagonal running from the upper left-hand corner to the lower right-hand corner.\n\n\nArticles\n\nInteraction\nInteraction matrix\n\n\nInteraction"
  },
  {
    "objectID": "index.html#overview-10",
    "href": "index.html#overview-10",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nInteraction is one of key terms in function analysis for devices (not applied for processes) as the a fundamental principle is that for any function to exist between two components, there must be an interaction (physical touch) between them.\nThe occurrence of interactions depends directly on how components are defined. Identifying interactions between components that are substances is usually straightforward – they occur when these components come into direct contact, even at a single point.\nIf a component is a field, such as an electromagnetic field (light), there is a physical interaction between the field and its emitter (e.g., a light bulb) as well as between the field and its receiver (e.g., a watching person). However, in this case, the emitter (the light bulb) and receiver (the person) do not interact directly with each other.\nIf a component is defined as a combination of a substance and a field (e.g., a light bulb along with the electromagnetic field it emits), then an interaction with the receiver does exist (the light bulb “touches” the person through the light).\nInteractions between components are identified during interaction analysis, which is the second stage of function analysis for devices. They are recorded in the form of an interaction matrix, which then serves as the input for function modeling, the final stage of the analysis.\n\nInteraction matrix"
  },
  {
    "objectID": "index.html#overview-11",
    "href": "index.html#overview-11",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe interaction matrix is an output of the interaction analysis conducted during the function analysis of a device. It is typically presented in the form of a table, where the input data are the components identified during the component analysis. Accurate completing this matrix is crucial for conducting the next stage of the function analysis, which is function modeling."
  },
  {
    "objectID": "index.html#creating-the-interaction-matrix",
    "href": "index.html#creating-the-interaction-matrix",
    "title": "TRIZ knowledge base",
    "section": "Creating the interaction matrix",
    "text": "Creating the interaction matrix\nThe interaction matrix is created based on the component model. To build it, follow the steps:\n\nConstruct a matrix with rows and columns equal to the number of all components identified during the component analysis.\nPlace the names of the components in both the column headers and row headings in the same sequence. It is  recommended that the components be entered in the following order:\n\nthe target component(s) of the system,\nthe system components,\nthe supersystem components.\n\nIn the matrix, record the presence of an interaction with a “+” sign and the absence with a “–” sign.\n\n\nThe interaction matrix must be symmetrical relative to the diagonal that runs from the upper left corner to the lower right corner. If component 1 interacts with component 2, then 2 must also interact with 1. This symmetry arises because the matrix uses the same set of components in both its rows and columns in the same order, making any interaction mutual.\nWhen constructing the interaction matrix, it’s important to accurately assess the presence of interactions between components. Mislabeling these interactions can affect the outcome of the whole function analysis.\nIf a non-existent interaction is mistakenly marked with an “+,” the analysis process may take longer as it will be examined for potential functions later. However, failing to mark an actual interaction has more serious consequences, as it can result in missing functions, leading to incomplete analysis and possibly incorrect conclusions. In cases of uncertainty, it is advisable to use a “+” to ensure all potential interactions are considered.\n\nFunction modeling"
  },
  {
    "objectID": "index.html#overview-12",
    "href": "index.html#overview-12",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nFunction modeling is the final stage of function analysis for both devices and processes. This stage involves creating a function model in the form of a table, a graph, or both.\nIf cost reduction is the goal of the project, function modeling is supplemented with cost analysis, which provides important information about the components. On one hand, it helps identify the cost-related disadvantages, on the other, it aids in making decisions about which components should be considered for trimming. Function-cost analysis is usually presented by adding a column to the function model table."
  },
  {
    "objectID": "index.html#differences-between-function-modeling-for-devices-and-for-processes",
    "href": "index.html#differences-between-function-modeling-for-devices-and-for-processes",
    "title": "TRIZ knowledge base",
    "section": "Differences between function modeling for devices and for processes",
    "text": "Differences between function modeling for devices and for processes\nFunction modeling is the stage of function analysis where the two types of analysis differ the most.\n\nInput\nThe input to function modeling for devices is the interaction matrix, specifically the boxes with the sign “+”. Since interaction is a basic condition for the function to exist, only those pairs of components between which it exists are considered, while all the cells assigned with “–“ are being ignored.\nFor each cell containing „+” sign, an analysis is performed to investigate if the interaction between components represents a function. The components in the vertical axis are treated as function carriers and the components in the horizontal axis as function objects.\nSince the interaction analysis for processes is not performed at all, the input to function modeling is a component model created during the component analysis.\n\n\nRelation between functions and components\nFor both types of analyses, the notion of a function remains the same; however the role played by components changes.\nIn the case of devices, both the carriers and the objects of functions are the previously identified components:\n\nIn the case of processes, functions are performed within components (operations), meaning that neither their carriers nor their objects are components:\n\n\n\nFunction ranking\nFor devices, a function can have one of three ranks, which depend solely on the status of their objects. The most valued are functions whose object is the a target component. Those directed at other components of the supersystem hold a slightly lower rank. Finally, the least valued are functions that act on the components of the system itself.\nSince the target component and the supersystem components are not actively used in processes, ranking for them is based on different criteria."
  },
  {
    "objectID": "index.html#procedure-3",
    "href": "index.html#procedure-3",
    "title": "TRIZ knowledge base",
    "section": "Procedure",
    "text": "Procedure\n\nProcedure for function modeling for devices\nFor devices, the function modeling is performed according to the following procedure:\n\ncheck whether any function is performed for every interaction identified during the interaction analysis,\nspecify each function as useful or harmful,\ndetermine the level of performance of the useful function,\nrank the functions (if needed),\ncalculate the functionality index of the engineering system components (if needed),\ncalculate the value of each component of the engineering system (if needed).\n\n\n\nProcedure for function modeling for processes\nFor processes, the function modeling is performed according to the following procedure:\n\nidentify functions performed within each operation,\nspecify each function as useful or harmful,\nrank the useful functions.,\ncalculate the functionality index of each operation (if needed),\ncalculate the value of each operation of the engineering system (if needed).\n.\n\n\nArticles\n\nFunction\nMain function\n\nTarget component\n\nFunction disadvantage\nFunction rank\n\nBasic function\nAdditional function\nAuxiliary function\nProductive function\nProviding function\n\nSupporting function\nTransport function\nMeasurement function\n\nCorrective function\n\nDefect\n\n\nFunction model\n\n\nFunction"
  },
  {
    "objectID": "index.html#overview-13",
    "href": "index.html#overview-13",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nFunction in TRIZ plays a particularly crucial role. One of the main paradigms of the methodology is separating the function from its carrier. In practice, this means that as long as the function is being performed, it does not matter which component performs it. This approach helps us overcome limitations and discover innovative solutions."
  },
  {
    "objectID": "index.html#elements-of-the-function",
    "href": "index.html#elements-of-the-function",
    "title": "TRIZ knowledge base",
    "section": "Elements of the function",
    "text": "Elements of the function\nFunction consists of 3 elements:\n\na function carrier, i.e., a substance and/or a field performing an action,\na function object, i.e., the addressee of the action,\na verb describing the action being performed.\n\n\nFunctions are identified during function analysis, specifically its last stage – function modeling."
  },
  {
    "objectID": "index.html#conditions-for-a-function-existence",
    "href": "index.html#conditions-for-a-function-existence",
    "title": "TRIZ knowledge base",
    "section": "Conditions for a function existence",
    "text": "Conditions for a function existence\nFor a function to be considered as performed, the following conditions must be met:\n\nboth the function carrier and the object of the function are substances and/or fields,\nthe function carrier interacts with the object of the function, and\nthe action performed by the function carrier changes or maintains (keeps unchanged) some parameter of the object; if such a parameter cannot be identified, it means that there is no function.\n\nNote that one function can change only one parameter of the function object. If the function carrier changes more than one parameter of the function object, it means that it performs more functions.\nSome examples of functions can be the following:\n\nthe hammer moves the nail (changes its position in space),\nthe glasses focus light (changes its direction),\nthe book informs the reader (changes the scope of their knowledge).\n\nIn the table below, the left column shows some examples of incorrectly formulating functions. The right column contains correctly formulated functions.\n\n\n\n\n\n\n\nincorrect formulation of functions (no parameter of the object is changed = no function)\ncorrectly formulated functions\n\n\nthe sunglasses protect eyes\nthe sunglasses direct light\n\n\nthe vacuum cleaner cleans the carpet\nthe vacuum cleaner removes dust\n\n\nthe dryer dries clothes\nthe dryer removes water\n\n\nthe ruler measures the length\nthe ruler informs a person\n\n\nthe lamp illuminates a book\nthe lamp generates light\n\n\nthe drill makes a whole in a board\nthe drill changes the shape of a board"
  },
  {
    "objectID": "index.html#evaluation-of-functions",
    "href": "index.html#evaluation-of-functions",
    "title": "TRIZ knowledge base",
    "section": "Evaluation of functions",
    "text": "Evaluation of functions\nFunctions are evaluated in terms of:\n\nusefulness (categories),\nlevel of performance, and\nimportance (ranks).\n\nFunctions are evaluated during function modeling, and the results of this evaluation are used in subsequent steps of the analytical process. Categories and performance levels are essential for identifying the function disadvantages of the system, which serve as inputs for the cause-effect chain analysis (CECA). Function ranking is crucial for trimming.\n\nCategories of functions\nIn modern TRIZ, two categories of functions are identified:\n\nuseful functions, and\nharmful functions.\n\nUseful function is a function performed by a function carrier that results in a positive (required) change or preservation a parameter of an object of the function.\nHarmful function is a function performed by a function carrier that results in an inacceptable change or inacceptable preservation of a parameter of an object of the function.\nSimply put, if the function carrier changes the object’s parameter in a desired direction, the function is useful; if it changes it in an undesired direction, the function is harmful.\nFunctions themselves are neither harmful nor useful. Their category must always be considered in the context of the specific situation. The function hot air melts plastic would be useful if the goal is to increase the plasticity of the plastic, but if the hardness of the plastic needs to be preserved, it would be a harmful function.\n\n\nLevel of performance\nLevel of the function performance is determined only for useful functions. For harmful functions it is ignored, and they inherently represent function disadvantages of the system.\nThe level of performance determines whether the useful function is performed normally (i.e., within the intended parameters, exactly as it was designed) or is performed excessively or insufficiently. The excessive and insufficient performance of the function are viewed as function disadvantages of the system.\nThe performance level of a function can be illustrated by the example of a bicycle rim brake. Its purpose is to hold the tire to enable smooth and effective stopping of the bicycle. If the brake holds too tightly, the stop is too abrupt, which can lead to an accident. If the brake holds too loosely, the braking distance dangerously increases, also raising the risk of an incident.\n\n\nFunction ranking\nFunction ranking is conducted when it is necessary to develop an innovation strategy. It involves identifying the type of the function and then assigning it an appropriate number of points based on that type.\nWhile categories and level of performance are the same for all types of engineering systems, function ranking is completely different for devices and processes. They are as follows:\n\n\n\n\n\n\n\n\nfunction ranks for devices\nfunction ranks for processes\nscore\n\n\nbasic function\nproductive function\n3\n\n\nadditional function\nproviding function\n2\n\n\nauxiliary function\ncorrective function\n1\n\n\n\nFunction ranking plays a particularly important role in trimming for processes because the type of the function is the only factor determining which trimming rule will be applied."
  },
  {
    "objectID": "index.html#practical-tips-on-formulating-functions",
    "href": "index.html#practical-tips-on-formulating-functions",
    "title": "TRIZ knowledge base",
    "section": "Practical tips on formulating functions",
    "text": "Practical tips on formulating functions\nHere are some practical tips on how to formulate a function correctly:\n\nFormulate the function in the affirmative form – not to do something is not a function. It relates both to useful and harmful functions.\nDo not use declarative terms (e.g. to provide, to protect, or to seek); they do not change/maintain any parameter of the object, hence do not constitute any function.\nBe as specific as possible.\nIf you are unable to determine the action with one verb, you can use the formula: component A changes (or maintains) a parameter X of component B.\nRemember that function carrier cannot perform any function on itself. If you come across such a situation, split the object into two parts – one part will perform the the role of function carrier, the other one the role of function object."
  },
  {
    "objectID": "index.html#function-as-a-model-of-a-problem",
    "href": "index.html#function-as-a-model-of-a-problem",
    "title": "TRIZ knowledge base",
    "section": "Function as a model of a problem",
    "text": "Function as a model of a problem\nA generalized function can be used as a primary criterion for identifying technologies that exist worldwide. By reducing functions to universal terms, it becomes possible to identify technologies performing similar functions in both related and unrelated industries.\nThe tool designed for this purpose is function-oriented search (FOS).\n\nMain function"
  },
  {
    "objectID": "index.html#overview-14",
    "href": "index.html#overview-14",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nAn object of the main function of the engineering system is called target component. It always belongs to the supesystem; the engineering system cannot perform the main function on any of its components.\nThe determination of the main function and the target component depends on how the system’s boundaries have been defined. As we change the boundaries of the system, the main function and the target change too.\nWhile a system that does not perform any main function cannot exist, there can be systems that perform several (sometimes a lot) main functions. For example, the main function of the air conditioner can be to heat the air, cool the air, move moisture in or out of the air, etc. Swiss army knife or a food processor perform even more main functions.\nIf there are several main functions, there may be several targets too. If the system performs several main functions, its targets can be different components of the supersystem or different main function can be directed on one target:\n\nThe main function is something that never changes during the whole life cycle of the system. If a spoon is broken and it’s hidden in a drawer, its main function is still to hold liquid.\nDepending on the circumstances, each technical system can perform some other functions. For example, a chair is designed to support a person, but one can also block the door with it, hang some clothes on it, or use it to break the window during fire. However, the chair was not designed to hold clothes, block doors, or break windows; it was designed to support a person.\n\nArticles\n\nTarget component\n\n\nTarget component"
  },
  {
    "objectID": "index.html#overview-15",
    "href": "index.html#overview-15",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe target component is always a component of the supersystem.\nIf the system performs several main functions, there may be several targets too. Different components of the supersystem can be the targets, or different main functions can be directed on one target.\n\nSome examples of the target components can be the following:\n\na person is a target of the car (the car carries a person),\na bullet is a target of the helmet (the helmet stops a bullet),\na bike-frame is a target of the wheel (the wheel moves a bike-frame).\n\n\nFunction disadvantage"
  },
  {
    "objectID": "index.html#overview-16",
    "href": "index.html#overview-16",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThere are 3 types of function disadvantages:\n\nharmful functions,\nuseful functions performed insufficiently,\nuseful functions performed excessively.\n\nIdentifying all function disadvantages of the system is one of the main goals of the function analysis. Along with flow disadvantages, they serve as key inputs for the cause-effect chain analysis (CECA) in the analytical stage of the project.\n\nFunction model"
  },
  {
    "objectID": "index.html#overview-17",
    "href": "index.html#overview-17",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nFunction model is created during the last stage of function analysis referred to as function modeling. Along with the list of function disadvantages, it represents the final outcome of the entire analysis.\nThe model is the input for trimming as it provides the information about what useful functions of trimmed components should be transferred and what new carriers may be used."
  },
  {
    "objectID": "index.html#presentation",
    "href": "index.html#presentation",
    "title": "TRIZ knowledge base",
    "section": "Presentation",
    "text": "Presentation\nBoth for the devices and for processes, the function model can be presented in two ways – either as a table or as a graph.\nIt the project involvs many components, the table is usually employed, since the graph could be too complicated and therefore unreadable. The graph form is usually used for systems with a small number of components.\n\nFunction model as a table\nFor the device, the table usually contains a list of components, their functions, categories of functions (useful or harmful), the level of performance of useful functions (normal, excessive or insufficient), and a ranking of functions (basic, additional, auxiliary), which is the basis for calculating the functionality index of the components.\nIf it is necessary to calculate the functionality index, it is being included in the tabular function model. In this case the model not only contains a list of components, their functions, categories of functions, the level of performance of useful functions, but also the ranking of functions (basic, additional, auxiliary), as well as the functionality index of functions\nIn some cases, the table can be extended with additional parameters for categorizing components and functions if this helps in classifying components, e.g. the costs of components and their values.\nThe picture below presents a schematic for creating a tabular function model of a hypothetical device:\n\nThe following picture presents a schematic for creating a tabular function model of a hypothetical process:\n\n\n\nFunction model as a graph\nWhile the tables for function models of devices and processes are quite similar, their presentation in the form of graphs differs significantly.\n\nGraph for a device\nTo visualize the function model of the device, it is recommended that the shape and color coding for components implemented in component model be used. Additionally, shape and color coding for functions should be determined. Usually, it is as follows:\n\nUsing the proposed symbols, the example function model presented in the table in the Function model as a table section can be graphically represented the following way:\n\nWhen creating the graph, it is important to maintain the correct direction of the arrows representing the functions, so that they clearly indicate which component is the carrier, and which is the object of the function.\n\n\nGraph for a process\nThe function model of a process in the form of a graph is highly useful when it is necessary to reflect the relationships between operations – for instance, whether they are performed in parallel or sequentially. Below, we present the simplest graphical process model. It includes only functions and their categories. This information can be supplemented with additional data, such as the level of performance, rank, or the total score of the entire operation.\n\nThe graph represents an example of the process model described in the table above. To maintain the schematic clarity of the function graph, we used the format carrier (action) object. In place of (action), a verb describing the specific function should be inserted, e.g., carrier A moves object Z, carrier B holds object X, etc.\n\nFunction rank"
  },
  {
    "objectID": "index.html#overview-18",
    "href": "index.html#overview-18",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nFunction ranking is conducted when it is necessary to develop an innovation strategy.\nUsually, it is calculated for components of the engineering system only; components of the supersystem are not ranked.\nRanking involves identifying the type of the function and then assigning it an appropriate number of points based on that type. The purpose of the scoring system is to establish relative importance among functions. The total points of all functions performed by a given component allow for calculating its functional index, which is essential for estimating the component’s value to the system. During the ranking only useful functions are considered, harmful functions are ignored. The level of performance is also not taken into account.\nFunctions are ranked for both devices and processes, but different criteria applied for them."
  },
  {
    "objectID": "index.html#function-ranks-for-devices",
    "href": "index.html#function-ranks-for-devices",
    "title": "TRIZ knowledge base",
    "section": "Function ranks for devices",
    "text": "Function ranks for devices\nThe evaluation criterion here is the status of the component that is the object of the function. The function with the highest value (basic) is the one performed on the target component, i.e., the object of the main function. Functions performed on other components of the supersystem (additional) have a lower value. The least valued are the functions performed on the components of the system (auxiliary) since the primary concern is about interactions between the system and its supersystem components.\nFunctions for devices have three ranks, which are usually based on the following scoring system:\n\nbasic function – 3 points,\nadditional function – 2 points,\nauxiliary function – 1 point."
  },
  {
    "objectID": "index.html#function-ranks-for-processes",
    "href": "index.html#function-ranks-for-processes",
    "title": "TRIZ knowledge base",
    "section": "Function ranks for processes",
    "text": "Function ranks for processes\nApplying the same criteria used for devices to functions performed in processes turns out to be impossible. In this context, neither the target component nor the supersystem components are actively utilized, even though they technically exist.\nFor processes, functions have ranks, which are usually based on the following scoring system:\n\nproductive function – 3 points,\nproviding function (supporting, transport, or measurement function) – 2 points,\ncorrective function – 1 point.\n\nThe most valued are functions directly resulting with an irreversible change in the final product of the process (productive). Functions that help perform other functions but are not resulting with an irreversible change at the end of the process (providing) are slightly less important. Corrective functions have the lowest rank.\nThe algorithm for function ranking for processes can be presented in the form of the following diagram:\n\nIn the function analysis of processes, the ranking is particularly important because what happens to a function during trimming depends closely on its rank. For devices, any rule can be applied to functions of any rank (except Rule A, which is not recommended if the removed component performs a basic function). However, for processes, there is no universal set of rules. A trimmed operation typically includes a broad set of functions, and each of them must be appropriately addressed based on its rank.\n\nArticles\n\nBasic function\nAdditional function\nAuxiliary function\nProductive function\nProviding function\n\nSupporting function\nTransport function\nMeasurement function\n\nCorrective function\n\nDefect\n\n\n\nBasic function"
  },
  {
    "objectID": "index.html#overview-19",
    "href": "index.html#overview-19",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\n\nThe basic function is one of the three types of functions (alongside additional and auxiliary) that can be performed by components of an engineeiring system that is a device. As a function directed at the target component, it holds the highest value in the function ranking (usually 3 points).\nThe basic function should not be confused with the main function. The target component is the object of both, but their carriers are significantly different. The basic function is performed by a component of the system, whereas the main function is performed by the system as a whole.\n\nAdditional function"
  },
  {
    "objectID": "index.html#overview-20",
    "href": "index.html#overview-20",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\n\nThe additional function is one of the three types of functions (alongside basic and auxiliary) that can be performed by components of an engineeiring system that is a device.\nAs a function directed at a supersystem component, it ranks higher (usually 2 points) than functions directed at system components but not as high as the basic function performed on a target component. This is because the ranking approach assumes that the main emphasis is placed on interactions between the system and the components of its supersystem.\n\nAuxiliary function"
  },
  {
    "objectID": "index.html#overview-21",
    "href": "index.html#overview-21",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\n\nThe auxiliary function is one of the three types of functions (alongside basicand additional) that can be performed by components of an engineeiring system that is a device.\nAs a function directed at a system component, it has the lowest rank in function ranking (usually 1 point). This is because the ranking approach assumes that the main emphasis is placed on interactions between the system and components of its supersystem. How well the functions inside the system are performed is of least importance.\n\nCorrective function"
  },
  {
    "objectID": "index.html#overview-22",
    "href": "index.html#overview-22",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe corrective function is one of the three types of functions (alongside productive and providing) that can be performed within operations (components) of an engineeiring system that is a process.\nAs a function whose only purpose is to eliminate defects arising in the process, it is ranked the lowest among all functions in the function ranking. In the most commonly used scoring system, it receives 1 point.\n\nArticles\n\nDefect\n\n\nDefect"
  },
  {
    "objectID": "index.html#overview-23",
    "href": "index.html#overview-23",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nA defect is a phenomenon that occurs in engineering systems that are processes.\nIt can be introduced intentionally at preceding operations where it performed useful functions, or it may occur independently of us.\n\nProductive function"
  },
  {
    "objectID": "index.html#overview-24",
    "href": "index.html#overview-24",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe productive function is one of the three types of functions (alongside providing and corrective) that can be performed within operations (components) of an engineeiring system that is a process.\nThe only criterion for a productive function is whether the change it causes remains in the final product at the end of the process. For this reason, it is the highest-valued function in the ranking for processes (usually 3 points).\n\nProviding function"
  },
  {
    "objectID": "index.html#overview-25",
    "href": "index.html#overview-25",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe providing function is one of the three types of functions (alongside productive and corrective) that can be performed within operations (components) of an engineeiring system that is a process.\nThere are 3 types of providing functions:\n\nsupporting function,\ntransport function, and\nmeasurement function.\n\nIn the function ranking, providing functions are valued lower than productive functions but higher than the corrective ones. In the most commonly used scoring system, they receive 2 points.\n\nArticles\n\nSupporting function\nTransport function\nMeasurement function\n\n\nMeasurement function"
  },
  {
    "objectID": "index.html#overview-26",
    "href": "index.html#overview-26",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe measurement function is one of the three types of providing functions (alongside supporting and transport) that can be performed within operations (components) of an engineeiring system that is a process.\nAs a providing function, it is valued lower than productive function but higher than the corrective one in the function ranking. In the most commonly used scoring system, it receives 2 points.\nIt is important to remember that a function that reveals information about components can be classified as a providing measurement function as long as measuring or detection is not the main function of the process. If it is, then it will be considered a productive function.\n\nSupporting function"
  },
  {
    "objectID": "index.html#overview-27",
    "href": "index.html#overview-27",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe supporting function is one of the three types of providing functions (alongside transport and measurement) that can be performed within operations (components) of an engineeiring system that is a process.\nAs a providing function, it is valued lower than productive function but higher than the corrective one in the function ranking. In the most commonly used scoring system, it receives 2 points.\n\nTransport function"
  },
  {
    "objectID": "index.html#overview-28",
    "href": "index.html#overview-28",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe transport function is one of the three types of providing functions (alongside supporting and measurement) that can be performed within operations (components) of an engineeiring system that is a process.\nAs a providing function, it is valued lower than productive function but higher than the corrective one in the function ranking. In the most commonly used scoring system, it receives 2 points.\nIt is important to remember that a function that changes a position of its object in space can be classified as a providing transport function unless transport is the main function of the process. If it is, then it will be considered a productive function.\n\nValue analysis"
  },
  {
    "objectID": "index.html#overview-29",
    "href": "index.html#overview-29",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nValue analysis is a historical tool that was once used as the basis for identifying components to trim. At the time, this term referred to the simultaneous execution of function modeling and cost analysis.\nValue analysis involved calculating and comparing value of system components. It was conducted based on the function-cost diagram.\nToday, it is rarely used in projects and has been replaced by other tools. Practice has shown that the list of components immediately associated with key disadvantages from CECA or the disadvantages (mainly cost-related) identified through function-cost analysis provide much more reliable indications than the value of components derived from calculations.\n\nArticles\n\nValue\n\nIdeal system\n\nFunctionality index\n\n\nValue"
  },
  {
    "objectID": "index.html#overview-30",
    "href": "index.html#overview-30",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nHistorically, value was calculated during the value analysis. Depending on the project, it was used for individual components or the entire systems.\nThis concept helps in understanding factors that influence component (or system) value in TRIZ, but it is no longer applied in contemporary projects."
  },
  {
    "objectID": "index.html#calculating-value",
    "href": "index.html#calculating-value",
    "title": "TRIZ knowledge base",
    "section": "Calculating value",
    "text": "Calculating value\nValue can be presented in the form of the following formula:\n\nwhere Fn means the normalized sum of function points, and Cn is normalized costs.\nValue can never be negative. Both the function point score and costs are positive, so their ratio is also positive. For a component/system with very low function point score and very high cost, its value may aim for 0, however it still remains positive.\n\nCalculating value of components\nThe sum of function points can be calculated based on a function ranking, while the costs are calculated during cost analysis.\nThe way of calculation should be identical for all components. Both the function score and the cost of each component should be normalized relatively to the total function score and the total cost of the whole system.\nFor example, a system consists of two components. Component 1 performs 2 basic, 1 additional, and 2 auxiliary functions and costs 5\\(; component 2 performs 1 basic, 1 additional, and 1 auxiliary function and costs 2\\). Value calculation is as follows:\nFunction score of component 1:\n\n2 basic functions – 2 x 3 pt. = 6 pt.\n1 additional function – 1 x 2pt = 2 pt.\n2 auxiliary functions – 2 x 1 pt. = 2 pt.\n\ntotal = 10 pt.\nFunction score of component 1:\n\n1 basic function – 1 x 3 pt. = 3 pt.\n1 additional function – 1 x 2pt = 2 pt.\n1 auxiliary functions – 1 x 1 pt. = 1 pt.\n\ntotal = 6 pt.\nThe total score of both components is 16 pts. The normalized function score of component 1 is 10/16, and the normalized function score of component 2 is 6/16.\nAnalogous, the normalized cost can be calculated. The cost of component 1 is 5\\(, and 2\\) of component 2. Together they cost 7$, so the normalized cost of component 1 is 5/7, and the normalized cost of component 2 is 2/7.\nValue of component 1 equals:\n\nValue of component 2 equals:\n\nIt follows from the above that value of component 2 is greater than value of component 1.\n\n\nCalculating value of the system\nTo calculate the value of the whole system, function analysis for the supersystem should be performed, and the system should be considered as one of components."
  },
  {
    "objectID": "index.html#comparing-value-to-ideality",
    "href": "index.html#comparing-value-to-ideality",
    "title": "TRIZ knowledge base",
    "section": "Comparing value to ideality",
    "text": "Comparing value to ideality\nConceptually, value related to function ranking in function analysis is the same as ideality. The only difference is that value can be calculated, while  no calculation system has been developed for ideality. Neither benefits nor payment factors have established methods for estimation and calculation.\n\nArticles\n\nIdeal system\n\n\nIdeal system"
  },
  {
    "objectID": "index.html#overview-31",
    "href": "index.html#overview-31",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nIdeality of the system is understood as the ratio of the total benefits provided by the system to the sum of all payment factors associated with it. Payment factors include not only direct costs but also required space, environmental damage, maintenance, etc. Conceptually, ideality is the same as value related to function ranking in function analysis. The only difference is that value of different components of an engineering system can be calculated and compared to assess their contribution to the system’s performance. No similar system has been developed for ideality. Neither benefits nor payment factors have established methods for estimation and calculation.\nIdeality can be presented in the form of the following formula:\n\nWhen all payments of the system become 0, we can call it ideal system."
  },
  {
    "objectID": "index.html#difference-between-ideal-system-and-ideal-final-result-ifr",
    "href": "index.html#difference-between-ideal-system-and-ideal-final-result-ifr",
    "title": "TRIZ knowledge base",
    "section": "Difference between ideal system and ideal final result (IFR)",
    "text": "Difference between ideal system and ideal final result (IFR)\nIdeal system is sometimes confused with ideal final result (IFR). These concepts are significantly different, and it is a major mistake to equate them.\nThe ideal system referes to with infinite value. It has no components or associated costs, but still delivers the intended function(s). In other words, the system does not exist, but its main function is performed.\nIFR is a term used in ARIZ. It is****a model of the best solution****to a specific problem, whereby the problem is fully eliminated with minimal changes to the system and without any deterioration of system parameters. However, the system exists, it occupies space, incurs costs, requires maintenance, etc.\n\nFunctionality index"
  },
  {
    "objectID": "index.html#overview-32",
    "href": "index.html#overview-32",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe functionality index is used to calculate a component’s value in the value analysis.\nIt usually depends on the number of useful functions the component performs and ranks of these functions. Originally, harmful functions were also included in the calculation, with points subtracted for their presence. Different factors were also applied to useful functions, depending on their level of performance. Some TRIZ specialists still follow this classical approach.\nThe method of calculation presented below is one of the simplest."
  },
  {
    "objectID": "index.html#calculating-the-functionality-index",
    "href": "index.html#calculating-the-functionality-index",
    "title": "TRIZ knowledge base",
    "section": "Calculating the functionality index",
    "text": "Calculating the functionality index\nBoth for devices and for processes, the following steps should be performed to calculate the functionality of a component:\n\nidentify all functions performed by the component / within the operation,\ndetermine their category,\nrank each useful function (eg. basic / productive – 3pts, additional / providing – 2pts, auxiliary / corrective – 1pt),\nsum up the function points of all functions performed by the component / in th operation,\nnormalize the function score.\n\nSince harmful functions are not scored, they are not included in the calculations.\nLet’s consider the fllowing example for a device: one of the components (component A) performs 1 harmful function and 3 useful functions:\n\n1 basic function (3pts), and\n2 auxiliary functions (2 x 1pts = 2pts).\n\nThe harmful function is ignored, so the total score of the component is 5pts. Let us assume that the sum of point scores for all components of the system equals 41pts. The total function index of component A equals 5/41.\nIn the same way, the functionality index for operations in processes can be calculated. For example, the sum of point scores for all operations in the process equals 132pts. Within operation X, the following useful functions are performed:\n\n2 productive functions (2 x 3pts = 6pts),\n3 providing function (3 x 2pts = 6 pts), and\n1 corrective function (1pt).\n\nThe total score of the operation X is 13pts; therefore, its functionality index equals 13/132.\n\nCost analysis"
  },
  {
    "objectID": "index.html#overview-33",
    "href": "index.html#overview-33",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nCost analysis is typically conducted in projects aimed at reducing system costs. It is conducted simultaneously with function analysis, specifically during function modeling. Function analysis supplemented with cost analysis is called function-cost analysis.\nThe analysis provides crucial information about the system and its components. On one hand, it helps identify its cost disadvantages, and on the other, it aids in making decisions about which components should be considered for trimming.\nTwo types of costs can be considered during the analysis:\n\nabsolute cost, i.e. the monetary value of a component (for example, if a component costs €7, its absolute cost is €7.\nrelative cost, i.e. the component’s cost as a percentage of the total cost of the system (for example, if the system costs €1000 and a component costs €23, its relative cost is 2,3%).\n\nUsing relative component costs not only makes comparison easier but also provides a more accurate assessment. A cost difference of €4 is significant if the total system cost is €13, but much less so if the system costs €2000. A high relative cost is considered a cost disadvantage. Cost disadvantages, along with function disadvantages, form the building blocks for cause-effect chain analysis.\nEffects of the analysis are typically presented by adding a column to the function model table. If the project involves developing an innovation strategy, they can be used to create a function-cost diagram.\n\nFunction-cost diagram"
  },
  {
    "objectID": "index.html#overview-34",
    "href": "index.html#overview-34",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe function–cost diagram is created based on the results of function-cost analysis.\nIt can be a very helpful in developing an innovation strategy for the system improvement. It also is useful to show if the system has been designed reasonably or not."
  },
  {
    "objectID": "index.html#building-the-diagram",
    "href": "index.html#building-the-diagram",
    "title": "TRIZ knowledge base",
    "section": "Building the diagram",
    "text": "Building the diagram\nThe horizontal axis of the diagram is the sum of the component costs; the vertical axis is the sum of its function point score. After calculating functionality index and the cost of the components, each of them can be placed in the appropriate place on the diagram."
  },
  {
    "objectID": "index.html#insights-from-the-diagram",
    "href": "index.html#insights-from-the-diagram",
    "title": "TRIZ knowledge base",
    "section": "Insights from the diagram",
    "text": "Insights from the diagram\nIf the functionality index increases proportionally to the cost of the components, it indicates that the engineering system has been optimally designed. To evaluate this, try to draw a straight line between the points representing the components so that they are distributed roughly evenly around it. If successful, it suggests that the system is designed rationally; if the points are scattered widely across the area, the design leaves much to be desired. The steeper the line, the better it is for the system."
  },
  {
    "objectID": "index.html#strategy-planning-based-on-the-diagram",
    "href": "index.html#strategy-planning-based-on-the-diagram",
    "title": "TRIZ knowledge base",
    "section": "Strategy planning based on the diagram",
    "text": "Strategy planning based on the diagram\nBy splitting the diagram by four parts, the components can be grouped according to their functionality and costs:\nA: low cost, high functionality index,\nB: low cost, low functionality index,\nC: high cost, high functionality index,\nD: high cost, low functionality index.\n\nThe most valuable components are those that are located in area A (high functionality inex, low cost), which is the desired location for all the components. Locating them in this sector is the basis for developing an innovation strategy.\nIn practice it means:\n\nfor the components from the section B – increase functionality;\nfor the components from the section C – reduce costs;\nfor the components from the section D there are two alternative ways:\n\nincrease functionality and decrease costs,\ntrim them completely from the system.\n\n\n\nFlow analysis"
  },
  {
    "objectID": "index.html#overview-35",
    "href": "index.html#overview-35",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nFlow analysis compliments function analysis by identifying disadvantages that may not have been revealed through it.\nThere are three types of flows analyzed during the analysis:\n1. substance flow,\n2. energy flow, and\n3. information flow.\nModeling the engineering system as flows of substance, energy, and information provides an alternative view of the system.\nThe flows go through their channels, which are the system’s components. That’s why function analysis must be completed prior to flow analysis.\nFlow analysis can be conducted for both devices and processes. In either case, the outcome is a list of flow disadvantages. Together with function disadvantages, they can be used as building blocks in cause-effect chain analysis."
  },
  {
    "objectID": "index.html#stages-of-flow-analysis",
    "href": "index.html#stages-of-flow-analysis",
    "title": "TRIZ knowledge base",
    "section": "Stages of flow analysis",
    "text": "Stages of flow analysis\nThere are two major stages of flow analysis. These are as follows:\n\nflow partition analysis during which the allocations of flows are identified,\nflow modeling during which the flow model is created (e.g., in a graphical form), and specific flow disadvantages are identified from the list of typical disadvantages."
  },
  {
    "objectID": "index.html#algorithm",
    "href": "index.html#algorithm",
    "title": "TRIZ knowledge base",
    "section": "Algorithm",
    "text": "Algorithm\n\nSelect the type of flows for analyzing.\nCreate the first flow channel:\n\nindicate the components through which the flow is flowing (the outcome of the component analysis can serve as the basis for that, but if needed you should split the components into more granular ones (recommended));\nconnect those components.\n\nMoving along the channel, identify as many flow disadvantages as possible. Use the list of typical flow disadvantages for that.\nPerform the similar actions for other flows.\nCompose the general list of flow disadvantages to use as an input to CECA together with the list of function disadvantages.\n\n\nArticles\n\nFlow disadvantage\nFlow\n\n\n\nFlow disadvantage"
  },
  {
    "objectID": "index.html#overview-36",
    "href": "index.html#overview-36",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe flow disadvantages analyzed during the flow analysis can be divided into the following types:\n\nconductivity disadvantages,\nutilization disadvantages,\nharmful flows, and\nflow partition disadvantages.\n\nFlow conductivity disadvantages can be the following:\n\nbottleneck, i.e., a place in the flow channel where the resistance to flow is significantly increased (e.g., merging traffic lanes);\nstagnant zone, i.e., a place where the flow stops temporarily or permanently (e.g., traffic red light);\npoorly transferable flow (e.g., a speaking tube on a ship);\nlong flow (e.g., a power transmission line);\nhigh channel resistance (e.g., 2-lane traffic compared to 4-lane traffic);\nlow flow density (e.g., transport of uncompressed mattresses);\nlarge number of transformations (e.g., a traditional clock transmission).\n\nFlow utilization disadvantages can be the following:\n\ngray zone, i.e., a location in a flow where the parameters are difficult to predict (e.g., an icy road);\nchannel damages flow, i.e., a location in the channel where the channel damages the flow (e.g., a hole in the road surface);\nflow damages channel, i.e., a location in the channel where the flow damages its channel (e.g., a pipe corroded by the flowing substance).\n\n\nFlow"
  },
  {
    "objectID": "index.html#overview-37",
    "href": "index.html#overview-37",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nFlow refers to the movement of material objects (substances and energy), or information through space. What matters is its presence and motion within the engineering system under consideration, although it may also partially occur in the supersystem.\nDynamics (movement through space) is a key feature of flow. It exists as long as the “flowing” element is in motion – if it stops, the flow ceases (disappears), even though all of its components remain within the system. This means that flow can “disappear” from the system without removing any of its components.\nFlows in the system are analyzed during the flow analysis, which is performed after the function analysis. There are three types of flows analyzed:\n1. substance flow,\n2. energy flow, and\n3. information flow."
  },
  {
    "objectID": "index.html#categories-of-flows",
    "href": "index.html#categories-of-flows",
    "title": "TRIZ knowledge base",
    "section": "Categories of flows",
    "text": "Categories of flows\nThere are four categories of flows. They are the following:\nUseful flow is a flow whose object (substance, energy, or information) performs a useful function or is an object of a useful function.\nHarmful flow is a flow whose object (substance, energy, or information) performs a harmful function.\nWasted flow is a flow that is characterized by losses of substance, energy, or information.\nNeutral flow is a flow that has an irrelevant or insignificant influence on the engineering system.\n\nCause-effect chain analysis"
  },
  {
    "objectID": "index.html#overview-38",
    "href": "index.html#overview-38",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nRegardless of whether you are dealing with a device or a process, it is essential to conduct a function-cost analysis and (optionally) a flow analysis before performing CECA. Function and cost disadvantages, as well as flow disadvantages (if identified) are the fundamental building blocks of CECA, and all of them should be considered in the analysis.\n\nThe primary outcome of CECA is a list of key disadvantages.\nCause-effect chain analysis can be performed for both devices and processes."
  },
  {
    "objectID": "index.html#performing-ceca",
    "href": "index.html#performing-ceca",
    "title": "TRIZ knowledge base",
    "section": "Performing CECA",
    "text": "Performing CECA\n\nProcedure\nBuilding CECA begins with the initial disadvantage formulated by inverting the goal of the project. Next, we ask the question why? to understand what directly causes it. Disadvantages identified in earlier analyses are typically used at the beginning of the chains. However, they can also appear in the middle or at the end of the chain, as they are not always the direct cause of the initial disadvantage.\nAs the chain progresses downward, more disadvantages are revealed, with each subsequent one serving as the cause of the previous one. Disadvantages that lie between the initial disadvantages and the key disadvantages are referred to as intermediate disadvantages.\nThe final step of the analysis is to designate certain disadvantages as key disadvantages, and it is up to you to decide which ones to select. Usually, they can be found the end of the chains, however it is not uncommon to assign the status of key disadvantage to some intermediate disadvantages.\n\n\n\nStarting and ending the analysis\nThe key point in CECA is to determine where to start and when to stop the chain.\nAs mentioned, the starting point for the analysis is always the initial disadvantage. As for stopping the analysis, there are two main recommendations:\n\nIf the disadvantage is caused by a natural phenomenon (physical, chemical, biological, geometric, etc.), asking questions why? further is meaningless. For example, if it is needed to answer the question Why does water consist of hydrogen and oxygen molecules?, the answer is always *That is just the way it is**.*\nIf the cause of the disadvantage is beyond your control and influence of this project. It may be caused by administrative or legislative restrictions that cannot be circumvented (e.g., radiation level is limited by the law), project constraints may prevent from solving the problem that lies behind the disadvantage (e.g., redesigning the component associated with the disadvantage exceeds the project budget), or you may have no influence on the solution of the problem that is behind the disadvantage (e.g., a certain assembly cannot be redesigned since it is provided by an external supplier).\n\nSometimes, a chain cannot be completed because the cause of the disadvantage leads back to a previous one, creating what is known as a vicious circle.\n\n\nAND and OR operators\nIf one disadvantage is caused by two or more disadvantages, it is necessary to use one of the operators that indicate the relationship between them:\n\noperator AND is used if at least two causes have to occur simultaneously for a disadvantage to appear; removing one of them does automatically remove the other;\noperator OR is used if one disadvantage is caused by several factors that are independent of each other; removing one of them does not remove any other automatically.\n\n\n\n\nRecommendations\nThe technique used for building cause-effect chains involves multiple asking the question why?It is recommended that at least 5 levels down from the initial disadvantage be analyzed, what means that the question why? should be asked at least five times (that is why this tool is sometimes called a method of 5 Whys).\nIt is recommended to complete the entire branch of the chain before starting the next one.\nNote that CECA is composed of disadvantages only. Do not enter positive and advantageous effects into the chain.\n\nArticles\n\nKey disadvantage\nInitial disadvantage\nVicious circle\n\n\n\nKey disadvantage"
  },
  {
    "objectID": "index.html#overview-39",
    "href": "index.html#overview-39",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe initial disadvantage is always predetermined by the goal of the project. The selection of key disadvantages is your decision.\nUsually, key disadvantages can be found at the roots of cause-effect chains or close to them; however, the its status can be assigned to any intermediate disadvantage of the chain."
  },
  {
    "objectID": "index.html#relation-between-key-disadvantages-and-key-problems",
    "href": "index.html#relation-between-key-disadvantages-and-key-problems",
    "title": "TRIZ knowledge base",
    "section": "Relation between key disadvantages and key problems",
    "text": "Relation between key disadvantages and key problems\nSome of key disadvantages are directly reformulated into key problems, the others can be used in trimming. The component immediately associated with the key disadvantage may be trimmed from the system, thus, the key disadvantage disappear together with the trimmed component and trimming problems are generated instead.\nAnother scenario includes performing feature transfer on the component associated with key disadvantage. It generates a set of feature transfer problems.\nTrimming problems and feature transfer problems have the status of key problems."
  },
  {
    "objectID": "index.html#recommendations-3",
    "href": "index.html#recommendations-3",
    "title": "TRIZ knowledge base",
    "section": "Recommendations",
    "text": "Recommendations\nIt is recommended to examine the entire chain when selecting key disadvantages. Some disadvantages may be easy to eliminate, or certain issues might have already been resolved in the past. Consider who could assist you in this process.\nA key disadvantage formulated around a parameter is usually easier to model using an engineering (technical) or physical contradiction. For example, if the key disadvantage is that an element is too thin, it can be relatively straightforward to model it as a physical contradiction: the element should be thick because…, and it should be thin because…\nConsider the disadvantages located in the branch containing the AND operator – removing one can eliminate (collapse) the entire branch or part of the chain.\n\nInitial disadvantage"
  },
  {
    "objectID": "index.html#overview-40",
    "href": "index.html#overview-40",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nInitial disadvantage is the starting point for the cause-effect chain analysis. It is formulated by inverting the goal of the project.\nFor example, if the project’s goal is to improve the final product’s purity, the initial disadvantage would be stated as: the product is contaminated. Similarly, if the project’s goal is to reduce the cost of engine assembly, the initial disadvantage would be phrased as: the cost of engine assembly is high.\nSome projects have more than one goal. This means that they have several initial disadvantages, and separate CECAs are built for each of them. The disadvantages that come from branches of different initial disadvantages may be interconnected.\n\nVicious circle"
  },
  {
    "objectID": "index.html#overview-41",
    "href": "index.html#overview-41",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nWhen building a CECA, we always aim to reach the end of the chains during the analysis. However, there may be situations where the cause of a disadvantage leads back to a previous disadvantage – either intermediate or even the initial one. This creates a vicious circle, where the chain has no definitive end.\n\nTo break the vicious circle, any of its disadvantages can be selected as a key disadvantage. It is recommended to select the one that will be easier to address according to your opinion.\n\nTrimming"
  },
  {
    "objectID": "index.html#overview-42",
    "href": "index.html#overview-42",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nTrimming is one of fundamental analytical tools. Like feature transfer, it is a problem-generating tool since it creates problems that have never existed before. Solving these problems leads to entirely new and unexpected solutions.\nTrimming aims to improve an engineering system by reducing the number of its components and simplifying the system. Eliminating components responsible for key disadvantages increases the system’s value by reducing its costs while maintaining or enhancing its overall functionality.\nTrimming offers multiple options for eliminating the same component. These options represent a spectrum of possible innovations – from incremental to more radical. It also reveals a set of problems that other approaches cannot detect. It yields new problem statements, and also points toward effective solutions.\nThe input into trimming are the following:\n\nfunction model including useful functions, developed during the function analysis, and\nkey disadvantages identified in CECA.\n\nThe function model provides information about which useful functions of the trimmed components should be preserved in the system and what new carriers can be used. The key disadvantages, on the other hand, indicate components to trim, as those directly associated with key disadvantages are recommended to be removed from the system first.\nThe output of trimming is one or more trimming models, and a list of trimming problems.\nTrimming is guided by a set of rules that determine which components to trim and/or how to redistribute their useful functions. However, a different set of rules applies to devices and another to processes.\nIn some projects, completely removing a component recommended for trimming may be impossible or impractical. In such cases, partial trimming can be applied."
  },
  {
    "objectID": "index.html#selecting-components-for-trimming",
    "href": "index.html#selecting-components-for-trimming",
    "title": "TRIZ knowledge base",
    "section": "Selecting components for trimming",
    "text": "Selecting components for trimming\nWhen selecting components for trimming, the decision should align with the project’s goal. If the goal is to reduce costs, consider removing the most expensive component. If minimizing weight is a priority, eliminate the heaviest one. For size reduction, focus on the largest component.\nTo determine which component to trim, it is advisable to use the following approaches:\n\nUtilize the list of components directly linked to key disadvantages identified through CECA. This method is widely applied in most projects. By removing the component responsible for a key disadvantage, the associated issue is effectively addressed.\nIn cost-reduction projects, rely on cost assessments, such as those derived from function-cost analysis. This provides insights into the costs of units and their individual parts. When the project aims to cut costs, it is logical to trim the most expensive components.\nFor general system improvement, refer to strategies like those outlined in the function-cost diagram. One effective approach is to eliminate components with the lowest value, typically found in quadrant D of the diagram. This method helps in improving the overall system by removing elements that contribute the least value.\n\nThe decision to complete the trimming process is made by the team. After removing the selected component and addressing the trimming problems, the process can be concluded or repeated for another component."
  },
  {
    "objectID": "index.html#difference-between-trimming-for-devices-and-trimming-for-processes",
    "href": "index.html#difference-between-trimming-for-devices-and-trimming-for-processes",
    "title": "TRIZ knowledge base",
    "section": "Difference between trimming for devices and trimming for processes",
    "text": "Difference between trimming for devices and trimming for processes\nThe key difference between trimming for devices and trimming for processes lies in the trimming rules.\nFor devices, there are three trimming rules that can be applied to functions of any rank, with some limitations for rule A. In the process, a trimmed operation comprises a set of functions with different ranks, and each function requires a distinct approach to be effectively addressed. Therefore, there is no universal set of trimming rules, but there are different sets of rules for carriers of function of a specific rank.\nTrimming for processes is usually more radical than trimming for devices. While for devices, component by component are trimmed, for processes, an entire operation is eliminated, along with its associated equipment, tools, labor, energy, raw materials, etc.\n\nArticles\n\nTrimming rules\nTrimming model\nPartial trimming\nTrimming problem\n\n\n\nTrimming rules"
  },
  {
    "objectID": "index.html#overview-43",
    "href": "index.html#overview-43",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nTrimming rules are scenarios according to which the process of trimming is conducted and they represent the key difference between trimming for devices and trimming for processes. For devices, there are three trimming rules that can be applied to functions of any rank (with some limitations for rule A). In the process, a trimmed operation comprises a set of functions with different ranks, and each function requires a distinct approach to be effectively addressed. Therefore, there is no universal set of trimming rules, but there are different sets of rules for carriers of function of a specific rank. Trimming for processes is usually more radical than trimming for devices. While for devices, component by component are trimmed, for processes, an entire operation is eliminated, along with its associated equipment, tools, labor, energy, raw materials, etc.\nTrimming rules should always be selected considering the goal and constraints of the project, as well as the boundaries of the system."
  },
  {
    "objectID": "index.html#trimming-rules-for-devices",
    "href": "index.html#trimming-rules-for-devices",
    "title": "TRIZ knowledge base",
    "section": "Trimming rules for devices",
    "text": "Trimming rules for devices\nWhen selecting a component of the device to trim, one of three trimming rules can be applied.\nRule A: Function carrier can be trimmed if the object of its useful function is removed too.\n\nRule A is the most radical of all the options for trimming – two components are removed at once. If the object of the function does not exist, the carrier of this function is no longer needed.\nThat rule should be used with caution. It is recommended that it be applied when the system is over-engineered and consists of too many components.\nIt is not recommended that Rule A be applied when the component being trimmed performs a basic function, because then the target must be also removed. Theoretically it is possible, but it does not happen often.\nRule B: Function carrier can be trimmed if the object of function performs its useful function itself.\n\nRule B, sometimes referred to as the self-service rule, is less radical than Rule A. However, remember that the component that is supposed to perform a new function on itself may have limited resources, and it might be challenging to “teach” it to do so.\nRule C: Function carrier can be trimmed if another component performs its useful function.\n\nRule C is the most frequently used scenario, since it is much easier to meet its conditions than for A or B. The system and its supersystem contain a number of components that gives a broad choice of new function carrier selection. The new function carrier should meet at least one of the four conditions:\n\nThe component already performs an identical or similar function on the object of function.\nThe component already performs identical or a similar function on another object.\nThe component performs any function on the object of function, or it at least simply interacts with it.\nThe component has resources necessary to perform the required function."
  },
  {
    "objectID": "index.html#trimming-rules-for-processes",
    "href": "index.html#trimming-rules-for-processes",
    "title": "TRIZ knowledge base",
    "section": "Trimming rules for processes",
    "text": "Trimming rules for processes\nTrimming for processes involves entire operations, but the sets of trimming rules apply to individual functions performed within them. According to some rules, performing a function may not be necessary, but this does not mean it is being trimmed.\nThere is no universal set of trimming rules here, but there are different sets of rules for carriers of functions of a specific rank.\nThere are five different sets of trimming rules, and each of them may contain a different number of rules. They are as follow.\n\nTrimming rules for productive functions\nWhen trimming the operation with productive function, the function can be handled the following ways:\nRule A: it can be eliminated if its object is eliminated from the system.\nRule B: it can be eliminated if the necessity to perform it is eliminated.\nRule C: it can be transferred to another operation.\n\n\nTrimming rules for providing functions\nWhen trimming an operation with providing functions, the functions are handled depending on the rank.\n\nSupporting functions\nSupporting function can be handled the following ways:\nRule A: it can be eliminated if the operation with the supported function is trimmed.\nRule B: it can be eliminated if the operation with the supported function is changed so that no support is required now.\nRule C: it can be transferred to the operation with the supported function.\nRule D: it can be transferred to another operation.\n\n\nTransport functions\nTransport function can be handled the following ways:\nRule A: it can be eliminated if its object is eliminated from the system.\nRule B: it can be eliminated if the entities between which its object moves are eliminated from the system.\nRule C: it can be eliminated if the subsequent operations are changed in such a way that it eliminates the need to perform the transport function.\nRule D: it can be transferred to another operation.\n\n\nMeasurement functions\nTrimming rules for measurement functions direct us to the rules for other functions. They can be handled the following ways:\nRule A: it is handled according to trimming rules for the productive function if the measurement function is needed as the final output (for example, research, statistics, etc.).\nRule B: it is handled according to trimming rules for the supporting function if the measurement function is needed for the provision of another operation.\n\n\n\nTrimming rules for corrective functions\nWhen trimming the operation with corrective function, the function can be handled the following ways:\nRule A: it can be eliminated if the defect-generating operation is trimmed.\nRule B: it can be eliminated if the defect-generating operation is changed in such a way that the defect is not generated any longer.\nRule C: it can be eliminated if the defect-generating operation is changed in such a way that the defect is generated with another (safe) set of parameters; in this case the defect ceases to be a defect and the need for performing a corrective function is eliminated.\nRule D: it can be eliminated if operations which are harmed by the defect are trimmed.\nRule E: it can be eliminated if operations which are harmed by the defect are changed in such a way that they become insensitive to it; in this case the defect ceases to be a defect and the need for performing a corrective function is eliminated.\nRule F: it can be transferred to the defect-generating operation.\nRule G: it can be transferred to another operation.\n\nTrimming model"
  },
  {
    "objectID": "index.html#overview-44",
    "href": "index.html#overview-44",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe trimming model is created by applying trimming to the function model of the system. Each alternative trimming scenario results in a different model, hence there may be several (theoretically, infinitely many) trimming models deriving from different scenarios.\nAs the trimming model is a function model, it is presented in the same format – either as a table or a graph."
  },
  {
    "objectID": "index.html#procedure-of-creating-a-trimming-model",
    "href": "index.html#procedure-of-creating-a-trimming-model",
    "title": "TRIZ knowledge base",
    "section": "Procedure of creating a trimming model",
    "text": "Procedure of creating a trimming model\nFor both devices and processes, creating a trimming model consists of the following steps:\n\nSelect the component to trim.\nSelect a useful function of that component.\nSelect an appropriate trimming rule.\nPerform trimming according to the selected rule.\nFormulate trimming problems generated by step 4.\nRepeat steps 2-5 for all the functions of the component being trimmed.\nRepeat steps 1-6 for all the components to trim.\n\n\nPartial trimming"
  },
  {
    "objectID": "index.html#overview-45",
    "href": "index.html#overview-45",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nIn simple terms, partial trimming means that the component remains in the system, but redistributing some of its useful functions to other components leads to its “unloading.” This often allows for reducing the component’s cost, size, weight etc.\nThe picture below presents an example. Consider a system component (component 1) that performs three useful functions but is large and heavy. By delegating two of its functions to other component (component 3), it can be made smaller and lighter. Component 1 remains in the system, but after partial trimming, it performs only one function, and its key disadvantages – size and weight – are eliminated.\n\nPartial trimming can be applied to all engineering systems – both devices and processes. Just like with typical trimming, the redistribution of functions follows specific trimming rules, accordingly for devices and processes.\n\nTrimming problem"
  },
  {
    "objectID": "index.html#overview-46",
    "href": "index.html#overview-46",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe trimming problem is usually presented in the form of a question: How will the new function carrier perform the function?\nJust like feature transfer problems and key disadvantages from CECA, trimming problems can be reformulated into key problems, which are the output of the problem-identification stage of the project.\n\nFeature transfer"
  },
  {
    "objectID": "index.html#overview-47",
    "href": "index.html#overview-47",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nFeature transfer is a special tool facilitating the innovative hybridization. It has been designed to improve engineering systems (both devices and processes) by transferring desirable feature(s) from one or more feature-providing systems to the base system.\nLike trimming, feature transfer is a problem-generating tool. It creates problems that have never existed before. Solving these problems leads to entirely new and unexpected solutions.\nFeature transfer is a tool that not only helps reduce the cost of innovation but also minimizes the associated risks, as the required functions already exist in other engineering solutions. From another perspective, this tool expands the range of available resources for addressing key disadvantages of the analyzed engineering system.\nDepending on the goal of the project, future transfer can be used at two different points of the analytical stage:\n\nAt the beginning of the project for new product development when it is used to hybridize the systems identified during benchmarking. This mode of hybridization usually changes the system considerably.\nAfter CECA, as one of the scenarios to handle key disadvantages(trimming is the other one). This mode of hybridization does not change the system much.\n\n\nThe outcome of feature transfer is a set of feature-transfer problems about how to transfer one or more features."
  },
  {
    "objectID": "index.html#feature-transfer-algorithm",
    "href": "index.html#feature-transfer-algorithm",
    "title": "TRIZ knowledge base",
    "section": "Feature transfer algorithm",
    "text": "Feature transfer algorithm\nFeature transfer algorithm is the following:\n\nIdentify the main function of the initial system / component that is being improved.\nFormulate its advantages and disadvantages.\nIdentify the pool of competing systems.\nSelect an alternative system from the pool of the competing systems.\nSelect the base system out of the initial and the alternative systems (the base system is the one that was selected for improvement (transferring a feature to).\nUse CECA to identify the feature in the alternative (feature-providing) system that can eliminate the disadvantage of the base system.\nFormulate the feature transfer problem.\n\nWhen selecting alternative systems for feature transfer, multiple options may be considered. In such cases, the application of each system should be developed separately, and steps 4–7 should be repeated for each."
  },
  {
    "objectID": "index.html#nuances-of-feature-transfer",
    "href": "index.html#nuances-of-feature-transfer",
    "title": "TRIZ knowledge base",
    "section": "Nuances of feature transfer",
    "text": "Nuances of feature transfer\n\nMulti-step feature transfer\nFeature transfer can be highly useful for combining the advantages of different alternative systems. If a solution does not meet the requirements or still has disadvantages, the algorithm can be repeated as many times as necessary until all advantages are consolidated in a single system or all required parameters are achieved.\nNo matter how many systems you are going to combine, work on one case at a time.\n\n\nThree levels of feature transfer\nFeature transfer can be conducted at three levels of engineering complexity. Depending on project conditions, constraints, and the desired level of innovation, the following can be transferred to the base system:\n\na feature along with its physical carrier,\na feature along with its physical carrier, but in the form of a mixture,\na pure feature (without its physical carrier).\n\n\n\nPhysical system integration – transferring the feature along with its carrier\nTransferring the feature along with its physical carrier is the simplest way; however, it is characterized by the lowest level of innovation and patentability.\nThis method is quick and easy but can only be applied if the base system has enough space for the feature-providing component/system.\n\n\n\nMixture - a special case of physical system integration\nMixture is a more advanced form of transferring a feature along with its physical carrier. This approach typically results in more innovative solutions compared to directly transferring a physical component.\nThe method involves breaking down the feature-providing component into small particles and mixing these particles with the corresponding component of the base system. From a macro-level perspective, only the base system component is recognizable, while at a micro level, the particles of the feature-providing component are also present.\n\nMixture is typically considered when there is not enough space in the base system for the feature-providing component. However, a key requirement is that the particles of the feature-providing component must retain the feature intended for transfer. For example, embedding magnet particles in silicone results in magnetic silicone.\n\n\nPure feature transferring\nFor the most innovative solutions, the pure feature transfer is the most desired way. Transferring the feature without any physical component completely blurs the boundary between systems, making their identification no longer possible. Such solutions not only represent the highest level of innovation but also have the greatest potential for patentability.\n\n\n\n\nNeutral (or inert) system\nA neutral (or inert) system is defined as a system whose advantage lies in the absence of the base system’s disadvantage, while its disadvantage is that it does not perform the desired main function. Since a neutral system does not fulfill the intended function, it is typically chosen for its low cost or even for being freely available. Common examples include air, water, sand, etc.\nDuring hybridization, the base system provides the required functionality, while the neutral system neutralizes the drawback, effectively “diluting” its negative impact.\n\nArticles\n\nNeutral system (Inert system)\nBase system\nAlternative system\nCompeting system\nFeature transfer problem\n\n\n\nNeutral system (Inert system)"
  },
  {
    "objectID": "index.html#overview-48",
    "href": "index.html#overview-48",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nNeutral (or inert) system is a type of feature-providing system used in feature transfer.\nIt is defined as a system whose advantage lies in the absence of the base system’s disadvantage, while its disadvantage is that it does not perform the desired main function. During hybridization, the base system provides the required functionality, while the neutral system neutralizes the disadvantage, effectively “diluting” its negative impact.\nSince a neutral system does not fulfill the intended function, it is typically chosen for its low cost or even for being freely available. Common examples include air, water, or sand.\n\nBase system"
  },
  {
    "objectID": "index.html#overview-49",
    "href": "index.html#overview-49",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe term of base system is used in feature transfer.\nThe base system should not be equated with the initial system, as they are not always the same. The initial system is the one from which we start the feature transfer procedure, while the base system is ultimately selected after identifying the pool of alternative systems."
  },
  {
    "objectID": "index.html#recommendations-for-selecting-the-base-system",
    "href": "index.html#recommendations-for-selecting-the-base-system",
    "title": "TRIZ knowledge base",
    "section": "Recommendations for selecting the base system",
    "text": "Recommendations for selecting the base system\nWhen selecting the base system, it is important to remember that it will not necessarily be the initial system. It is recommended to choose the simplest or cheapest system, assuming all other conditions are equal.\nEngineers naturally tend to prefer their own system as the base, either because the project aims to improve it or because it contains the component responsible for the key disadvantage. However, the final decision should be based on the project’s goals and constraints. In some cases – especially when developing a new product – it may be more beneficial to transfer the features of the initial system to an alternative system.\nSometimes, both systems may be strong candidates for the base system. In such cases, it is worth conducting feature transfer for both options, as this can lead to a broader set of potential solutions.\n\nAlternative system"
  },
  {
    "objectID": "index.html#overview-50",
    "href": "index.html#overview-50",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe term of alternative system is used in feature transfer.\nThe alternative systems are selected from the list of competing systems, meaning they always perform the same (or similar) main function. What distinguishes them is that they have exactly opposite advantages and disadvantages (identified in the first step of the feature transfer procedure) compared to the initial system/component that is being improved.\nExamples of the alternative systems can be the following:\n\n\n\n\nCompeting system"
  },
  {
    "objectID": "index.html#overview-51",
    "href": "index.html#overview-51",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe term of competing system is used in feature transfer. These are systems that can potentially provide features needed by the initial system/component that is being improved.\nAt the stage of their identification, main function is the only criterium for selection. A special attention must be given to its correct formulating. A poorly defined main function can lead to incorrect identification of systems (for example, a movie theater and a television are not competitive systems).\nThe competing systems can be found in a similar or entirely different fields, industries, or environments, also in fairytales or sci-fi stories. Their design, scale, or utilized resources can be extremely different.\nA specific case of a competing system is an alternative system."
  },
  {
    "objectID": "index.html#competing-systems-for-devices-and-for-processes",
    "href": "index.html#competing-systems-for-devices-and-for-processes",
    "title": "TRIZ knowledge base",
    "section": "Competing systems for devices and for processes",
    "text": "Competing systems for devices and for processes\nDepending on the project, competing systems can be identified for devices or for processes.\nSome examples for devices can be the following:\n\n\n\n\n\n\n\n\n\nsystem\na hair dryer\na car\na light-bulb\n\n\nmain function\nremoves moisture (liquid)\nmoves things\ngenerates light\n\n\ncompeting systems\na sponge an activated charcoal a heater a centrifugal dryer a paper towel a freeze-dryer an electrolyzer\na boat a shopping bag an elevator a conveyor belt a magnet (for metal objects) a drone a dimensional portal\na glow sticks LED (light-emitting diode) a candle a firefly phosphorescent material Tesla coil a smartphone screen\n\n\n\nAn example of a process can be an aqueous detergent cleaning performed in a washing machine. It has been designed to eliminate adhesive forces between dirt particles and fibers. Some examples of competing systems can be the following:\n\nultrasonic cleaning,\nmicrowave cleaning,\ndry cleaning (with organic solvents),\ncryogenic cleaning (dry ice or liquid nitrogen),\nlaser ablation,\nsupercritical CO₂ cleaning, etc.\n\n\nFeature transfer problem"
  },
  {
    "objectID": "index.html#overview-52",
    "href": "index.html#overview-52",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nJust like trimming problems and key disadvantages from CECA, feature transfer problems can be reformulated into key problems, which are the output of the problem-identification stage of the project.\nThe feature transfer problem is usually presented in the form of a question, for example:\n\nHow to do something?\nHow to make something bigger?\nHow to make someting lighter?\n\n\nKey problem"
  },
  {
    "objectID": "index.html#sources-of-key-problems",
    "href": "index.html#sources-of-key-problems",
    "title": "TRIZ knowledge base",
    "section": "Sources of key problems",
    "text": "Sources of key problems\nKey problems are identified during the problem-identification stage of the project.\nThey are derived using the following tools:\n\ncause effect-chain analysis (CECA),\ntrimming, or\nfeature transfer.\n\n\nIf components directly associated with the key disadvantages are subjected to trimming, trimming problems are generated. Another scenario involves performing a feature transfer on components linked to the key disadvantages, which generates a set of feature transfer problems. Both trimming problems and feature transfer problems are classified as key problems.\nThe key disadvantages identified through CECA that are not further used in trimming or feature transfer are converted into key problems.\nIn projects that aim for minimal changes to the system, particularly complex key problems are addressed using ARIZ."
  },
  {
    "objectID": "index.html#models-of-key-problems",
    "href": "index.html#models-of-key-problems",
    "title": "TRIZ knowledge base",
    "section": "Models of key problems",
    "text": "Models of key problems\nTRIZ operates with 4 types of problem models:\n\nengineering contradiction,\nphysical contradiction,\nsubstance-field model (Su-Field) of the problem, and\nfunction.\n\nDepending on the model, the following tools are used to resolve key problems:\n\n\n\n\n\n\n\n\nmodel of the problem\ntool used to process the problem model\nmodel of solution\n\n\nengineering (technical) contradiction\n1. contradiction (Atshuller) matrix\n1. inventive principle\n\n\nphysical contradiction\n1. algorithm of resolving physical contradiction 2. function-oriented search (FOS) 3. database of scientific effects 4. clone problems application\n1. inventive principle 2. technology identified during FOS 3. scientific effects\n\n\nSu-Field\n1. system of 76 standard inventive solutions\n1. standard inventive solution\n\n\nfunction\n1. function-oriented search (FOS) 2. database of scientific effects\n1. technology identified during FOS 2. scientific effect/phenomenon\n\n\n\n\nS-curve analysis"
  },
  {
    "objectID": "index.html#overview-53",
    "href": "index.html#overview-53",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nPragmatic S-curve analysis evolved from the classical approach originally developed by Altshuller. Experience has shown that the practical application of the method based on the four indicators he proposed often poses significant challenges, and the results of such analysis are not always fully reliable.\nIn the modern approach to the S-curve, both technical and market indicators are considered essential for gaining a more comprehensive understanding of a system’s development. Key factors include the system’s market presence and the behavior of its MPV.\nPragmatic S-curve analysis incorporates an extensive list of indicators that enable precise identification of each stage, along with a set of strategic recommendations tailored to every phase.\n\nInnovative benchmarking"
  },
  {
    "objectID": "index.html#problem-solving-tools",
    "href": "index.html#problem-solving-tools",
    "title": "TRIZ knowledge base",
    "section": "Problem-solving tools",
    "text": "Problem-solving tools"
  },
  {
    "objectID": "index.html#relation-of-the-problem-solving-tool-with-a-problem-model",
    "href": "index.html#relation-of-the-problem-solving-tool-with-a-problem-model",
    "title": "TRIZ knowledge base",
    "section": "Relation of the problem-solving tool with a problem model",
    "text": "Relation of the problem-solving tool with a problem model\nDepending on how the problem has been modeled, the appropriate problem-solving tool is applied. Consequently, the use of a specific tool results in a corresponding model of solution. The table below illustrates these relationships:\n\n\n\n\n\n\n\n\nmodel of the problem\ntool used to process the problem model\nmodel of solution\n\n\nengineering (technical) contradiction\n1. contradiction (Atshuller) matrix\n1. inventive principle\n\n\nphysical contradiction\n1. algorithm of resolving physical contradiction 2. function-oriented search (FOS) 3. database of scientific effects 4. clone problems application\n1. inventive principle 2. technology identified during FOS 3. scientific effects\n\n\nSu-Field\n1. system of 76 standard inventive solutions\n1. standard inventive solution\n\n\nfunction\n1. function-oriented search (FOS) 2. database of scientific effects\n1. technology identified during FOS 2. scientific effect/phenomenon\n\n\n\n\nArticles\n\nSubstance-field modeling\n\nStandard inventive solutions (SIS)\n\nSubstance-field analysis\nSubstance-field model\n\n\nContradictions\n\nEngineering (technical) contradiction\n\nContradiction matrix\n\nTypical parameters\n\n\nPhysical contradiction\n\nAlgorithm for resolving physical contradictions\n\nInventive principle\n\nARIZ\n\nConflicting pair\nProduct\nTool\nARIZ Block 1: Restructuring the original problem\nX-factor\nOperating zone\nOperating time\nMini-problem\nIdeal final result\n\nFunction-oriented search (FOS)\nClone problems application\nDatabase of scientific effects\n\n\n\nSubstance-field modeling"
  },
  {
    "objectID": "index.html#overview-54",
    "href": "index.html#overview-54",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe system of standard inventive solutions (SIS) is a collection of 76 typical technical solutions, developed in the form of substance-field models (so called Su-Fields) representing interactions between substances and fields. It serves as a tool for analyzing and generating solutions to engineering problems. \nThe system was created by Genrikh Altshuller, who, through the analysis of thousands of patents, identified recurring patterns in problem-solving across various technical fields. The history of SIS dates back to the 1970s, when Altshuller and his team developed the first set of 28 standard solutions based on the Su-Field model. The system was further expanded throughout the 1980s, culminating in a set of 76 standards, which Altshuller deemed sufficiently complete. However, he did not rule out the possibility of further expanding the system in the future.\nThus, the list of standard inventive solutions is not finite. Theoretically, new recommendations could be discovered and added, based on emerging technologies and evolving trends in engineering. Nonetheless, the current collection provides a robust foundation for addressing a wide range of technical challenges."
  },
  {
    "objectID": "index.html#structure-of-the-system",
    "href": "index.html#structure-of-the-system",
    "title": "TRIZ knowledge base",
    "section": "Structure of the system",
    "text": "Structure of the system\nThe system of standard inventive solutions contains 76 SISs, which are organized into five classes. Providing the logical structure facilitates efficient navigation and application of solutions to specific types of engineering problems:\n\nClass 1: Building and destruction of Su-Fields,\nClass 2: Development of Su-Fields,\nClass 3: Transition to supersystem and microlevel,\nClass 4: Standard inventive solutions for measuring and detecting, and\nClass 5: Standard inventive solutions on application of SISs."
  },
  {
    "objectID": "index.html#full-list-of-76-standard-inventive-solutions",
    "href": "index.html#full-list-of-76-standard-inventive-solutions",
    "title": "TRIZ knowledge base",
    "section": "Full list of 76 standard inventive solutions",
    "text": "Full list of 76 standard inventive solutions\nThe following text presents the original content developed by G. Altshuller (including pictures).\n\nClass 1: Building and destruction of Su-Fields\nSISs from Class 1 are used to resolve engineering problems by improving interactions and eliminating harmful effects. They are focused on constructing or destroying Su-Field models if the models are incomplete (S1, S2, or F is missing), complete but not working (F is inadequate), or harmful.\nThe class contains 2 sub-classes and 13 SISs.\n\n1.1. Synthesis of a substance-field system\nThe main idea of this sub-class is clearly reflected in SIS 1.1.1: for the synthesis of a workable technical system, it is necessary – in the simplest case – to go from incomplete Su-Field to complete Su-Field. Often, constructing the Su-Field encounters difficulties due to various restrictions on the introduction of substances and fields. Standards 1.1.2 through 1.1.8 show typical workarounds in such cases.\n1.1.1. Synthesis of a substance-field system\nIf there is an object that is not easy to change as required, and the conditions do not contain any limitations on introducing substances and fields, solve the problem by synthesizing an SIS, i.e., by introducing the missing element(s).\n\n1.1.2. Improving interactions by introducing additives into the objects\nIf there is a Su-Field that is difficult to be changed, and there are no restrictions on introducing additives into the available substances, the problem is being solved by transition to the internal complex Su-Field, i.e., by introducing an internal additive to S1 or S2. That increases the controllability or adds the necessary properties to the Su-Field. The additive can be added permanently or temporarily.\n\nS1 is a product, S2 is a tool, S3 is an additive. Brackets denote an inner compound bond (an outer compound bond is denoted without brackets).\n1.1.3. Improving interactions by introducing additives into the system\nIf there is a Su-Field that is difficult to be changed, and there are no restrictions on introducing additives into the available substances, the problem is being solved by transition to the external complex Su-Field, i.e., by introducing an external additive to S1 or S2. That increases the controllability or adds the necessary properties to the Su-Field. The additive can be added permanently or temporarily.\n\n1.1.4. Use the environment to improve interactions\nIf there is a Su-Field that is difficult to be changed, and there are no restrictions on introducing additives into the available substances, the problem is being solved by introducing an additive that is a part of the environment or the supersystem.\n1.1.5. Modify the environment to improve interactions\nIf the external environment does not contain ready substances required to synthesize a Su-Field, these substances can be obtained by replacing the external environment with another one, or by decomposing the environment, or by introducing additives into the environment.\n1.1.6. Providing minimal effect of action\nIf a minimal (measured, optimal) effect of action is required, but it is difficult or impossible to provide it under the conditions of the problem, use a maximal action (either of a field or a substance) while the excess is then removed. Substance excess is removed by a field, while field excess is removed by a substance. The excess is shown by a double line.\n\n1.1.7. Providing maximal effect of action\nIf a maximal effect of action on a substance is required and this is not allowed, the maximal action has to be preserved but directed to another substance attached to the first one.\n\n1.1.8. Use the selectively maximal mode\nIf a selectively maximal action is required (maximal in certain zones, while maintaining the minimal in other zones), the field should be maximal, but:\n1.1.8.1. Selectively maximal mode: maximal field\nIn the first case, we introduce a protective substance where it is necessary to maintain minimal action.\n1.1.8.2. Selectively maximal mode: minimal field\nIn the second case, while having the minimal mode, we selectively introduce substances that locally generate an additional field, for example, thermit compaunds – for thermal action, explosive compaunds for mechanical action.\n\n\n1.2. Destroy Su-Fields\nSub-class 1.2. includes SISs for destruction of Su-Fields and the elimination or neutralization of harmful effects within them.\nThe strongest idea of this sub-class is the mobilization of the necessary elements through the use of the available substance-field resources.\nStandard 1.2.2 is particularly important. According to it, functions of a new substance are performed by modified substances already present in the system.\n1.2.1. Eliminate harmful interaction by introducing a foreign substance\nIf useful and harmful actions appear between two substances in a substance-field system and there is no need to maintain a direct contact between the substances, solve the problem by introducing a third substance between them. The substance should be free or sufficiently cheap.\n\nThe wavy arrow indicates an action that has to be eliminated.\n1.2.2. Eliminate harmful interaction by modifying existing substances\nIf there are useful and harmful actions between two substances, and there is no need to maintain direct contact between the substances, and it is forbidden or inconvenient to use foreign substances, solve the problem by introducing a third substance between the two. In this case, the third substance is to be a modification of the first or second substances.\n\nNote: S3 can be introduced into the system as a ready substance from the supersystem or it can be obtained (by the action of F1 or F2) from S1 or S2. In particular, S3 can be a „void”, bubbles, foam, etc.\n1.2.3. Eliminate harmful action of a field by introducing a sacrificial substance\nIf it is necessary to eliminate the harmful action of a field upon a substance, the problem can be solved by introducing a second substance that draws off upon itself the harmful effect of the field.\n\n1.2.4. Eliminate harmful effects by a new counteracting field\nIf useful and harmful action appear between two substances in a Su-Field, and a direct contact between the substances must be maintained, the problem can be solved by transitioning to a dual substance-field system — the useful effect is provided by the existing field while a new counteracting field neutralizes the harmful action (or transforms the harmful action into a useful action).\n\n1.2.5. “Turning off” a magnetic field\nIf it is necessary to destroy a Su-Field with a magnetic field, the problem is solved by using physical effects that are capable of “switching off” ferromagnetic properties of substances (e.g., by de-magnetizing by a mechanical impact or by heating above the Curie point).\n\n\n\n\nClass 2: Development of Su-Fields\nClass 2 of standard inventive solutions is used to improve the efficiency of the engineering system by introducing minor modifications.\nThis class contains 4 sub-classes and 23 SISs.\n\n2.1. Transition to more sophisticated Su-Field\nAn increase of the efficiency of Su-Fields can be achieved by the transition from simple Su-Fields to more sophisticated ones – chain and double ones. The modifications are relatively small, while the transition ensures the emergence of new qualities and strengthening of the existing ones, primarily the controllability of the system.\n2.1.1. Transition to chain Su-Field\nIf it is necessary to increase the efficiency of the Su-Field, the problem can be solved by transforming S1 or S2 into an independently controlled Su-Field, thus creating a chain Su-Field.\nS3 or S4 can be transformed into another independently controlled Su-Field.\n\n2.1.2. Transition to double Su-Field\nIf the Su-Field is insufficient and the replacement of its elements is unacceptable, the problem can be solved by introducing a second field, hence constructing a double Su-Field that has higher efficiency.\n\n\n\n2.2. Intensification of Su-Fields\nThe general idea behind six SIS of this sub-class is to increase the efficiency of Su-Fields – simple or more sophisticated – without introducing any new fields or substances. This is achieved by the intensified use of the available substance-field resources.\n2.2.1. Transition to more controllable fields\nAn efficiency of Su-Field can be increased by replacing the uncontrolled (or poorly controlled) field with a controlled (well-controlled) field, e.g., replacing the gravity field with a mechanical, mechanical-electric, etc.\n2.2.2. Segmentation of the substance\nAn efficiency of Su-Field can be improved by increasing the degree of segmentation of S1 or S2.\n\nNote:\n\nThe symbol Sm denotes a substance segmented into many small particles (grains of sand, powder, granules, etc.).\nSIS 2.2.1 reflects one of the sub-trends of TESE, i.e, the segmentation of components.\n\n2.2.3. Transition to capillary-porous substance\nA special case of substances segmentation is the transition from solids to capillary-porous substances. This transition is performed along the following line:\n\nmonolith substance\nsubstance with one cavity\nmonolith with many cavities (perforated substance)\ncapillary-porous substance\ncapillary-porous substance with a certain pore structure (and size)\nWith the development of this line, the possibility of introducing a liquid substance into cavities-pores and using physical effects increases.\n\n2.2.4. Dynamization of the Su-Field\nEfficiency of a Su-Field can be improved by increasing the degree of its dynamization, i.e., by transitioning to a more flexible, rapidly changing structure of the system.\n\nNote: A triangular symbol with a wavy line represents a dynamic Su-Field that changes during its operation.\nThe dynamization of S2 usually start with introducing a hinge. Further dynamization runs along the line: one hinge -&gt; many hinges -&gt; flexible substance.\nThe dynamization of F usuall transition from the constant F to pulsating F.\n2.2.5. Changing the structure of the field\nEfficiency of Su-Field can be increased by transitioning from homogeneous or unstructured field to inhomogeneous field or a field with a special structure (constant or variable in time and space).\n\nNote: The # symbol next to the letter F denotes that the field has a special structure variable in time and space.\nIf a substance that is a part of the Su-Field or can be a part of the Su-Field mut have a specific spatial structure, the process should be performed in a field that has a structure corresponding to the required structure of the substance.\n\n2.2.6. Changing the structure of the substance\nEfficiency of Su-Field can be increased by transitioning from homogeneous or unstructured substance to inhomogeneous substance or a substance with a special structure (constant or variable in time and space).\n\nNote: The # symbol next to the letter S denotes that the substance has a special structure variable in time and space.\nIf it is necessary to obtain an intensive thermal effect in the certain places of the system (points, lines), exothermic substances should be introduced in these places beforehand.\n\n\n2.3. Intensification of rhythms coordination\nSub-class 2.3 includes SISs for Su-Fields intensification in particularly economical ways. Instead of introducing or substantially changing substances or fields, the SISs provide for purely quantitative changes – frequencies, sizes, or mass. Thus, a significant new effect is achieved with minimal system changes.\n2.3.1. Coordination of rhythms of the field and the substance\nEfficiency of Su-Field can be improved by coordination of the frequency of the Field with the natural frequency of the Substance.\n2.3.2. Coordination of rhythms of the fields that are used\nIn more sophisticated Su-Field, the frequencies of the Fields that are used should be coordinated.\n2.3.3. Coordination of incompatible or previously independent activities\nWhen two activities, e.g., changing and measuring, are incompatible, one activity can be performed in the pauses of the other. Important: pauses in one action should be filled with the other action.\n\n\n2.4. Fe-Fields (intensified sophisticated Su-Fields)\nFe-Field is a Su-Field where one of the Substances is segmented, has magnetic properties and at least one Field is electromagnetic.\nIntensification can be performed through several typical ways simultaneaously. Su-Fields where the magnetis Substance is segmented is the easiest to intensify.\n2.4.1. Transition to Proto-Fe-Field\nEfficiency of Su-Field can be improved by using a ferromagnetic Substance (as one piece) and a magnetic Field.\n\nNote: This is the SIS that uses ferromagnetic Substance that is not segmented. We talk about the Proto-Fe-Field and other intermediate states.\nThis SIS is applicable not only for simple Su-Fields but also to complex (with an additive), as well as for Su-Fields where the additive is a part of the environment.\n2.4.2. Transition to Fe-Field\nEfficiency of Su-Field can be improved by transition from Su-Field or Proto-Fe-Field to Fe-Field by replacing one of the substances with ferro-particles (or adding ferro-particles like chips, granules, grains, etc.) and using a magnetic or an electromagnetic field.\nThe controlability grows with the increase of the degree of the ferro-particles fragmentation, so the development of Fe-Fields follows the line:\n\ngranules\npowder\nfinely dispersed ferro-particles\nThe controlability also grows with the increase in the degree of fragmentation of the substance into which the ferro-particles are introduced. The development follows the line:\nmonolith substance\ngrains\npowder\nliquid\n\nNote:\nTransition to Fe-Field can be considered a joint application for two SIS – 2.4.1 (Transition to Proto-Fe-Field) and 2.2.2 (Segmentation of the substance).\nHaving turned into Fe-Field, the Su-Field repeats the development cycle, however, at a new level, since Fe-Fields can be characterized by high controllability and efficiency. The SISs of sub-class 2.4 can be considered as types of „isotopes” of SISs of sub-classes 2.1-2.3. Singling out Fe-Fields into their own sub-class is justified (at least at this stage of SIS development) by the exceptional practical significance of Fe-Fields. Additionally, Fe-Fields are more precise research tool for studying rougher Su-Fields and predicting their development.\n2.4.3. Using ferromagnetic fluids\nEfficiency of Fe-Field can be improved by the use of ferromagnetic fluids – colloidal ferro-particles suspended in kerosene, silicone, or water. SIS 2.4.3 can be seen as a last point in the development according to SIS 2.4.2.\n2.4.4. Using capillary-porous substances in Fe-Fields\nEfficiency of Fe-Fields can be improved by using a capillary-porous structure that is characteristic for many Fe-Fields.\n2.4.5. Transition to complex Fe-Field\nIf it is necessary to increase a controllability of the system by transition to Fe-Field, and the replacement of substances by ferro-particles is unacceptable, the transition is performed by introducing additives to one of the substances, hence creating an internal or external complex Fe-Field.\n\n2.4.6. Transition to Fe-Field using the external environment\nIf it is necessary to increase a controllability of the system by transition from Su-Field to Fe-Field, and replacing the substance with ferro-particles (or adding additives to the substance) is unacceptable, then the ferro-particles should be introduced into the external environment and control the system by the magnetic field, hence changing the environment parameters (SIS 2.4.3).\n\nElectrorheological fluids controlled by electric fields can also be used as an external environment.\n2.4.7. Using physical effects\nIt is possible to controll Fe-Fields using physical effects.\n2.4.8. Dynamization of the Fe-Field\nEfficiency of Fe-Field can be improved by increasing the degree of its dimization, i.e., by transitioning to a more flexible, rapidly changing structure of the system.\n\n2.4.9. Changing the Fe-Field structure\nEfficiency of Fe-Field can be increased by transitioning from homogeneous field to inhomogeneous one or from an unstructured field or a field with a special structure (constant or variable in time and space).\n\n2.4.10. Coordination of rhythms of the Fe-Field\nEfficiency of Proto-Fe-Field and Fe-Field can be improved by coordinating rythms of its elements.\n2.4.11. Transition to E-Field (Su-Field with interacting electrical currents)\nIf the introduction of ferromagnets or magnetization of substances is difficult, the interaction of an external electromagnetic field with the direct contact, or induced currents, or the interaction of these currents with each other should be used.\nNote:\n\nIf Fe-Fields are SISs with ferromagnetic particles, then E-Fields are SISs with currents or interacting currents instead of ferromagnetic particles.\nDevelopment of E-Field – similar to Fe-Fields – repeats the general line of Su-Field evolution:\n\n\nsimple E-Field\ncomplex E- Field\nE-Field based on an external environment\ndynamization\nsegmentation/structurization\nrhythm coordination\n2.4.12. Using electro-rheological liquids\nA special type of E-Fields are Su-Fields with electro-rheological suspension (fine non-conducting but electrically active particles), with controlled viscosity. If the ferromagnetic fluids cannot be used, the electro-rheological suspension can be applied.\n\n\n\nClass 3: Transition to supersystem and microlevel\nClass 3 of standard inventive solutions applies to the engineering systems which performance is insufficient. Their efficiency is improved by developing solutions on the different system levels, like the level of supersystem or the microlevel.\nThis class contains 2 sub-classes and 6 SISs.\n\n3.1. Transition to bi- and poly-systems\nAlong with the internal improvement (SISs of Class2), there is a line of external development: at any stage of the internal development, the system can be intergrated with the supersystem components obtaining a new quality.\n3.1.1. Transition to bi- and poly-systems\nAt any stage of the development, efficiency of Su-Field can be increased by the integration of the system with another system (or systems) into a more sophisticated bi-system or a poly-system (system transition 1a).\n3.1.2. Development of links in bi-systems and poly-systems\nIncreasing the efficiency of the synthesized bi-systems and poly-systems can be achieved primarily through the development of links between elements of Su-Field.\nThe newly developed bi-systems and poly-systems often have „no links”, that is, they are just a „pile” of components. The development is aimed at strengthening linking. On the other hand, elements in newly created systems are sometimes connected by rigid links. In these cases, the development is aimed at increasing the degree of dynamization of links.\nno links\nrigid link\nflexible link\nfield link\n3.1.3. Increasing the difference between the elements of bi-systems and poly-systems\nThe efficiency of bi-systems and poly-systems increases with an increase in the difference between the elements of Su-Field (system transition 1b):\n\nidentical elements\nelements with shifted characteristics\ndifferent elements\ninverse combinations of the „element and anti-element”\n3.1.4. Trimming of bi-systems and poly-systems\nEfficiency of bi-systems and poly-systems can be improved by Trimming. Completely trimmed bi-systems and poly-systems become monosystems again. The cycle can be repeated.\n3.1.5. Opposite properties of the system and its parts\nEfficiency of bi-systems and poly-systems can be improved by distributing opposite properties in the system and among its parts. A two-level system is used in which the entire system has property C, and its parts (particles) have property anti-C (system transition 1c).\n\n\n3.2. Transition to microlevel\nThere are two ways of system transition:\n\nthe transition to the supersystem („the way up” – SISs of subclass 3.1),\nthe transition to microlevel („the way down” – SISs of subclass 3.2).\n\n3.2.1. Transition to microlevel\nAt any stage of development, the efficiency of the system can be improved by system transition 2: from the macro level to the micro level, when the system or its part is replaced by a substance capable of performing the required action when interacting with the field.\n\n\n\nClass 4: Standard inventive solutions for measuring and detecting\nClass 4 of standard inventive solutions applies to problems of measuring or detecting.\nThis class contains 5 sub-classes and 17 SISs.\n\n4.1. Bypasses\nIf it is necessary to measure or detect, it is recommended that the principle of operation be changed in such a way that there is no need to measure or detect, maintaining the necessary accuracy and cost.\n4.1.1. Modifying the system so there is no need to measure or detect\nIf it is necessary to measure or detect, it is recommendd that the system be changed in such a way that there is no need to measure or detect.\n4.1.2. Measuring a copy or an image\nIf the problem of detection or measurement cannot be solved using SIS 4.1.1, it is recommended that the direct operation on the object be replaced with operations on its copy. For example, instead of directly measuring the logs loaded on the railway platform, the measurement is done from a photo taken on a specific scale.\n4.1.3. Successive change detection\nIf the problem of detection or measurement cannot be solved using SISs 4.1.1 or 4.1.2, it is recommended to turn it into a successive change detection task.\n\n\n4.2. Creating the measurement Su-Field\nWhen we create Su-Fields for measurement, the strategy should be similar to the case as we create a Su-Field for improvement: complete Su-Field by introducing the missing substances or fields. The difference is that the output ot the measurement Su-Field is a field.\n4.2.1. Creating the measurement Su-Field\nIf a non-Su-Field is difficult to detect or measure, the problem can be solved by creating a simple or double Su-Field with an output field.\n\n4.2.2. Transition to the complex measurement Su-Field\nIf the system (or part of it) is difficult to detect or measure, the problem can be solved by transition to the internal or external complex Su-Field, by introducing easily detectable additives (marks).\n\n4.2.3. Transition to the measurement Su-Field based on the external environment\nIf the system is difficult to detect or measure at some point in time and it is impossible to introduce additives which create an easily detectable and easily measured field, these additives should be introduced into the external environment so that the change in the state of the system can be assessed.\n\n4.2.4. Utilizing resources of the environment\nIf it is impossible to introduce the additives into the external environment (according to SIS 4.2.3), these additives can be obtained by using the resources of the environment, e.g., by decomposing it or changing its physical state (for example, gas or vapor bubbles obtained by electrolysis, cavitation, or other methods).\n\n\n4.3. Intensifying measurement Su-Fields\nThe measurment Su-Field can be intensified by applying physical effects and by coordinating the rhythm.\n4.3.1. Using the physical effects\nThe efficiency of detecting or measuring the Su-Field can be improved by using physical effects.\n4.3.2. Using the resonance of the controlled object\nIf changes in the system cannot be detected or measured directly and it is impossible to pass the field through the system, the problem can be solved by inducing resonance oscillations in the whole system or a part of it. Changing the oscillations frequency can help to identify changes in the system.\n\n4.3.3. Using the resonance of the integrated object\nIf it is not possible to apply SIS 4.3.2, the system condition can be assessed using the change of the natural frequency of an object (in the external environment) integrated with the controlled system.\n\n\n4.4. Transition to measurement Fe-Fields\nMeasurement Su-FIelds strongly tend to transform into Fe-Fields.\n4.4.1. Transition to measurement Proto-Fe-Fields\nSu-Fields with non-magnetic fields tend to transform into Proto-Fe-Fields, that is, Su-Fields with a magnetic substance and a magnetic field.\n4.4.2. Transition to measurement Fe-Field\nIf it is necessary to increase the efficiency of detection or measurement by Proto-Fe-Field or Su-Field, it is necessary to go to Fe-Field. One of the substances can be replaced with ferromagnetic particles or the ferromagnetic additives can be used, then the magnetic field can be detected or measured.\n\n4.4.3. Transition to complex measurement Fe-Field\nIf it is necessary to increase the efficiency of detection or measurement of the system by transition to Fe-Field, and replacing substances with ferromagnetic particles is impossible, then the complex Fe-Field should be created by introducing additives to the substance.\n\n4.4.4. Transition to measurement Fe-Field based on external environment\nIf it is necessary to increase the efficiency of detection or measurement of the system by transition from Su-Field to Fe-Field, and the introduction of ferromagnetic particles is impossible, then the ferromagnetic particles should be introduced into the external environment.\n4.4.5. Using the physical effects\nIf it is necessary to increase the efficiency of detection or measurement of the system, the scientific effects should be used, for example the Curie point, Hopkinson or Barkhausen effects, magnetoelastic effect, etc.\n\n\n4.5. Direction of measurement Su-Fields development\nThe development of measurement Su-Fields is performed through the usual system transitions, but it also has its specific features.\n4.5.1. Transition to measurement bi- and poly-systems\nAt any stage of development, the effectiveness of the measurment Su-Field can be increased by transition to a bi-system or a poly-system.\n4.5.2. Transition to the measurement of derivatives\nMeasurment Su-Fields are developing in the floowing direction:\nfunction measurement\nmeasurement of the first derivative of the function\nmeasurement of the second derivative of the function\n\n\n\nClass 5: Standard inventive solutions on application of SISs\nClass 5 of standard inventive solutions gives recommendations as to how to introduce new substances, fields or scientific effects more effectively when applying SISs in the four previous classes. It provides “helpers” to satisfy constraints of the project.\nThis class contains 5 subclasses and 17 SISs.\n\n5.1. Specifics of introducing substances\nWhen creating, restructuring, or destroing Su-Fields, it is often necessary to introduce new substance. That will deacrease the ideality of the system. Therefore, substances must be „introduced without introducing” and various bypasses should be used.\n5.1.1. Bypass\nIf it is necessary to introduce a substance into the system, and this is prohibited by the problem constraints or is unacceptable due to the operating conditions, then bypasses should be used.\n5.1.1.1. Using a void instead of substance\n5.1.1.2. Using a field instead of substance\n5.1.1.3. Using an external additive instead of an internal one\n5.1.1.4. Using very small doses of a particularly active additive\n5.1.1.5. Using very small doses of a usual additive, but concentrated in separate parts of the object\n5.1.1.6. Using an additive for some time\n5.1.1.7. Instead of an object, use its copy (model) into which an additive can be introduced\n5.1.1.8. Using the additive in the form of a chemical compound, which later released\n5.1.1.9. The additive is obtained by decomposition of an external environment or the object itself, for example, by electrolysis, or by changing the state of aggregate of the external environment or the part of the object\n5.1.2. Separating the product into interacting parts\nIf it is difficult to transform Su-Field and the problem conditions do not allow to replace the tool or to introduce additives, use the product instead of the tool, dividing it into parts that interact with each other.\n5.1.3. Using a substance for a limited time\nAfter the action, the substance introduced into the system should disappear or become indistinguishable from the substance that has previously been in the system or in the external environment.\n5.1.4. Using inflatable structures and foam\nIf it is necessary to introduce a large amount of a substance, and this is prohibited by the system constraints or is unacceptable due to the operating conditions, use a „void” in the form of inflatable structures or foam instead of the substance.\n\n\n5.2. Introducing fields\nWhen creating, restructuring, or destroing Su-Fields, it is often necessary to introduce new fields. In order not to complicate the system, SISs of subclass 5.2 should be used.\n5.2.1. Using the existing fields\nIf it is necessary to introduce a field into the Su-Field, first, the existing fields should be used. The substances of the Su-Field are the carriers of those fields.\n5.2.2. Using the field of the external environment\nIf it is necessary to introduce a field into the Su-Field, and it is not possible according to SIS 5.2.1, use the fields available in the external environment.\n5.2.3. Using existing substances as field sources\nIf it is necessary to introduce a field into the system, and it is impossible according to SISs 5.2.1 and 5.2.2, use the fields that can be generated by the substances present in the system or external environment.\n\n\n5.3. Using phase transitions\nContradictory demands for introduced substances and fields can be satisfied using phase transitions.\n5.3.1. Substituting the phase state of the substance\nThe efficiency of the substance application can be increased without introducing other substances through the phase transition 1, i.e., by changing the state of aggregate of the existing substances.\n5.3.2. The dual phase-state of the substance\n„Dual” properties can be provided by phase transition 2, i.e., the use of substances capable of changing from one phase state to another, depending on the operating conditions.\n5.3.3. Using phenomena accompanying the phase changes\nThe efficiency of the system can be improved by phase transition 3, i.e., the use of phenomena accompanying the phase transition.\n5.3.4. Transition to the two-phase state of the substance\nThe „dual” properties of the system can be provided by a phase transition 4 – replacement of a single-phase state by a two-phase state.\n5.3.5. Using interactions between parts (phases) of the system\nThe system efficiency obtained as a result of phase transition 4 can be increased by introducing an interaction (physical, chemical) between parts (or phases) of the system.\n\n\n5.4. Specifics of using the scientific effects\nMany SISs provide for the use of scientific effects or can be used together with them. In this case, it is necessary to consider some techniques that increase the effectiveness of the scientific effects application.\n5.4.1. Using the reversible physical transformations\nIf an object must periodically be in different physical states, then the transition should be accomplished by the object itself by means of reversible physical transformations, e.g., phase transitions, ionization-recombination, dissociation-association etc.\n5.4.2. Strengthening the output field\nIf a strong output action is required while the input action is weak, the converter-substance should be brought to a near critical state. Energy is stored in the substance and the input signal acts as a „trigger”.\n\n\n5.5. The experimental SISs\n5.5.1. Obtaining the substance particles by decomposition\nIf particles of the substance (i.e., ions) are needed to solve the problem, and their direct generation is impossible due to the problem constraints, then the required particles must be obtained by destroying a substance of a higher structural level (i.e., molecules).\n5.5.2. Obtaining the substance particles by combining\nIf particles of the substance (i.e., molecules) are needed to solve the problem and it is impossible to obtain them directly or according to SIS 5.5.1, then the required particles have to be generated by completing or combining particles of a lower structural level (i.e., ions).\n5.5.3. The simplest methods to obtain the substance particles\nWhen applying SIS 5.5.1, the simplest way is to destroy the nearest higher „whole” or „excess” (negative ions) level, while when using SIS 5.5.2, the simplest way is to complete combining the nearest lower „non-whole” level.\nREFERENCES\n\nG. Altshuller: Find an Idea. Introduction to the theory of inventive problem solving. Novosibirsk.: Nauka Publishers, 1986, ISBN 5-02-029265-6\n\n\n\nArticles\n\nSubstance-field analysis\nSubstance-field model\n\n\nSubstance-field analysis"
  },
  {
    "objectID": "index.html#overview-55",
    "href": "index.html#overview-55",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nIn classical TRIZ, substance-field analysis was used to identify the components (substances and fileds) necessary to model a problem in the form of a Su-Field. However, since cause-effect chain analysis (CECA) became widely used in the analytical phase of projects, this tool has fallen out of common use.\nKey disadvantages identified through CECA clearly point to the substances and fields that form the Su-Field of the problem.\nSimilar to contradictions, the substance-field analysis is used for problem modeling. The tool designed for processing the substance-field models (Su-Fields) of problems is the system of 76 standard inventive solutions (SIS), which leads to solution models represented by selected SISs. In some cases, these solutions can also be presented in the form of Su-Fields. Thus, substance-field analysis is the only TRIZ tool where the model of solution can have the same form as a model the problem.\n\nBasic assumption in the approach is that a minimally functioning system must consist of 3 basic elements:\n1. 2 substances (S), i.e., objects with a rest mass involved in the system, and\n2. a field (F), i.e., entity without a rest mass that establishes an interaction between substances.\nThe substances are closely tied to the key problem that needs to be solved. They can refer to microscopic objects, single components, or the entire technical system. The field is typically one of the types selected from the MATChEM model.\n\nSubstance-field model"
  },
  {
    "objectID": "index.html#overview-56",
    "href": "index.html#overview-56",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nSubstance-field models (Su-Fields) are inspired by chemistry, specifically the way of representing molecules that reflects their composition and bonds. Similarly, Su-Fields aim to explain relationships and functions in technical systems.\nBuilding substance-field models is performed within substance-field analysis.\nBasic assumption in the approach is that a minimally functioning system must consist of 3 basic elements:\n1. 2 substances (S), i.e., objects with a rest mass involved in the system, and\n2. a field (F), i.e., entity without a rest mass that establishes an interaction between substances.\nThe substances are closely tied to the key problem that needs to be solved. They can refer to microscopic objects, single components, or the entire technical system. The field is typically one of the types selected from the MATChEM model."
  },
  {
    "objectID": "index.html#structure-of-a-su-field",
    "href": "index.html#structure-of-a-su-field",
    "title": "TRIZ knowledge base",
    "section": "Structure of a Su-Field",
    "text": "Structure of a Su-Field\nUsually, the model is depicted by a diagram where the substances (S) and the field (F) are shown as nodes, and the interaction is presented as connecting lines or arrows.\n\nSymbols of interactions used in Su-Field models are similar to those used in function modeling for devices:\n\nThe examples can be as follows:"
  },
  {
    "objectID": "index.html#types-of-su-fields",
    "href": "index.html#types-of-su-fields",
    "title": "TRIZ knowledge base",
    "section": "Types of Su-Fields",
    "text": "Types of Su-Fields\nAlthough the substance-field models can represent both problems and (sometimes) solutions, these models are not the same, therefore they are differentiated into:\n\nSu-Fields of problems, and\nSu-Fields of solutions.\n\n\nSu-Fields of problems\nWhen modeling a problem with Su-Field, it is essential to include only those substances and fields that are directly related to the key problem requiring a solution.\nSubstance-field model of the problem may have 1, 2 or 3 elements. Building problem models with more than 3 elements, is incorrect.\nThe following types of Su-Fields are used to model problems:\n1. incomplete Su-Field (needs to be completed),\n2. insufficient, i.e. complete, but ineffective Su-Field (needs to be improved), and\n3. harmful Su-Field (the harmful or excessive action has to be eliminated).\n\nIncomplete Su-Field\nIncomplete Su-Field is a Su-Field representing a model of a problem of lacking one substance, or a field, or substance and a field.\nThe examples of incomplete Su-Fields can be the following:\n\n\n\nInsufficient Su-Field\nInsufficient Su-Field is a Su-Field representing a problem model, which is complete but does not work.\nThe insufficient Su-Field usually models an issue emerging when substance 1 does not respond to the field generated by substance 2.\n\n\n\nHarmful Su-Field\nHarmful Su-Field is a Su-Field which represents a model, in which at least one interaction is harmful or excessive (excessive = normal + harmful excess).\n\n\n\n\nSu-Fields of solutions\nSuFields of solutions may have 3 or more elements.\nExamples of solution models can be the following:\n1. complete Su-Field,\n2. complex Su-Field (internal and external),\n3. chain Su-Field,\n4. double Su-Field,\n5. measurement Su-Field.\n\nComplete Su-Field\nComplete Su-Field represents a model of a solution in which at least two substances and a field are present to create a working technical system or a subsystem.\n\n\n\nComplex Su-Field\nComplex Su-Field is a complete Su-Field with an extra substance (often in the form of an additive) that readily responds to the existing field.\n\nThis type of models is used in class 1.1 (synthesis of Su-Fields), class 2 (development of Su-Fields), and class 4 (standard iInventive solutions for detecting and measuring).\nNOTE! Complex Su-Fields should not be confused with the double and chain Su-Fields. These are different types of models.\n\n\nChain Su-Field\nChain Su-Field is a combination of two or more Su-Fields where one substance participates in two Su-Fields.\n\nThis type of models is used in class 2 (development of Su-Fields).\n\n\nDouble Su-Field\nDouble Su-Field is a Su-Field where two different fields provide interactions between the substances (one substance acts on the second substance with two fields).\n\nThis type of models is used in class 2 (development of Su-Fields).\n\n\nMeasurement Su-Field\nMeasurement Su-Field is a special type of a Su-Field which is used to present models of inventive problems where measurement or detection is required in terms of substance-field analysis. Its uniqueness lies in the fact that it is the only model with 2 fields and 1 substance (input field &gt; substance &gt; output field).\n\nThis type of models is used in class 4 (SISs for detecting and measuring).\n\n\n\nContradictions"
  },
  {
    "objectID": "index.html#overview-57",
    "href": "index.html#overview-57",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nContradictions are parametric models of key problems identified during problem-identification stage of the project. In modern TRIZ, two types of contradictions are used:\n\nengineering (technical) contradiction, and\nphysical contradiction.\n\nThe engineering contradiction involves two different parameters. It represents a situation where improving one parameter leads to the deterioration of another.\nThe physical contradiction, on the other hand, pertains to one parameter with two justified but conflicting requirements imposed on it."
  },
  {
    "objectID": "index.html#relation-between-the-engineering-and-physical-contradiction",
    "href": "index.html#relation-between-the-engineering-and-physical-contradiction",
    "title": "TRIZ knowledge base",
    "section": "Relation between the engineering and physical contradiction",
    "text": "Relation between the engineering and physical contradiction\nEngineering and physical contradictions are directly related as both are formulated from IF-THEN-BUT format.\n\nin the engineering contradiction, the improving parameter is placed in the line THEN, while the worsening parameter – in the line BUT;\nthe physical contradiction concerns the parameter from the line IF, while the contradictory demands can be found in the line THEN.\n\nThe physical contradiction can be formulated based on the engineering contradiction in the following steps:\n\nformulate an engineering contradiction,\ngo to the line IF of the contradiction; the parameter/action/property mentioned in the line IF is the one around which the physical contradiction is formulated,\nthe line THEN of the engineering contradiction is the justification of one of the requirements of the physical contradiction;\nthe line BUT can prompt the justification of the other requirement (inverting the statement in the line BUT provides the justification).\n\nTo formulate the physical contradiction, creating an inverted (alternative) engineering contradiction beforehand can also be very helpful.\nThe conversion also works in the opposite direction. From each physical contradiction, two engineering contradictions can be derived: the basic and the inverted (alternative) one."
  },
  {
    "objectID": "index.html#resolving-the-contradictions",
    "href": "index.html#resolving-the-contradictions",
    "title": "TRIZ knowledge base",
    "section": "Resolving the contradictions",
    "text": "Resolving the contradictions\nFor both types of contradictions, the 40 inventive principles are the recommended models of solutions. However, the ways leading to the specific principles are different:\n\nfor the engineering contradiction, it is the contradiction matrix, also referred to as Altshuller matrix.\nfor the physical contradiction, it is the algorithm for resolving physical conradictions.\n\nAditionally, function-oriented search (FOS), database of scientific effects, and clone problems application can be used for physical contradiction.\n\nArticles\n\nEngineering (technical) contradiction\n\nContradiction matrix\n\nTypical parameters\n\n\nPhysical contradiction\n\nAlgorithm for resolving physical contradictions\n\nInventive principle\n\n\n\nEngineering (technical) contradiction"
  },
  {
    "objectID": "index.html#overview-58",
    "href": "index.html#overview-58",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nWhen solving key problems, methods or technologies are often used that, while improving a specific parameter of a technical system, simultaneously lead to the deterioration of another parameter.\nModeling such a situation as an engineering contradiction is the first step toward solving the problem in a way that not only improves the first parameter but also avoids worsening – or even potentially improves – the second parameter as well.\nModels of solutions for engineering contradictions are inventive principles. The tool that is used to translate the engineering contradiction into inventive principles is contradiction matrix also referred to as Althuller matrix."
  },
  {
    "objectID": "index.html#formulating-the-engineering-contradiction",
    "href": "index.html#formulating-the-engineering-contradiction",
    "title": "TRIZ knowledge base",
    "section": "Formulating the engineering contradiction",
    "text": "Formulating the engineering contradiction\nAn engineering contradiction should be formulated using the IF-THEN-BUT format. That formula provides two parameters that constitute the engineering contradiction for solving:\n\nin the line THEN, the parameter that has to be improved to resolve the problem,\nin the line BUT, the parameter that deteriorates when the technique / approach mentioned in line IF is applied.\n\n\nTo properly formulate a contradiction, it is helpful to follow a specific order of providing the information. Typically, we start with the THEN position, then proceed to IF, and finish with BUT. The red numbers in the picture above indicate the order of filling.\nLet us consider a simple example of a key problem: the table is not strong enough. One way to strengthen it might be by adding additional reinforcing elements, but these increase its weight. The engineering contradiction will be formulated as follows:\n\nUsually, a key problem can be modeled using more than one engineering contradiction. This is typically due to the fact that various technologies can traditionally be applied to solve the problem.\nFor each technology, action, parameter, etc., proposed in the IF row, a separate contradiction should be created.\nFor example, to solve the problem of a weak table, various approaches can be applied: using a stronger material, increasing the thickness of the tabletop, or shaping it into a slightly domed form. Each of these approaches has its own implications, often leading to the deterioration of another parameter. Therefore, a technical contradiction should be formulated for each approach."
  },
  {
    "objectID": "index.html#alternative-engineering-contradiction",
    "href": "index.html#alternative-engineering-contradiction",
    "title": "TRIZ knowledge base",
    "section": "Alternative engineering contradiction",
    "text": "Alternative engineering contradiction\nFor each engineering contradiction, an alternative (opposite or inverted) one can be formulated. The following example presents a procedure for creating it:\n\nThe alternative contradiction should contain the same parameters as the base one, but the problem it models is different. Since the contradiction matrix is not symmetrical, the inverted engineering contradiction supports generating more ideas and can lead to solutions that help to achieve the goal of the project. It is also very helpful in formulating the physical contradiction."
  },
  {
    "objectID": "index.html#the-algorithm-for-an-engineering-contradiction",
    "href": "index.html#the-algorithm-for-an-engineering-contradiction",
    "title": "TRIZ knowledge base",
    "section": "The algorithm for an engineering contradiction",
    "text": "The algorithm for an engineering contradiction\nAn algorithm to deal with the engineering contradiction is the following:\n\n\nArticles\n\nContradiction matrix\n\nTypical parameters\n\n\n\nContradiction matrix"
  },
  {
    "objectID": "index.html#overview-59",
    "href": "index.html#overview-59",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nContradiction matrix is a problem-solving tool that connects a problem modeled as an engineering contradiction with the statistically most frequently used inventive principles, which are generalized solution models for contradictions.\n\nThe traditional Altshuller matrix is a table from which the numbers of inventive principles are read. For user convenience, we have designed an interactive tool that significantly simplifies the process. Click the button below to use it.\nCONTRADICTION MATRIX\nAfter converting the two specific parameters from the contradiction into the typical parameters, a set of recommended inventive principles can be found in the matrix. Once the set of the inventive principles is identified, brainstorm around them to develop a solution.\nNote that the principles listed in a given cell of the matrix are the statistically most frequently used ones, but this does not mean that solutions cannot be found outside of them. Therefore, if the results obtained from the matrix are unsatisfactory, it is worth exploring and considering other principles."
  },
  {
    "objectID": "index.html#structure-of-the-contradiction-matrix",
    "href": "index.html#structure-of-the-contradiction-matrix",
    "title": "TRIZ knowledge base",
    "section": "Structure of the contradiction matrix",
    "text": "Structure of the contradiction matrix\nA traditional contradiction matrix contains 39 typical parameters on both the vertical and the horizontal axes:\n\nthe vertical axis represents a list of parameters that need to be improved to resolve the problem,\nthe horizontal axis represents a list of parameters that are worsening when we introduce specific technology.\n\nThe parameters are listed in the same order, both in the rows and in the columns.\nOn the crossing of the corresponding rows and columns, there are cells containing numbers of recommended inventive principles.\nThe following picture presents an example:\n\nThe boxes in the matrix can contain 4, 3, 2, or 1 principle, some of them are empty.\nThe order of principles within the cells does not indicate any preferences. All recommended principles are equally important, and their sequence simply reflects the fact that Altshuller added them as he discovered them during his research.\nThe empty cells in the matrix indicate that no inventive principle has been identified as statistically more frequently used than others. In such cases, any of the 40 principles can be applied equally, without preference.\nThe contradiction matrix is not symmetrical. Improving parameter A, while parameter B is deteriorating, results in different inventive principles than improving parameter B and deteriorating A.\n\nArticles\n\nTypical parameters\n\n\nTypical parameters"
  },
  {
    "objectID": "index.html#overview-60",
    "href": "index.html#overview-60",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nTo work with the contradiction matrix, the improving and worsening parameters in an engineering contradiction must be expressed in the form of typical parameters included in the matrix. Due to the diversity of engineering fields, reducing the specific parameters to typical ones is a fundamental aspect of the universality of the Altshuller matrix\nSometimes, a specific parameter may already align with a standard parameter. However, if it does not, conversion is necessary. This applies to both the vertical and horizontal axes of the matrix.\nBelow, we have provided a complete list of 39 standard parameters, along with examples of specific parameters most commonly associated with them. Keep in mind that the list of specific parameters is not definitive, and each problem should be approached individually.\nKeep in mind that our examples are merely suggestions. If you believe your specific parameters can be better expressed using other typical parameters, feel free to do so. This may only increase the number of solution concepts generated.\nA good practice is to create several combinations of different standard parameters that fit the formulated contradiction and use the contradiction matrix for each pair. This results in multiple sets of recommendations, each of which should be considered as a potentially best guideline."
  },
  {
    "objectID": "index.html#typical-parameters-2",
    "href": "index.html#typical-parameters-2",
    "title": "TRIZ knowledge base",
    "section": "39 typical parameters",
    "text": "39 typical parameters\nNote that in several cases, the typical parameters distinguish between a moving object and a stationary object. A moving object is one that stays in motion or changes position relative to another object involved in the problem. This movement can vary – it might be caused by external forces or happen on its own, and it can be linear, rotational, very small, or cover a large distance. Common examples include items designed to be portable. In contrast, the stationary object remains completely still relative to the other object in the problem, with no movement between them.\n\nWeight of moving object\n\nThe mass or force of gravity exerted – by pressure or suspension – by a moving object.\nCan be related to: ballast, gravity, load, buoyant force, heaviness, mass, burden, heft, pressure, bulk, lightweight, tonnage, floating, lightness.\n\nWeight of stationary object\n\nThe mass or force of gravity exerted – by pressure, suspension, or the surface on which it rests – by a stationary object.\nCan be related to: ballast, gravity, load, buoyant force, heaviness, mass, burden, heft, pressure, bulk, lightweight, tonnage, floating, lightness.\n\nLength of moving object\n\nAny linear or angular dimension relating to a moving object, not necessarily the longest.\nCan be related to: altitude, distance, range, amplitude, extent, span, breadth, gap, stretch, circumference, girth, spread, cross measure, height, tolerance, depth, length, width, diameter, radius.\n\nLength of stationary object\n\nAny linear or angular dimension relating to a stationary object, not necessarily the longest.\nCan be related to: altitude, distance, range, amplitude, extent, span, breadth, gap, stretch, circumference, girth, spread, cross measure, height, tolerance, depth, length, width, diameter, radius.\n\nArea of moving object\n\nCharacteristics related to surfaces or surface area of a moving object, either internal or external. They may include the square measure of the surface of the object, the part of a surface occupied by the object, or a contact area of the objects.\nCan be related to: contact area, porosity, space, dimensions, region, square, expanse, section, surface, field, sector, territory, point-contact, size, zone.\n\nArea of stationary object\n\nCharacteristics related to surfaces or surface area of a stationary object, either internal or external. They may include the square measure of the object’s surface, the part of a surface occupied by the object, or a contact area of the objects.\nCan be related to: contact area, porosity, space, dimensions, region, square, expanse, section, surface, field, sector, territory, point-contact, size, zone.\n\nVolume of moving object\n\nAny characteristics related to the cubic measure of space occupied by the moving object or the space around it.\nCan be related to: 3D dimensions, compactness, size, amount / quantity of substance, cubic measure, shrinkage, flow amount, space, aggregate, oversize, swelling, bulk, room, void, capacity.\n\nVolume of stationary object\n\nAny characteristics related to the cubic measure of space occupied by the stationary object or the space around it.\nCan be related to: 3D dimensions, compactness, size, amount / quantity of substance, cubic measure, shrinkage, flow amount, space, aggregate, oversize, swelling, bulk, room, void, capacity.\n\nSpeed\n\nThe velocity or speed of an object or the rate of any kind of process or action in time, focused on issues of dynamics rather than output of product (see: 30. Productivity). The speed may be relative or absolute, linear, or rotational.\nCan be related to: acceleration, rapidity, slowness, deceleration, rate, speedup, latency, rush, takt time, pace, slowdown, tardiness.\n\nForce (Intensity)\n\nForce measures the interaction between systems. In Newtonian physics, force = mass x acceleration. Here, it is any interaction that is intended to change an object’s condition. Can be linear or rotational.\nCan be related to: action, intensity, stiction, change of momentum, lift, stress, momentum, load, tension, drag, thrust, effort, pull, torque, friction, push, traction, grip, reaction, twist, inertia, shear, voltage.\n\nStress or Pressure\n\nForce exercised per unit area. Stress is the effect of forces on an object. Stresses can be tensile or compressive, static, or dynamic. Parameter also includes strain provided length is not the main issue.\nCan be related to: chemical fatigue, overload, strain, compression, plasticity, tension, creep, stacking-load weight, thermal fatigue, elasticity, vacuum, fatigue.\n\nShape\n\nThe internal or external contour or profile of a component or assembly required for ergonomic or functional rather than aesthetic reasons.\nCan be related to: asymmetry, line, roughness, contour, outline, silhouette, curvature, pattern, smoothness, form, porosity, symmetry, flatness, profile, unevenness, geometry.\n\nStability of the object composition\n\nThe wholeness or integrity of the system; relation of its constituent elements. It applies to both macro (component) and micro (atomic) level parameters.\nCan be related to: chemical decomposition, delamination, integrity, dissociation, oxidation, consistency, distortion, rusting, deformation, droop, solidity, desired/undesired, entropy, structure, homogeneity, sustainability, inertness, wear, instability.\n\nStrength\n\nThe degree to which an object is able to resist change in response to a mechanical force. Break resistance. May be elastic limit, plastic limit, or final strength; stretching or compression; linear or rotary.\nCan be related to: bond, fatigue, rigidity, creep, hardness, robustness, distortion, join, stillness, droop, resistance, tolerance.\n\nDuration of action of moving object\n\nThe time that the moving object or the system needs to perform the action. The duration of action is arbitrary – from a few milliseconds to few hours, to several years or even more.\nThe parameter differs from 35. Reliability, which is related to the time to system failure – in this case it is specifically only the duration aspect.\nCan be related to: (time) countdown, natural frequency, reaction-time, delay, mode, response-time, frequency, period, service life, interval, phase, time-span, life, rate, time-consumption.\n\nDuration of action of stationary object\n\nThe time that the non-moving object or the system needs to perform the action. The duration of action is arbitrary – from a few milliseconds to few hours, to several years or even more.\nThe parameter differs from 27. Reliability, which is related to the time to system failure – in this case it is specifically only the duration aspect.\nCan be related to: (time) countdown, natural frequency, reaction-time, delay, mode, response-time, frequency, period, service life, interval, phase, time-span, life, rate, time-consumption.\n\nTemperature\n\nMeasured or perceived thermal condition of the object or the system. Includes other thermal parameters, that affect the rate of change of temperature.\nCan be related to: boiling point, isolation, radiation, cooling, freezing/melting point, thermal capacity, heating, thermodynamic equilibrium, hot, overheating.\n\nIllumination intensity\n\nThe light flux per unit area, as well as all other characteristics related to the color or quality of light, etc. The parameter applies to the light source.\nCan be related to: colour, light spectrum, saturation, contrast, lustre, shade, darkness, matt, shiny, emissivity, obscuration, tone, invisibility, reflection, transparency, light intensity, reflectivity, visibility.\n\nUse of energy by moving object\n\nA measure of a moving object’s capacity to perform work. This parameter focuses on the actual amount of energy needed to perform a specific job, not on the efficiency of its use. It concerns the use of energy provided by the supersystem (e.g., electricity or heat).\nCan be related to: power consumption, cooling, heat-input, calories, current, heating, calorific value, fuel consumption.\n\nUse of energy by stationary object\n\nA measure of a stationary object’s capacity to perform work. This parameter focuses on the actual amount of energy needed to perform a specific job, not on the efficiency of its use. It concerns the use of energy provided by the supersystem (e.g., electricity or heat).\nCan be related to: power consumption, cooling, heat-input, calories, current, heating, calorific value, fuel consumption.\n\nPower\n\nThe rate at which work is performed. The rate of use of energy. Rate of energy output.\nCan be related to: action intensity, horse-power, voltage, current, shaft horse-power, Wattage, energy.\n\nLoss of energy\n\nLoss or waste of energy that does not contribute to the performance of any useful function. It can be partial or complete, permanent, or temporary.\nCan be related to: cooling down, inefficiency, resistance, damping, interference, slowing down, dissipation, isolation, stiction, friction, long flow, turbulence, heat loss, muting, weakening, weariness.\n\nLoss of substance\n\nLoss or waste of elements of a system or its surroundings – substances, materials, parts, sub-systems, products, fields, etc. Can be partial or complete, permanent, or temporary.\nCan be related to: abrasion, erosion, wear, absorption, evaporation, waste, corrosion, leakage, poorly transferable flow of substance, degradability, obstruction, deposition, oxidation, desorption, seal.\n\nLoss of information\n\nLoss or waste of data or access to data in or by a system. Includes sensory data associated with any of the 5 senses – visual, auditory, kinesthetic, olfactory, or gustatory (VAKOG). Can be partial or complete, permanent or temporary.\nCan be related to: aroma, jamming, obscuration, corruption, lack of knowledge, opacity, communication issue, lack of feedback, poorly transferable information flow, measurement inaccuracy, grey zone, white spot, interference, misunderstanding.\n\nLoss of time\n\nTime (duration of an activity) inefficiencies. Improving the loss of time means reducing the time taken for the activity. Can be partial or complete, always, or occasional.\nCan be related to: bottleneck, slack time, time lag, delay, stagnant zone, waiting time, duplication of effort, time lost on redundant or unnecessary activities, reaction-time, response-time, idle time, latency.\n\nQuantity of substance\n\nThe amount, quantity, or number of a system’s materials, substances, parts, fields, or sub-systems. The “substance” is used here in its most general form and includes any physical or temporal “thing”.\nCan be related to: absorbency, density, particle, amount, flesh, stuff, mass, flow amount, volume, count, matter.\n\nReliability\n\nA system’s ability to perform its intended functions in predictable ways and conditions. Also includes durability and issues related to the performance or degradation in performance of an object or system over long periods.\nCan be related to: durability, life-cycle, Mean-Time-Between-Overhaul (MTBO) failure-rate, Mean-Time-Between-Failure (MTBF) maintenance, in-service, integrity, life, service-time, through-life-cost.\n\nMeasurement accuracy\n\nDegree of precision or accuracy. The closeness of a measured value to an actual value of a property of a system. Reducing the error in a measurement improves the accuracy of the measurement.\nCan be related to: consistency, median, punctuality, error, mode, standard deviation, exactness, precision, tolerance, mean.\n\nManufacturing precision\n\nThe extent to which the actual characteristics of the system or object match the specified or required characteristics.\nCan be related to: accuracy, quality assurance, surface finish, exactness, repeatability, tolerance, indefiniteness, sigma level, variation (6 Sigma), looseness, standard deviation.\n\nObject-affected harmful factor\n\nThis parameter is designed as a catch-all for any form of action or phenomenon in or around a system that manifests itself as a harmful effect on something in the system. Susceptibility of a system to externally generated (harmful) effects.\nCan be related to: adhesion, mold impact, sun-damage, contamination, oxidization, vulnerability, corroding, resilience, warpage, dust ingestion, undesired effect, weakening, erosion, sticking, weather impact.\n\nObject-generated harmful factor\n\nA harmful effect that reduces the performance or quality of the operation of an object or system. These harmful effects are generated by the object or system as part of its operation. It can also be any form of pollution or emission to the environment generated by an object or system.\nCan be related to: abrasion, noise, undesirable side effect, contamination, pollution, fumes emission, radioactivity, unburned hydro-carbons waste, infection, radiation, greenhouse gases emission, toxic by-products.\n\nEase of manufacture\n\nIssues related to manufacture, fabrication, and assembly of the object or system. The degree of facility, comfort or effortlessness in manufacturing or fabricating the object/system.\nCan be related to: assembly, degree of automation / robotization, machine-setting time, convenience of manufacture, tool-change, unchangeableness.\n\nEase of operation\n\nThe extent to which the user is able to learn to operate, to operate, or to control the system, object, or process. Convenience of use.\nThe process is NOT easy if it requires a large number of people, a large number of steps, special tools, etc. In opposite to „difficult” processes, the „easy” processes are high-efficient and easy to do them right.\nCan be related to: competencies, handiness knowledge, setup-time, controllability, simplicity, ease of transport, availability, tool-availability, ease-of-use, learning-curve, training, ergonomics, movability, transportability, familiarization- time, remote control, usability.\n\nEase of repair\n\nCharacteristics such as convenience, comfort, simplicity, and time to repair faults, failures, or defects of the system. Includes issues related to the need for special tools or equipment required for repair. Also consider the conditions for an on-site and remote repair.\nCan be related to: accessibility, interchangeability, removability, assembly, maintenance, replaceability, convenience of repair, modularity, updatability, recoverability, upgradability, disassembly, remote access, uptime, ergonomics.\n\nAdaptability or Versatility\n\nThe extent to which a system/object is able to respond to external changes. Also, relates to a system capable of being used in multiple ways or under a variety of circumstances. Flexibility of operation or use.\nCan be related to: agility, inadaptability, switching, compliance, modulation, tolerance, customizability, plasticity, trainability, evolution, responsivity, universality, flexibility, rigidity, variation.\n\nDevice complexity\n\nThe number and diversity of elements and element interrelationships within and across the boundaries of a system. The user may be an element of the system that increases the complexity. Includes issues like number of functions, number of interfaces and connections, excessive number of components. Also, the complexity of the control system – either physical components or the algorithms that it contains.\nCan be related to: differential, modularity, positive feedback, homogeneity, negative feedback, proportionality, integrity, obviousness, seamless, interfaces, part count, simplification, invariability, plainness, uniformity.\n\nDifficulty of detection\n\nDifficulty in performing measurements on an object or system. Measurement or monitoring systems that are complex, costly, time-consuming, and labor-intensive to set up and use, or that have complex relationships between components or interfering components show „difficulties in detecting and measuring”. The rising cost of measurement to a satisfactory error is also a sign of increased measurement difficulty.\nCan be related to: access, disturbance, location, availability, exactness, precision, ability to find the right parameter to measure, inaccessibility, repeatability, integrity, tolerance, interference, visibility, consistency, lag, variability, disappearance, latency.\n\nExtent of automation\n\nThe ability of a system or object to perform its functions without human interface or intervention. The lowest level of automation is the use of a manually operated tool. For intermediate levels, humans program the tool, observe its operation, and interrupt or re-program as needed. For the highest level, the machine senses the operation needed, programs itself, and monitors its own operations.\nCan be related to: algorithmic, man-in-the-loop / man-out-of-the-loop, programmability, computerization level, robotization, quality assurance, de-skilling, manual control, repeatability.\n\nProductivity\n\nThe number or amount of useful functions or operations (useful output) performed by a system per unit time. The time per unit function or operation. Cost per unit output.\nIt is not focused on issues of dynamics (see: 14. Speed).\nCan be related to: bottlenecks, number of, throughput, capacity, operations, value, expenses, output, value-adding, extra processing steps, overproduction, operations, performance, yield.\nREFERENCES:\n\nE. Domb, The 39 Features of Altshuller’s Contradiction Matrix,\nR. Platt, 39 Parameters – Definitions,\nD. Mann, Matrix 2010: Re-updating the TRIZ Contradiction Matrix, IFR Press, 2009.\n\n\nPhysical contradiction"
  },
  {
    "objectID": "index.html#overview-61",
    "href": "index.html#overview-61",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nA physical contradiction refers to a situation where a single parameter of an object is subjected to two conflicting requirements. The focus on a single parameter distinguishes it from an engineering contradiction (which involves two different parameters). However, both types of contradictions are directly interconnected and can be derived from one another.\nNote that if one of the required parameter states cannot be justified, then there is no physical contradiction, rather you have a solution.\nThe physical contradiction is more precise than the engineering contradiction because the problem is modeled using a parameter belonging to only one component. This makes it clear from the outset which component should be addressed with the recommendations derived from TRIZ.\nModels of solutions for the physical contradictions are inventive principles. The tool that is used to translate the engineering contradiction into inventive principles is the algorithm for resolving physical conradictions."
  },
  {
    "objectID": "index.html#format",
    "href": "index.html#format",
    "title": "TRIZ knowledge base",
    "section": "Format",
    "text": "Format\nThe general format used for the physical contradiction is the following:\n\nAn example can be the following:\n\n\nArticles\n\nAlgorithm for resolving physical contradictions\n\n\nAlgorithm for resolving physical contradictions"
  },
  {
    "objectID": "index.html#overview-62",
    "href": "index.html#overview-62",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nSeveral problem-solving tools can be used to solve physical contradictions; however, the algorithm is the most commonly applied. The choice of a specific approach leads to a corresponding set of inventive principles. These are the same inventive principles included in the contradiction matrix but grouped differently.\nOnce the appropriate set of inventive principles for a given contradiction is identified, a brainstorming session is conducted around them to propose specific solutions."
  },
  {
    "objectID": "index.html#approaches-of-resolving-physical-contradictions",
    "href": "index.html#approaches-of-resolving-physical-contradictions",
    "title": "TRIZ knowledge base",
    "section": "Approaches of resolving physical contradictions",
    "text": "Approaches of resolving physical contradictions\nThe key approach to solving physical contradictions involves separating the conflicting requirements in space, time, relation, or direction. To achieve this, appropriate control questions are asked. This helps filter the methods for separating conflicting demands that are applicable in the given case. Separation at the system level is a slightly different approach. It is the only method that does not require asking any control questions and is recommended in each case.\nIf separating the conflicting requirements is not possible, satisfying both demands should be explored.\nThe final approach is to resolve the problem by completely bypassing the contradictory demands.\n\nSeparating and satisfying contradictory demands lead to specific sets of inventive principles; for bypassing any principle can be applied.\nProblems should be modeled in multiple ways. The more problem models are created, the more solution models are generated, which in turn leads to a greater number of ideas.\nEach specific physical contradiction represents a unique situation. In some cases, all approaches may work, while in others, only a few – or even just one – may be applicable. If conflicting requirements can be separated in different ways, it is worth exploring all possible variants. Even if separation yields good ideas, it is recommended to also consider satisfying and bypassing approaches.\n\nSeparating the contradictory demands\nSeparating is the most frequently used method. There are five ways to separate contradictory demands:\n\nSeparating in space\ncontrol question: where?\nThe approach is applicable if answering the control question reveals that the contradictory demands are applied to different places in space.\nThe recommended inventive principles to separate the contradictory demands in space:\nPrinciple 1. Segmentation\n\nDivide the object into independent parts.\nMake the object easy to disassemble.\nIncrease the degree of fragmentation or segmentation of the object.\n\nPrinciple 2. Separation\n\nSeparate any interfering parts or properties from the object, or single out the only necessary part (or property) of the object.\n\nPrinciple 3. Local quality\n\nChange the object’s structure from uniform to non-uniform, change the external environment (or external influence) from uniform to non-uniform.\nEnsure that each part of the object functions in conditions most suitable for its operation.\nEnsure that each part of the object fulfills a different and useful function.\n\nPrinciple 7. “Nested doll”\n\nPlace one object inside another; place each object, in turn, inside the other.\nPass one part through a cavity in the other.\n\nPrinciple 4. Asymmetry\n\nChange the shape of the object from symmetrical to asymmetrical.\nIf the object is asymmetrical, increase its degree of asymmetry.\n\nPrinciple 17. Transition to another dimension\n\nMove the object in two- or three-dimensional space.\nUse a multistory arrangement for the objects instead of a single-story arrangement.\nTilt or re-orient the object, put it on its side.\nUse a different side of the given area.\n\n\n\nSeparating in time\ncontrol question: when?\nIt is applicable if answering the control question reveals that the contradictory demands are required at different moments in time.\nThe recommended inventive principles to separate the contradictory demands in time:\nPrinciple 9. Preliminary anti-action\n\nIf it is necessary to perform an action with both harmful and useful effects, a counteraction should be performed first to control the harmful effects.\nCreate stresses in the object in advance to oppose known undesirable working stresses later on.\n\nPrinciple 10. Preliminary action\n\nMake any changes in the object (either fully or partially) before such changes are required.\nPre-arrange objects so that they can be quickly activated without losing time delivering them.\n\nPrinciple 11. In-advance cushioning\n\nPrepare an emergency equipment beforehand to compensate for any objects that are not reliable.\n\nPrinciple 15. Dynamization\n\nAllow changes (or design such changes) in the characteristics of the object, external environment, or process that optimize the object, or that optimize the operating conditions.\nDivide the object into parts capable of moving relative to each other.\nIf the object (or process) is rigid or inflexible, make it movable or adaptable.\n\nPrinciple 34. Discarding and recovering\n\nEliminate portions of the object that have fulfilled their function (discard by dissolving, evaporating, etc.) or modify these during the operation of the object.\nConversely, restore consumable parts of the object during the operation of the object.\n\n\n\nSeparating in relation (conditions)\ncontrol question: for whom / for what object?**\nThis approach is applicable if answering the control question reveals that the contradictory demands are applied for different objects.\nThe recommended inventive principles to separate the contradictory demands in relation:\nPrinciple 3. Local quality\n\nChange the object’s structure from uniform to non-uniform, change the external environment (or external influence) from uniform to non-uniform.\nEnsure that each part of the object functions in conditions most suitable for its operation.\nEnsure that each part of the object fulfills a different and useful function.\n\nPrinciple 17. Transition to another dimension\n\nMove the object in two- or three-dimensional space.\nUse a multistory arrangement for the objects instead of a single-story arrangement.\nTilt or re-orient the object, put it on its side.\nUse a different side of the given area.\n\nPrinciple 19. Periodic action\n\nInstead of continuous action, use periodic or pulsating actions.\nIf an action is already periodic, change the periodic magnitude or frequency.\nUse pauses between impulses to perform a different action.\n\nPrinciple 31. Porous materials\n\nMake the object porous or add porous elements (inserts, coatings, etc.).\nIf the object is already porous, use the pores to introduce a useful substance or function.\n\nPrinciple 32. Color changes\n\nChange the color of the object or its external environment.\nChange the transparency of the object or its external environment.\n\nPrinciple 40. Composite materials\n\nChange from uniform to composite (multiple) materials.\n\n\n\nSeparating in direction\ncontrol question: in what direction?**\nIt is applicable if answering the control question reveals that the contradictory demands are applied for different directions of action.\nThe recommended inventive principles to separate the contradictory demands in direction:\nPrinciple 4. Asymmetry\n\nChange the shape of the object from symmetrical to asymmetrical.\nIf the object is asymmetrical, increase its degree of asymmetry.\n\nPrinciple 14. Spheroidality – curvature\n\nInstead of using rectilinear parts, surfaces, or forms, use curvilinear ones; change from flat surfaces to spherical ones; from cube-shaped (paralllelepiped) parts to ball-shaped structures.\nUse rollers, balls, spirals, domes.\nGo from linear to rotary motion; use centrifugal forces.\n\nPrinciple 17. Transition to another dimension\n\nMove the object in two- or three-dimensional space.\nUse a multistory arrangement for the objects instead of a single-story arrangement.\nTilt or re-orient the object, put it on its side.\nUse a different side of the given area.\n\nPrinciple 32. Color changes\n\nChange the color of the object or its external environment.\nChange the transparency of the object or its external environment.\n\nPrinciple 35. Parameter changes\n\nChange the object’s physical state (e.g., to a gas, liquid, or solid).\nChange the concentration or consistency.\nChange the degree of flexibility.\nChange the temperature.\n\nPrinciple 40. Composite materials\n\nChange from uniform to composite (multiple) materials.\n\n\n\nSeparating at the system level\nThere is no control question related to separation at the system level. This approach may always be applied\nThe recommended inventive principles to separate the contradictory demands at the system level:\nPrinciple 1. Segmentation\n\nDivide the object into independent parts.\nMake the object easy to disassemble.\nIncrease the degree of fragmentation or segmentation of the object.\n\nPrinciple 5. Merging\n\nBring closer together (or merge) identical or similar objects, assemble identical or similar parts to perform parallel operations.\nMake operations contiguous or parallel; bring them together in time.\n\nPrinciple 12. Equipotentiality\n\nIn any potential field, limit position changes (e.g., change operating conditions to eliminate the need to raise or lower objects in a gravity field).\n\nPrinciple 33. Homogeneity\n\nMake objects interacting with any given object of the same material (or material with identical properties).\n\n\n\n\nSatisfying the contradictory demands\nSatisfying contradictory demands is much less frequently used then separation.\nAs the name suggests, in this approach – similarly to separation – both demands are also met, but now simultaneously. Recommendations for this approach are often related to the use of so-called smart materials and scientific effects.\nThe recommended inventive principles to satisfy the contradictory demands:\nPrinciple 13. The other way around\n\nInvert the action(s) taken to solve the problem (e.g., instead of cooling the object, heat it).\nMake movable parts (or the external environment) stationary, and stationary parts movable.\nTurn the object (or process) “upside down”.\n\nPrinciple 28. Mechanics substitution\n\nReplace mechanical means with sensory (optical, acoustic, taste or smell) means.\nUse electric, magnetic and electromagnetic fields to interact with the object.\nChange from static to movable fields, from unstructured fields to structured.\nUse fields in conjunction with field-activated (e.g., ferromagnetic) particles.\n\nPrinciple 35. Parameter changes\n\nChange the object’s physical state (e.g., to a gas, liquid, or solid).\nChange the concentration or consistency.\nChange the degree of flexibility.\nChange the temperature.\n\nPrinciple 36. Phase transitions\n\nUse phenomena occurring during phase transitions (e.g., volume changes, loss or absorption of heat, etc.).\n\nPrinciple 37. Thermal expansion\n\nUse thermal expansion (or contraction) of materials.\nIf thermal expansion is being used, use multiple materials with different thermal expansion coefficients.\n\nPrinciple 38. Strong oxidants\n\nReplace air with oxygen-enriched air.\nReplace enriched air with pure oxygen.\nExpose air or oxygen to ionizing radiation.\nUse ozonized oxygen.\nReplace ozonized (or ionized) oxygen with ozone.\n\nPrinciple 39. Inert atmosphere\n\nReplace a normal environment with an inert one.\nAdd neutral parts, or inert additives to the object.\n\n\n\nBypassing the contradictory demands\nBypassing contradictory demands is the least used method of resolving physical contradictions. It is usually used when separating or satisfying contradictory demands doesn’t work.\nThe approach is based on changing the engineering system so that the physical contradiction becomes irrelevant and does not need to be resolved anymore, e.g. finding different ways of performing the desired function.\nThere are no inventive principles assigned to this method, which means that all principles can be applied.\n\nInventive principle"
  },
  {
    "objectID": "index.html#overview-63",
    "href": "index.html#overview-63",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe inventive principles are proposed models of solutions for both engineering contradictions and physical contradictions. Depending on the type of contradiction, and thus the tool used to process it, a different set of principles will be proposed to solve the problem. In other words, the contradiction matrix will lead to different solution models than the algorithm for resolving physical contradictions.\nThe concept of inventive principles originated from G. Altshuller’s extensive research into patents across various engineering fields. By focusing on patents that resolved contradictions rather than those aimed at optimization, Altshuller identified patterns among innovative solutions. Through systematic analysis and classification of thousands of patents, he discovered that problems modeled as similar engineering contradictions often shared conceptually similar solutions. These generalized approaches were distilled and formalized into 40 inventive principles."
  },
  {
    "objectID": "index.html#inventive-principles",
    "href": "index.html#inventive-principles",
    "title": "TRIZ knowledge base",
    "section": "40 inventive principles",
    "text": "40 inventive principles\nPrinciple 1. Segmentation\n\nDivide the object into independent parts.\nMake the object easy to disassemble.\nIncrease the degree of fragmentation or segmentation of the object.\n\nPrinciple 2. Separation\n\nSeparate any interfering parts or properties from the object, or single out the only necessary part (or property) of the object.\n\nPrinciple 3. Local quality\n\nChange the object’s structure from uniform to non-uniform, change the external environment (or external influence) from uniform to non-uniform.\nEnsure that each part of the object functions in conditions most suitable for its operation.\nEnsure that each part of the object fulfills a different and useful function.\n\nPrinciple 4. Asymmetry\n\nChange the shape of the object from symmetrical to asymmetrical.\nIf the object is asymmetrical, increase its degree of asymmetry.\n\nPrinciple 5. Merging\n\nBring closer together (or merge) identical or similar objects, assemble identical or similar parts to perform parallel operations.\nMake operations contiguous or parallel; bring them together in time.\n\nPrinciple 6. Universality\n\nMake a part of the object, or the entire object perform multiple functions; eliminate the need for other parts.\n\nPrinciple 7. “Nested doll”\n\nPlace one object inside another; place each object, in turn, inside the other.\nPass one part through a cavity in the other.\n\nPrinciple 8. Anti-weight\n\nTo compensate for the weight of the object, merge it with other objects that provide some support.\nTo compensate for the weight of the object, make it interact with the environment (e.g., use aerodynamic, hydrodynamic, buoyancy, and other forces).\n\nPrinciple 9. Preliminary anti-action\n\nIf it is necessary to perform an action with both harmful and useful effects, a counteraction should be performed first to control the harmful effects.\nCreate stresses in the object in advance to oppose known undesirable working stresses later on.\n\nPrinciple 10. Preliminary action\n\nMake any changes in the object (either fully or partially) before such changes are required.\nPre-arrange objects so that they can be quickly activated without losing time delivering them.\n\nPrinciple 11. In-advance cushioning\n\nPrepare an emergency equipment beforehand to compensate for any objects that are not reliable.\n\nPrinciple 12. Equipotentiality\n\nIn any potential field, limit position changes (e.g., change operating conditions to eliminate the need to raise or lower objects in a gravity field).\n\nPrinciple 13. The other way around\n\nInvert the action(s) taken to solve the problem (e.g., instead of cooling the object, heat it).\nMake movable parts (or the external environment) stationary, and stationary parts movable.\nTurn the object (or process) “upside down”.\n\nPrinciple 14. Spheroidality – curvature\n\nInstead of using rectilinear parts, surfaces, or forms, use curvilinear ones; change from flat surfaces to spherical ones; from cube-shaped (paralllelepiped) parts to ball-shaped structures.\nUse rollers, balls, spirals, domes.\nGo from linear to rotary motion; use centrifugal forces.\n\nPrinciple 15. Dynamization\n\nAllow changes (or design such changes) in the characteristics of the object, external environment, or process that optimize the object, or that optimize the operating conditions.\nDivide the object into parts capable of moving relative to each other.\nIf the object (or process) is rigid or inflexible, make it movable or adaptable.\n\nPrinciple 16. Partial or excessive actions\n\nIf 100% of an effect is hard to achieve using a given method for solving a problem, then by using “lightly less” or “slightly more” of the same method, the problem may be considerably easier to solve.\n\nPrinciple 17. Transition to another dimension\n\nMove the object in two- or three-dimensional space.\nUse a multistory arrangement for the objects instead of a single-story arrangement.\nTilt or re-orient the object, put it on its side.\nUse a different side of the given area.\n\nPrinciple 18. Mechanical vibration\n\nCause the object to oscillate or vibrate.\nIncrease its frequency (even up to the ultrasonic).\nUse the object’s resonant frequency.\nUse piezoelectric vibrators instead of mechanical ones.\nUse combined ultrasonic and electromagnetic field oscillations.\n\nPrinciple 19. Periodic action\n\nInstead of continuous action, use periodic or pulsating actions.\nIf an action is already periodic, change the periodic magnitude or frequency.\nUse pauses between impulses to perform a different action.\n\nPrinciple 20. Continuity of useful action\n\nCarry on work continuously; make all parts of the object work at full load, all the time.\nEliminate all idle or intermittent actions or work.\n\nPrinciple 21. Skipping\n\nConduct a process, or certain stages of it (e.g., destructible, harmful or hazardous operations) at high speed.\n\nPrinciple 22. “Blessing in disguise”\n\nUse harmful factors (particularly, effects that are detrimental to the environment or surroundings) in such a way as to achieve a positive effect.\nEliminate the primary harmful action by adding it to another harmful action to resolve the problem.\nAmplify a harmful factor to such a degree that it is no longer harmful.\n\nPrinciple 23. Feedback\n\nIntroduce feedback (referring back, cross-checking) to improve a process or an action.\nIf feedback is already used, change it.\n\nPrinciple 24. Intermediary\n\nUse an intermediary carrier article or intermediary process.\nMerge one object temporarily with another (which can be easily removed).\n\nPrinciple 25. Self-service\n\nMake the object serve itself by performing auxiliary helpful functions\nUse waste resources, energy, or substances.\n\nPrinciple 26. Copying\n\nInstead of an unavailable, expensive, fragile object, use simpler, inexpensive copies.\nReplace the object or process with optical copies.\nIf visible optical copies are already used, move to infrared or ultraviolet copies.\n\nPrinciple 27. Cheap short-living objects\n\nReplace an expensive object with a multitude of inexpensive objects that compromise certain qualities (service life, for instance).\n\nPrinciple 28. Mechanics substitution\n\nReplace mechanical means with sensory (optical, acoustic, taste or smell) means.\nUse electric, magnetic and electromagnetic fields to interact with the object.\nChange from static to movable fields, from unstructured fields to structured.\nUse fields in conjunction with field-activated (e.g., ferromagnetic) particles.\n\nPrinciple 29. Pneumatics and hydraulics\n\nUse gas and liquid parts of the object instead of solid parts (e.g., inflatable, filled with liquids, air cushioned, hydrostatic, hydro-reactive).\n\nPrinciple 30. Flexible shells and thin films\n\nUse flexible shells and thin films instead of three-dimensional structures\nIsolate the object from the external environment using flexible shells and thin films.\n\nPrinciple 31. Porous materials\n\nMake the object porous or add porous elements (inserts, coatings, etc.).\nIf the object is already porous, use the pores to introduce a useful substance or function.\n\nPrinciple 32. Color changes\n\nChange the color of the object or its external environment.\nChange the transparency of the object or its external environment.\n\nPrinciple 33. Homogeneity\n\nMake objects interacting with any given object of the same material (or material with identical properties).\n\nPrinciple 34. Discarding and recovering\n\nEliminate portions of the object that have fulfilled their function (discard by dissolving, evaporating, etc.) or modify these during the operation of the object.\nConversely, restore consumable parts of the object during the operation of the object.\n\nPrinciple 35. Parameter changes\n\nChange the object’s physical state (e.g., to a gas, liquid, or solid).\nChange the concentration or consistency.\nChange the degree of flexibility.\nChange the temperature.\n\nPrinciple 36. Phase transitions\n\nUse phenomena occurring during phase transitions (e.g., volume changes, loss or absorption of heat, etc.).\n\nPrinciple 37. Thermal expansion\n\nUse thermal expansion (or contraction) of materials.\nIf thermal expansion is being used, use multiple materials with different thermal expansion coefficients.\n\nPrinciple 38. Strong oxidants\n\nReplace air with oxygen-enriched air.\nReplace enriched air with pure oxygen.\nExpose air or oxygen to ionizing radiation.\nUse ozonized oxygen.\nReplace ozonized (or ionized) oxygen with ozone.\n\nPrinciple 39. Inert atmosphere\n\nReplace a normal environment with an inert one.\nAdd neutral parts, or inert additives to the object.\n\nPrinciple 40. Composite materials\n\nChange from uniform to composite (multiple) materials.\n\n\nARIZ"
  },
  {
    "objectID": "index.html#overview-64",
    "href": "index.html#overview-64",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nARIZ is a Russian acronym of algorithm for inventive problem solving (алгоритм решения изобретательских задач, АРИЗ).\nThere have been several versions of ARIZ over the years. The last one officially published under Altshuller’s name is ARIZ-85C. Although later versions were developed posthumously, they did not significantly improve the procedure’s effectiveness – some even added unnecessary complexity. As a result, ARIZ-85C remains the official version.\nIt’s important to keep in mind that in 1985, TRIZ did not yet include the advanced analytical tools available today. Still, Altshuller clearly understood the importance of identifying the right problem to solve, which is why ARIZ-85C already includes several built-in analytical procedures.\nclick here to read the original text of ARIZ-85C including all the notes and recommendations formulated by Altshuller\nclick here to download an ARIZ-85C template in editable Word file\nFor the reader’s convenience, each block of ARIZ has been described in a separate article."
  },
  {
    "objectID": "index.html#application-of-ariz",
    "href": "index.html#application-of-ariz",
    "title": "TRIZ knowledge base",
    "section": "Application of ARIZ",
    "text": "Application of ARIZ\nARIZ is typically used for solving complex key problems that cannot be resolved using other TRIZ methods, in projects where major changes to the system are unacceptable.To highlight the specific nature of these problems, the algorithm introduced the term mini-problem.\nThe mini-problems a key problems that can arise from various sources, like CECA, trimming, or feature transfer."
  },
  {
    "objectID": "index.html#strength-of-ariz",
    "href": "index.html#strength-of-ariz",
    "title": "TRIZ knowledge base",
    "section": "Strength of ARIZ",
    "text": "Strength of ARIZ\nThe strength of ARIZ is determined by its distinctive features:\n\nFocusing on achieving the ideal final result.\nBasing on trends of engineering system evolution.\nFocusing on the system resources.\n\n\nFocusing on achieving the ideal final result\nARIZ is focused on achieving the ideal final result (IFR) – the best possible solution to a problem, in which the problem is completely eliminated with minimal changes to the system and no deterioration of its parameters.\nIt’s important not to confuse the concept of IFR with that of the ideal system, as the two are fundamentally different – though often mistakenly used interchangeably. While the ideal system refers to a system that does not exist (it performs the function without taking up space, costing anything, or requiring maintenance), the IFR in ARIZ is about solving a specific problem within an existing system by making only minimal adjustments. The system still exists, takes up space, generates costs, and requires upkeep – but the problem it had is resolved in the most efficient way possible.\n\n\nBasing on trends of engineering system evolution\nLike many other TRIZ tools, ARIZ is built on the trends of engineering system evolution. The algorithm includes steps that directly reflect various trends – such as identifying and eliminating contradictions, aiming for the ideal final result (IFR), focusing on minimal changes to the initial system, or applying the multi-screen approach.\nAll of these actions are designed to help overcome psychological inertia and lead to the most effective possible solution.\n\n\nFocusing on the system resources\nMaking minimal changes to the system means working with resources that are already present within the system and its supersystem. While it might be tempting to introduce new materials, add components, or apply new fields, such changes often come with significant costs. In reality, most systems already contain what’s needed to solve the problem – those resources are simply overlooked. One of ARIZ’s key goals is to uncover them.\nTo do this, ARIZ works in two directions. First, it narrows focus like a funnel, transforming a broad key problem into a well-defined TRIZ mini-problem. Then, it expands outward, revealing more and more resources hidden within the system and supersystem as the analysis progresses."
  },
  {
    "objectID": "index.html#structure-of-ariz",
    "href": "index.html#structure-of-ariz",
    "title": "TRIZ knowledge base",
    "section": "Structure of ARIZ",
    "text": "Structure of ARIZ\nARIZ is a very well-structured tool. It has the structure of a block-diagram composed of steps, rules, and notes.\nComplete algorithm consists of 9 parts organized into three main blocks. Each part consists of several sub-steps. The general structure is the following:\nBlock 1: Restructuring the original problem\nPart 1. Analyze the system\nPart 2. Analyze the problem model.\nPart 3. Define the ideal final result and formulate the physical contradiction.\nBlock 2: Removing the physical contradiction\nPart 4. Resolve the physical contradiction.\nPart 5. Apply the knowledge base, scientific effects, standard inventive solutions, contradiction matrix, etc.\nPart 6. Change the mini-problem.\nBlock 3: Analyzing the solution\nPart 7. Review the solution and analyze removal of the physical contradiction.\nPart 8. Develop maximum usage of the solution.\nPart 9. Review all the stages in ARIZ in a “real time” application.\n\nArticles\n\nConflicting pair\nProduct\nTool\nARIZ Block 1: Restructuring the original problem\nX-factor\nOperating zone\nOperating time\nMini-problem\nIdeal final result\n\n\n\nARIZ Block 1: Restructuring the original problem"
  },
  {
    "objectID": "index.html#part-1.-analyze-the-system",
    "href": "index.html#part-1.-analyze-the-system",
    "title": "TRIZ knowledge base",
    "section": "Part 1. Analyze the system",
    "text": "Part 1. Analyze the system\nIn general, part 1 is about the analysis of the key problem. It includes seven steps.\nIt begins with identifying main function of the system, as wel as components of the system and its supersystem. After that the engineering problem is modelled as two alternative (inverted) engineering contradictions and the mini-problem is formulated.\nThe next steps help determine the tool(s) and the product(s) in the analyzed conflict. The two states of them are also identified. Next, graphical models of the contradictions are created. Finally, the base contradiction is selected, intensified, and the problem is formulated.\n\nStep 1.1. Formulate the mini-problem\nThe first step of ARIZ is to define the mini-problem by identifying the system and modeling the problem as engineering contradictions (EC).\nIn ARIZ, the system may differ from the one analyzed earlier during function analysis. Here, the focus is on the key problem, so the system includes only components directly related to it. However, it is recommended that not only technological components of the system be listed but also the “natural” ones that interact with it. For example, in the problem of protecting a telescope antenna, natural objects like lightning or incoming radio waves (emitted by celestial bodies) should also be considered.\nThe key disadvantages, identified earlier through CECA, help pinpoint the root causes, which may lie deep within or outside the original system. Eliminating these root causes defines the key problem, and the system in ARIZ refers to the area where this problem occurs.\nTo define the system, its main function is specified, and essential components of both the system and supersystem are listed. Based on this, two types of engineering contradictions are formulated: EC-1 (direct) and EC-2 (inverted). Together, they form the foundation of the mini-problem.\nWhen formulating contradictions, make sure to include key parameters in the IF, THEN, and BUT lines. It’s also helpful to keep the function format in the THEN and BUT lines, showing how the function carrier affects a specific parameter of the function object. This clarity will support later steps in the process.\nSometimes the problem situation involves only the product – the tool is absent. In such cases, there is no clear technical contradiction, but one can still be formulated by considering two states of the product, even if one of those states seems impossible to achieve.\nFor example – how can we observe tiny particles suspended in a transparent liquid with the naked eye, if the particles are so small that light flows around them?\nTC-1: The liquid remains transparent because the particles are small, but they cannot be seen with the naked eye.\nTC-2: Larger particles are easier to observe, but they make the liquid no longer transparent, which is an unacceptable outcome.\nSince we cannot change the product, we will proceed only with TC-1, but we also note that TC-2 adds a requirement to the product: The particles must remain small (to keep the liquid transparent) and simultaneously become large (so they can be seen).\n\n\nStep 1.2. Determine the conflicting pair\nStep 1.2 is used to identify the tool(s) and product(s) that form the conflicting pair.\nIn this step, we also identify the states in which the tool operates. These states refer to the properties, features, or parameters specified in the IF line of the contradictions formulated in step 1.1:\n\nstate 1 can be found in the direct contradiction,\nstate 2 appears in the inverted  contradiction.\n\n\n\nStep 1.3. Create graphical models of the engineering contradictions\nIn Step 1.3, the problem is presented in graphic form. Graphs are created for both EC-1 and EC-2.\nThe graphs are built using symbols familiar from tools such as function analysis and substance-field modeling.\nIt is important to note that the purpose of the diagrams is not to depict functions, but to illustrate engineering contradictions.\nThe diagram must clearly show both the useful and the harmful action. In practice, this means there should be two arrows – one “good” and one “bad.” If both arrows represent the same type of effect (e.g. both are useful, or both are harmful/insufficient/excessive), it indicates a mistake that needs to be corrected.\nThe conflicting pair shown in the illustration typically consists of two components, but in some cases it may involve three – either two products and one tool, or one product and two tools.\n\n\nStep 1.4. Select a contradiction for further analysis (basic contradiction)\nEC-1 and EC-2 model the same situation, but they represent completely different problems.\nTo achieve the project goal, both problems need to be addressed, but it’s not possible to deal with them simultaneously. At this stage, we must choose which engineering contradiction to focus on – this becomes the basic contradiction.\nAltshuller recommended selecting the contradiction in which the system’s main function is performed. This approach is quite natural, as the goal is to solve the problem with minimal changes to the system. However, experience shows that there are cases where engineers are open to more significant modifications. In such situations, choosing the inverted contradiction may be the better option.\nImportantly, selecting one contradiction at this point does not mean discarding the other one. If the solutions developed in the next steps are not satisfactory, the algorithm itself will prompt a return to this step and suggest reconsidering the second contradiction.\n\n\nStep 1.5. Intensify the conflict\nThis step has been introduced to help overcome psychological inertia, including the natural tendency of engineers to focus on optimization. While optimization isn’t inherently bad, it is not desirable during the conceptual phase of TRIZ-based projects.\nTo intensify the contradiction, the parameter from the line IF is pushed to its absolute extreme. If something was supposed to be light, it should now weigh nothing; if it was supposed to be small, it should now cease to exist entirely.\nStrengthening this parameter will require corresponding adjustments to the THEN and BUT positions in the contradiction model.\nImportant! From this point onward, we will be working exclusively with the intensified contradiction in ARIZ.\n\n\nStep 1.6. Formulate the problem model\nIn step 1.6, we use all the previous steps and formulate an ARIZ problem model. The ARIZ problem model should include:\n\nthe conflicting pair,\nthe intensified definition of the conflict, and\nthe X-factor.\n\n\n\nStep 1.7. Apply standard inventive solutions\nIn Step 1.7, based on the diagrams created in Step 1.3, substance-field models are constructed and standard inventive solutions are applied.\nThe entire analysis conducted in Part 1, along with the construction of the problem model, results in a significant refinement of the problem.\nImplementation of step 1.7 is not mandatory and can be skipped. Regardless, standard inventive solutions application will reappear in part 5 of ARIZ."
  },
  {
    "objectID": "index.html#part-2.-analyzing-the-problem-model",
    "href": "index.html#part-2.-analyzing-the-problem-model",
    "title": "TRIZ knowledge base",
    "section": "Part 2. Analyzing the problem model",
    "text": "Part 2. Analyzing the problem model\nPart 2 of ARIZ focuses on analyzing the resources available within the system and its supersystem.\nARIZ is designed for projects that allow only minimal changes to the system. This usually rules out the introduction of new resources, which makes identifying existing resources absolutely critical.\nPart 2 consists of three steps, during which we identify the main types of resources considered in ARIZ:\n\nspace resources,\ntime resources, and\nsubstance and field resources of the system and its supersystem, including their parameters.\n\n\nStep 2.1. Define the operating zone\nIn Step 2.1, the spatial resources of the system are identified. The operating zone (also called operating space) refers to the area where the conflict identified in the problem model occurs.\nAccording to the previously formulated contradiction, the system faces two opposing requirements. One must be fulfilled in operating zone 1 (OZ-1), the other in operating zone 2 (OZ-2). If these zones are separated, the contradiction may be resolved by separating the contradictory demands in space. If the zones overlap, then other methods must be explored to resolve the contradiction.\n\n\nStep 2.2. Define the operating time\nIn this step, the time resources of the system are identified.\nThe operating time is most simply defined as the time in which the conflict identified in the problem model occurs. According to the contradiction, the system faces two opposing requirements. Operating time 1 (OT-1) is the period during which the first requirement of the system is met, while operating time 2 (OT-2) is the period during which the second requirement occurs.\nIt is essential to determine whether these zones are separated or overlapping. If these times are different, the contradiction can be resolved by separating the contradictory requirements in time. If the times overlap, the separation is not possible hence a different strategy is required.\n\n\nStep 2.3. Define the substance-field resources (SFR)\nIn the final step of Part 2, the focus shifts to the analysis of substance and field resources – both those already present and those that can be easily accessed or introduced.\nThe resources under consideration include:\n\ninternal resources:\n\n\nproduct resources, and\ntool resources,\n\n\nexternal resources.\n\nDuring resource analysis, we are interested not only in the presence of a substance or field. Special attention is given to their parameters or features, which are considered particularly valuable in ARIZ. When creating a list of resources, everything that comes to your mind should be included, as any resource could be a potential candidate for solving the problem.\nThe internal resources of the conflicting pair are the first to be analyzed. Since both the tool and the product are already located in the conflict zone, their associated resources are also present – no additional effort is required to deliver them.\nCompared to the tool, the product’s resources may be more limited in terms of availability. While we often have the freedom to modify the tool as needed, making changes to the product may be subject to design, functional, or business constraints.\nWhen it comes to external resources, the search begins in the immediate surroundings of the conflict – the operating zone. However, it is beneficial to expand the search area, as there may be low-cost or even free resources available in the supersystem. Nearly every engineering project has access to universal resources like air and gravity. Additionally, nearby systems may generate waste or possess surplus materials or fields that could be valuable for solving the problem."
  },
  {
    "objectID": "index.html#part-3.-defining-the-ideal-final-result-and-formulating-the-physical-contradiction",
    "href": "index.html#part-3.-defining-the-ideal-final-result-and-formulating-the-physical-contradiction",
    "title": "TRIZ knowledge base",
    "section": "Part 3. Defining the ideal final result and formulating the physical contradiction",
    "text": "Part 3. Defining the ideal final result and formulating the physical contradiction\nPart 3 of ARIZ focuses on the ideal final result (IFR) and identifying physical contradictions that hinder achieving it.\n\nStep 3.1. Formulate IFR\nIn Step 3.1, we return to the requirements defined for the X-factor based on the intensified technical contradiction from Step 1.6. Now, we can supplement these requirements with those identified in Steps 2.1 and 2.2, relating to the operating zone and operating time.\nTo formulate the ideal final result (IFR), a template is typically used. However, in some projects, applying the template word-for-word may result in a confusing or unclear statement. In such cases, it’s recommended to break the text into several separate sentences to clearly and effectively convey the intended meaning.\n\n\nStep 3.2. Formulate the intensified ideal final result\nAt this stage, the X-factor from Step 3.1 is replaced with a specific available resource.\nKeep in mind that the only resources that may be used to replace the X-factor are those identified in Step 2.3 – using any other resources is not in line with ARIZ. However, the replacement can be a single resource or a combination of several.\nIt is recommended to consider SFRs in the following order:\n\nSFR of the tool,\nSFR of the supersystem,\nother external SFR,\nSFR of the product (if not restricted).\n\nModifications to the product are usually significantly restricted or even completely prohibited. However, there are rare situations where the product may be allowed to change on its own, change temporarily, or be combined with a void, etc. SFR of the product may be considered only if such modifications are explicitly permitted.\nThe list of resources identified in Part 2 is usually quite long. Considering each one as a potential X-factor would significantly extend the project timeline. That’s why in Step 3.2, it is recommended to start by considering 5 to 6 selected resources. If using them does not lead to satisfactory results, you can return to Step 3.2 later in the ARIZ process to explore other resources.\n\n\nStep 3.3. Define the physical contradiction on macro-level\nThe intensified ideal final result (IFR) concepts developed in Step 3.2 usually do not yet solve the mini-problem. It is highly likely that the chosen resources are prevented from acting effectively as X-factors due to underlying physical contradictions. Identifying these contradictions enables us to attempt to resolve them.\nFor formulating the physical contradictions here, we usually use the following pattern:\nThe parameter [specify] of the resource [specify] should be value 1 [specify] to eliminate the harmful action [specify] and/or value 2 [specify] to provide the useful function [specify].\nWhen approaching the formulation of physical contradictions, we typically encounter one of the following three scenarios:\n\nThe contradiction can be clearly formulated and processed.\nAfter formulating the contradiction, it turns out that the selected resource has no influence or connection to the parameters that need to be changed. At this stage, the resource is set aside – it may be reconsidered later in the ARIZ process.\nIt becomes clear that only one demand of the contradiction is justified. This means the contradiction does not actually exist – and we’ve just found the solution.\n\nThe physical contradictions formulated in Step 3.2 represent models of entirely new problems that had not been previously identified – yet they are precisely what gives ARIZ its distinctive power.\n\nConflicting pair"
  },
  {
    "objectID": "index.html#overview-65",
    "href": "index.html#overview-65",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nConflicting pair is a term used in ARIZ.\nThe terms of the tool and the product are specific to ARIZ but closely mirror the function carrier and function object from function analysis. The product corresponds to the target component – the object of the system’s main function – while the tool is the component that performs this function. This analogy makes it easier to quickly identify the conflicting pair in the system.\nA conflicting pair consists of two or three components.\nFor example, in the process of sealing glass ampoules containing medicine, the flame, the ampoule, and the medicine form a conflicting pair. The flame melts the ampoule tip, but if it’s too strong, it damages the medicine; if it’s too weak, it fails to seal the ampoule properly. In this case, the pair includes one tool (the flame) and two products (the ampoule and the medicine). In other scenarios, a conflicting pair may involve two tools and one product.\n\nMini-problem"
  },
  {
    "objectID": "index.html#overview-66",
    "href": "index.html#overview-66",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nMini-problem is a concept used in ARIZ.\nThe prefix “mini” does not imply that the problem is small, but rather that its solution must involve only minimal changes to the system.\nA mini-problem is created by taking the original problem situation and adding a constraint: everything in the system must stay the same or become simpler, while the desired action (or property) appears, or the harmful action (or property) disappears. This transformation doesn’t mean we’re trying to solve a “smaller” problem. Instead, adding this extra requirement – achieving the desired result without changing the system – sharpens the conflict and blocks any path toward compromise right from the start. This is achieved by making use of resources that already exist – either within the system or in its surrounding environment.\nIn engineering projects, this approach is often a necessary condition for balancing business interests with the ambitions of engineers.\nThe mini-problems a key problems that can arise from different sources, like CECA, trimming, or feature transfer.\n\nOperating time"
  },
  {
    "objectID": "index.html#overview-67",
    "href": "index.html#overview-67",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe operating time is a concept used in ARIZ. It is defined in Step 2.2 of the algorithm. Its purpose is to identify the time resources of the system.\nThe operating time is most simply defined as the time in which the conflict identified in the problem model occurs.\nAccording to the previously formulated contradiction, the system faces two opposing requirements. Operating time 1 (OT-1) is the period during which the first requirement of the system is met, while operating time 2 (OT-2) is the period during which the second requirement occurs.\nIt is essential to determine whether these zones are separated or overlapping.\n\nIf these times are different, the contradiction can be resolved by separating the contradictory requirements in time. If the times overlap, the separation is not possible hence a different strategy is required.\nCreating sketches that clearly highlight OT-1 and OT-2 is recommended. In fact, Altshuller considered such sketches mandatory during this step.\nAltshuller recommended a deeper time analysis by examining three distinct phases:\n\nbefore the conflict,\nduring the conflict, and\nafter the conflict.\n\nAnalysing the first phase enables the implementation of preventive measures ahead of time. Analysing the third phase allows for actions aimed at eliminating the consequences of the conflict.\nAlthough in some projects the before and/or after phases may not be applicable, considering this structure can help identify a broader range of time-related resources, often leading to more effective and robust solutions.\n\nOperating zone"
  },
  {
    "objectID": "index.html#overview-68",
    "href": "index.html#overview-68",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe operating zone is a concept used in ARIZ. It is defined in Step 2.1 of the algorithm. Its purpose is to identify the spatial resources of the system.\nThe operating zone – also known as the operating space – is most simply defined as the area in which the conflict identified in the problem model occurs.\nAccording to the previously formulated contradiction, the system faces two opposing requirements. These requirements must be fulfilled in specific areas, referred to as operating zone 1 (OZ-1) and operating zone 2 (OZ-2).\nIt is essential to determine whether these zones are separated or overlapping.\n\nIf they are located in different places, the problem might be resolved by separating the contradictory demands in space. If the zones overlap, the separation is not possible hence a different strategy is required.\nCreating sketches that clearly highlight OZ-1 and OZ-2 is recommended. In fact, Altshuller considered such sketches mandatory during this step.\n\nProduct"
  },
  {
    "objectID": "index.html#overview-69",
    "href": "index.html#overview-69",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe term of product is characteristic for ARIZ – together with the tool, it forms what is known as a conflicting pair, which is identified in Step 1.2 of the algorithm.\nThe product can be directly compared to the target component, which is the object of the main function of the system in function analysis. Such an analogy significantly facilitates it’s quick identification.\nThe difference in terminology between ARIZ and function analysis stems from the fact that, in 1985 – when the final version of ARIZ was developed – function analysis had not yet been officially introduced into the TRIZ toolkit. Even after it became a standard TRIZ tool, Altshuller’s original terminology was preserved in ARIZ to maintain consistency with the original structure.\nTo identify the product move on to the main function of the system.\n\nTool"
  },
  {
    "objectID": "index.html#overview-70",
    "href": "index.html#overview-70",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe term of tool is characteristic for ARIZ – together with the product, it forms what is known as a conflicting pair, which is identified in Step 1.2 of the algorithm.\nThe tool is the element that directly interacts with the product, such as, for example, a mill rather than a milling machine, or a flame rather than a burner. Sometimes, a specific part of the environment can be considered as a tool. The standard parts from which the product is assembled can also be considered as a tool.\nIn terms of state-of-the-art TRIZ, the tool is the component of the system performing main function. It immediately evokes associations with the carrier of the function that significantly facilitates quick identification of it. The difference in terminology between ARIZ and function analysis stems from the fact that, in 1985 – when the final version of ARIZ was developed – function analysis had not yet been officially introduced into the TRIZ toolkit. Even after it became a standard TRIZ tool, Altshuller’s original terminology was preserved in ARIZ to maintain consistency with the original structure.\nTo identify the tool, refer to the line IF of the contradictions.\n\nX-factor"
  },
  {
    "objectID": "index.html#overview-71",
    "href": "index.html#overview-71",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nX-factor is a term used in ARIZ. It refers to any entity that should be introduced into the system to help solve the problem.\nThe X-factor can be any resource identified in Part 2 of ARIZ, or a combination of several resources. It may be a substance, a field, a parameter, time, space, or any other characteristic – whether from the system or its supersystem.\nExamples include a temperature change, a phase transition, a change in color or material, and more. The role of the X-factor is to preserve what is desirable in the contradiction while eliminating what is undesirable.\nThe requirements for the X-factor are defined in Step 1.6 of ARIZ.\nInitially, the term X-element was used in ARIZ. However, since the word element is polysemantic in many languages, it has been replaced with X-factor in state-of-the-art TRIZ.\n\nIdeal final result"
  },
  {
    "objectID": "index.html#overview-72",
    "href": "index.html#overview-72",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nIFR is a concept introduced in ARIZ where it helps in setting a clear, unambiguous goal that guides the subsequent steps. Formulating it is one of crucial steps of the algorithm.\nWith the IFR in mind, ARIZ uses various TRIZ tools and principles to systematically eliminate contradictions and develop innovative solutions."
  },
  {
    "objectID": "index.html#key-features",
    "href": "index.html#key-features",
    "title": "TRIZ knowledge base",
    "section": "Key features",
    "text": "Key features\n\nThe IFR aims to achieve the maximum benefit for a system with the least use of resources, including time, money, energy, and materials.\nAchieving IFR must not introduce new problems or side effects. It should resolve the issue without creating additional challenges.\nIFR usually simplifies the system rather than complicate it. This often involves reducing the number of components or steps required to achieve the desired outcome. It often incorporates self-regulating and self-maintaining aspects, meaning the system requires little to no external intervention to function optimally."
  },
  {
    "objectID": "index.html#difference-between-ifr-and-ideal-system",
    "href": "index.html#difference-between-ifr-and-ideal-system",
    "title": "TRIZ knowledge base",
    "section": "Difference between IFR and ideal system",
    "text": "Difference between IFR and ideal system\nIFR is sometimes confused with an ideal system. These concepts are significantly different and it is a major mistake to equate them. IFR is is a term used in ARIZ. It is a model of the best solution to a specific problem, whereby the problem is fully eliminated with minimal changes to the system and without any deterioration of system parameters. However, the system exists, occupies space, incurs costs, requires maintenance, etc. The ideal system referes to the system with infinite value. It has no components or associated costs, but still delivers the intended function(s). In other words, the system does not exist, but its main function is performed.\n\nFunction-oriented search (FOS)"
  },
  {
    "objectID": "index.html#concept-substantiation-tools",
    "href": "index.html#concept-substantiation-tools",
    "title": "TRIZ knowledge base",
    "section": "Concept substantiation tools",
    "text": "Concept substantiation tools"
  },
  {
    "objectID": "index.html#trends-of-engineering-systems-evolution-tese",
    "href": "index.html#trends-of-engineering-systems-evolution-tese",
    "title": "TRIZ knowledge base",
    "section": "",
    "text": "GLOSSARY\nResources in TRIZ"
  },
  {
    "objectID": "index.html#overview-73",
    "href": "index.html#overview-73",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe identification and understanding of trends of engineering systems evolution (TESE) is arguably TRIZ’s most significant contribution to the science of innovation. They also form the basis for many TRIZ tools.\nTESE emerged from an in-depth analysis of product and technology evolution across various industries. Studying their history – based on the examination of thousands of patents – revealed that all products and technologies follow similar conceptual patterns. TESE define the stages that nearly all products and technologies are likely to go through during their development. This does not mean that designing a product that deviates from TESE is technically impossible, but rather that sooner or later, it is likely to fail.\nAt the core of TESE lies the assumption that technologies evolve along their own trajectory, independent of human influence. For this reason, they are often referred to as the voice of the product. However, it is important to note that to be fully effective, TESE should be integrated with market needs – the voice of the customer."
  },
  {
    "objectID": "index.html#hierarchical-structure-of-tese",
    "href": "index.html#hierarchical-structure-of-tese",
    "title": "TRIZ knowledge base",
    "section": "Hierarchical structure of TESE",
    "text": "Hierarchical structure of TESE\nTESE are organized in a hierarchical structure that reflects the relationships between them. In this structure, a lower-level trend functions as a sub-trend (mechanism) of a higher-level trend. However, each trend also has its own internal mechanisms that drive system evolution. In other words, for a system to evolve according to a higher-level trend, both its internal mechanisms and the mechanisms of its sub-trends must be implemented.\n\nIt is important to note that both TESE and their structure have evolved over decades, which is why different versions can be found in TRIZ literature. The officially approved definitions of the trends and their hierarchy, as recognized by MATRIZ, were developed by the St. Petersburg TRIZ Scientific School, which is considered the most pragmatic TRIZ school.\n\nTrend of S-curve evolution: as an engineering system evolves, the evolution of each main parameter of value (MPV) describes an S-shaped curve in time.\nTrend of increasing value: an engineering system evolves so that its value always increases.\nTrend of transition to the supersystem: as an engineering system evolves, it is integrated with supersystem components.\nTrend of increasing completeness of system components: as an engineering system evolves, it acquires the following typical functions: operating agent, transmission, energy source, and control system.\nTrend of decreasing human involvement: as an engineering system evolves, the number of engineering system functions performed by humans decreases.\nTrend of increasing degree of trimming: as an engineering system evolves, system elements (components or operations) are eliminated without impairing the functionality of the system, and possibly improving it.\nTrend of flow enhancement: as an engineering system evolves, flow rates of substances, energy, or information increase, and/or the flows are better utilized.\nTrend of increasing coordination: as an engineering system evolves, characteristics of the components of the engineering system become more coordinated with each other and with the supersystem.\nTrend of uneven development of system components: as an engineering system evolves, development is concentrated on the operating agent first, and on the rest of the system later.\nTrend of increasing controllability: as engineering systems evolve, they develop more ways in which they can be controlled.\nTrend of increasing dynamization: as an engineering system evolves, it and its components become more “dynamic”.\n\n\nArticles\n\nTrend of S-curve evolution\n\nMain parameter of value\nS-curve\n\nTrend of increasing value\nTrend of transition to the supersystem\nTrend of increasing completeness of system components\nTrend of decreasing human involvement\nTrend of increasing degree of trimming\nTrend of flow enhancement\nTrend of increasing coordination\nTrend of uneven development of system components\nTrend of increasing controllability\nTrend of increasing dynamization\n\n\n\nTrend of decreasing human involvement"
  },
  {
    "objectID": "index.html#overview-74",
    "href": "index.html#overview-74",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe trend of decreasing human involvement is a sub-trend (mechanism) of the trend of increasing completeness of system components.\nBefore an engineering system is designed, a human performs all functions at every level themself – otherwise, those functions would not exist. The emergence of the system and its further development allow it to gradually take over these functions (increasing its completeness), thereby reducing human involvement. This process typically unfolds in the following order:\n\ntransmission,\nenergy source,\ncontrol system, and\ndecision-making.\n\n\nTrend of flow enhancement"
  },
  {
    "objectID": "index.html#overview-75",
    "href": "index.html#overview-75",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nTrend of flow enhancement is one of the four mechanisms directly supporting the trend of increasing value in the hierarchy of TESE (along with the trend of transition to the supersystem, the trend of increasing degree of trimming, and the trend increasing completeness of system components)."
  },
  {
    "objectID": "index.html#subtrends-of-the-trend-of-flow-enhancement",
    "href": "index.html#subtrends-of-the-trend-of-flow-enhancement",
    "title": "TRIZ knowledge base",
    "section": "Subtrends of the trend of flow enhancement",
    "text": "Subtrends of the trend of flow enhancement\nThe trend has two main sub-trends, each further divided into specific mechanisms:\n\nimproving useful flows, and\nreducing the negative impact of harmful/accidental flows.\n\n\nImproving useful flows\nUseful flows can be improved by two mechanisms:\nA. increasing the conductivity of the flow, or\nB. making better use of the flow.\n\nIncreasing the conductivity of the flow\nTo increase the conductivity of the useful flow, the following techniques can be applied:\n\nreducing the number of the flow transformations,\ntransition to a more efficient flow type,\nreducing the length of the flow,\neliminating “gray zones”,\neliminating “bottlenecks”,\ncreating a bypass,\nincreasing the conductivity of the separate parts of the flow channel,\nincreasing the density of the flow,\napplying the useful action of one flow to another,\napplying the useful action of one flow to the channel of another flow,\nrearranging one flow so that it carries another flow,\nassigning multiple flows to one channel,\nmodifying the flow to increase conductivity, or\ndirecting the flow through a supersystem channel.\n\n\n\nMaking better use of the flow\nTechniques applied to make better use of the flow can be as follows:\n\neliminating a stagnant zone,\nutilizing impulse action,\nutilizing resonance,\nmodulating the flow,\nredistributing the flow,\ncombining homogeneous flows,\nutilizing recirculation,\ncombining two different flows to obtain synergy, or\npresetting the necessary substance, energy, or information.\n\n\n\n\nReducing the negative impact of harmful/accidental flows\nThe negative impact of harmful/accidental flows can be reduced by:\nA. decreasing the conductivity of harmful or accidental flows, or\nB. reducing the impact of harmful flows.\n\nDecreasing the conductivity of harmful or accidental flows\nTo decrease the conductivity of harmful or accidental flows, the following techniques can be used:\n\nincreasing the number of flow transformations,\ntransition to a low-conductivity flow,\nincreasing the length of the flow,\nintroducing bottlenecks,\nintroducing stagnant zones,\nreducing the conductivity of part of the flow channel, or\nutilizing recirculation.\n\n\n\nReducing the impact of harmful flows\nThe following techniques are used to reduce the impact of harmful flows:\n\nintroducing gray zones,\nreducing the density of the flow,\neliminating resonance,\nredistributing the flow,\ncombining a flow and an anti-flow,\nmodifying the flow,\nmodifying the damaged object,\npresetting the substance, energy, or data that will be required to neutralize the flow,\nbypassing,\ntransferring the flow to the supersystem, or\nrecycling or recovering the incidental flows.\n\n\n\n\nTrend of increasing completeness of system components"
  },
  {
    "objectID": "index.html#overview-76",
    "href": "index.html#overview-76",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nTrend of increasing completeness of system components is one of the four mechanisms directly supporting the trend of increasing value in the hierarchy of TESE (along with the trend of transition to the supersystem, the trend of increasing degree of trimming, and the trend of flow enhancement).\nAn engineering system must utilize four essential blocks in order to operate:\n\noperating agent that performs a function identical to the main function of the system (basic function),\nsource of energy needed to operate the system,\ntransmission block, through which the energy is transferred from the source of energy to the operating agent, and\ncontrol block that controls the system operation.\n\nAn emerging, young system often consists solely of the operating agent, which remains its integral part throughout the lifecycle. Sometimes, it may additionlally be equipped with a primitive form of transmission.\nThe other function blocks are parts of the supersystem. As the engineering system is developing it acquires these function blocks of its own in the following order:\n\nThe development of a system through the integration of different blocks is not always a simple four-step sequence. The integration of some functional blocks may take place over several steps.\nFor example, a system does not receive a full motor right away – it may first be equipped with an energy storage device such as a spring or a bowstring. Similarly, the control block of a heating system gradually acquires different functions, such as a thermostat, a timer switch, and so on.\n\nTrend of increasing controllability"
  },
  {
    "objectID": "index.html#overview-77",
    "href": "index.html#overview-77",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nAlongside the trend of uneven development of system components, the trend of increasing controllability serves as a mechanism of the trend of increasing coordination.\nThe term control refers to actions aimed at adjusting the values of system parameters to align them with the changing parameters of the supersystem and the surrounding environment."
  },
  {
    "objectID": "index.html#mechanisms-of-the-trend-of-of-increasing-controllability",
    "href": "index.html#mechanisms-of-the-trend-of-of-increasing-controllability",
    "title": "TRIZ knowledge base",
    "section": "Mechanisms of the trend of of increasing controllability",
    "text": "Mechanisms of the trend of of increasing controllability\nA sub-trend of the trend of increasing controllability is the trend of increasing dynamization. Additionally, the trend has two mechanisms of its own which state that as a system evolves:\n\nthe level of control within the engineering system increases, and\nthe number of controllable states increases.\n\n\nThe level of control within the engineering system increases\nAccording to this mechanism, systems follow the path outlined below as they develop:\n\nAt first, the system is uncontrolled, meaning it lacks its own control block (e.g., office lighting that is manually switched on and off by staff). Once a control block is introduced, the system begins to control itself – initially through a fixed program (e.g., a lighting system with a built-in timer that turns lights on and off at set times). A more advanced system allows intervention to the fixed program (e.g., switching to a weekend mode or adjusting on/off times based on day length). The next stage is externally controlled system (e.g., a building manager monitoring room occupancy and manually switching lights based on presence).\nEventually, the system reaches full self-control – for instance, motion or presence sensors detect whether people are in the office, and the system automatically adjusts lighting accordingly. Here, it is possible to distinguish between macro-level control and micro-level control.\nAn example of macro-level control is a system equipped with special sensors that detect environmental parameters and adjust lighting accordingly (e.g., turning lights on or off based on the human presence or daylight levels).\nIn micro-level control, there are no separate components for detecting external conditions. Instead, the system uses specific materials or physical phenomena to respond directly to changes, without the need for prior detection. A good example is a check valve, which operates purely based on the force of the flowing medium acting on a movable part inside the valve. The valve opens and closes automatically, without the use of sensors, electronics, or external signals – just as long as there is appropriate flow and pressure of the working fluid.\n\n\nThe number of controllable states increases\nThis sub-trend states that as a system evolves, the number of controllable states increases in the following way:\n\nAn example is sound parameter control in systems designed for audio playback. Early phonographs had only one fixed volume level (single state), as there was no way to adjust it during playback. Over time,step switches were introduced that allowed users to choose from a few discrete volume levels. The next stage brought smooth volume adjustment, offering a wide range of infinitely variable states. Modern devices now feature digital potentiometers, enabling precise control not only of volume but also of tone, channel balance, and equalization – significantly increasing the number of controllable states (multiple ranges).\n\n\nTrend of increasing coordination"
  },
  {
    "objectID": "index.html#overview-78",
    "href": "index.html#overview-78",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nIn general, the trend of increasing coordination states that as an engineering system evolves, it becomes more coordinated – both internally and with the surrounding it supersystem. Components of the system work together more effectively, and interaction with the supersystem becomes increasingly seamless.\nThe trend of increasing coordination is one of the TESE still actively evolving. New project-based mechanisms are being discussed at conferences and in publications, and some of them may eventually become part of the methodology."
  },
  {
    "objectID": "index.html#mechanisms-of-the-trend-of-increasing-coordination",
    "href": "index.html#mechanisms-of-the-trend-of-increasing-coordination",
    "title": "TRIZ knowledge base",
    "section": "Mechanisms of the trend of increasing coordination",
    "text": "Mechanisms of the trend of increasing coordination\nThis trend includes two types of mechanisms:\n\nSub-trends, which are:\n\n\nthe trend of increasing controllability, and\nthe trend of uneven development of system components.\n\n\nInternal mechanisms, which are:\ncoordination of shape,\ncoordination of rhythms,\ncoordination of materials, and\ncoordination of actions.\n\nUnlike the sub-trends of other trends, the internal mechanisms of the trend of increasing coordination do not define a step-by-step sequence of development. Instead, they function more like checklists, where the identified states can occur in any order – or even simultaneously.\nThe only exception is the mechanism of coordination of action, where the states follow a specific sequence.\n\nCoordination of shape\nShape coordination can occur in four ways. Shapes may be:\nIDENTICAL – when elements fit together perfectly, for example:\n\na screw and a nut, where the thread dimensions must be identical for proper fit and function,\nscrewdriver tip and the slot of a screw,\nan egg and an egg carton,\na key and a lock.\n\nSELF-COMPATIBLE – when the shape of elements allows multiple objects to be tightly stacked or nested, for example:\n\ndisposable cutlery,\nshipping containers,\nstackable garden chairs.\n\nCOMPATIBLE – when components are coordinated with certain parameters of the supersystem, for example:\n\nergonomically shaped objects like door handles, furniture, or computer mice that match the shape of the human body,\na strainer designed to work well with powdered substances.\n\nSPECIAL – shapes that don’t fall into any of the above categories, designed to serve a unique purpose, for example:\n\nthe bow of an icebreaker designed to crack ice,\nthe shape of a shovel that allows it to scoop and move sand.\n\n\n\nCoordination of rhythms\nRhytm coordination can occur in three ways. These can be the following:\nIDENTICAL, for example:\n\nthe movement of valves in an internal combustion engine are perfectly synchronized with the motion of the piston to ensure that the air-fuel mixture is drawn in and the exhaust gases are released at the right moment,\naudio and video streams in AV systems play in sync to keep lips and voice aligned (a phenomenon known as lip sync),\n3D glasses, in which the right and left lenses are synchronized with the images delivered to the right and left eyes.\n\nCOMPLEMENTARY – components of a system do not operate simultaneously but instead take turns or work in a way that fills in each other’s idle time, for example:\n\nthe SETI@home program runs only when the computer is not in use (as a screensaver), making use of otherwise idle processing time,\ncollaborative robots (cobots) on an assembly line, where the robot’s rhythm is synchronized with a human worker’s pauses – the robot performs its task (e.g., tightening a screw), then stops to allow the human to complete their step (e.g., placing the next component).\n\nSPECIAL – all other types of rhythm coordination that don’t fit into the previous two categories, for example:\n\nultrasound therapy massagers, where the vibration frequency is tuned to the resonance of muscles and subcutaneous tissues,\nprecision agriculture irrigation systems, where the watering rhythm is aligned with the growth phases of plants and their circadian rhythm (such as transpiration cycles).\n\n\n\nCoordination of materials\nA checklist to support the search for materials suitable for coordination includes the following categories:\nIDENTICAL MATERIALS, for example:\n\ntransplanting a cloned organ,\nrepairing a damaged road surface using a mixture identical to the original material.\n\nSIMILAR MATERIALS, for example:\n\ntransplanting an organ from a donor,\nfilling a gap in a wooden piece of furniture with a matching piece of wood.\n\nINERT MATERIALS, for example:\n\ntransplanting an artificial organ,\npatching a wooden surface with filler compound.\n\nMATERIALS WITH SHIFTED PARAMETERS – materials whose coordination leads to an effect based on the difference in their properties, for example:\n\na thermocouple, made from two different metals – the temperature difference at their junction generates a voltage known as the thermoelectric effect.\n\nMATERIALS WITH OPPOSITE PARAMETERS, for example:\n\na cable consisting of a conductor and an insulator.\n\n\n\nCoordination of actions\nThe interaction between a tool and a product can take various forms. Contact between them may occur at a point (0D), along a line (1D), on a surface (2D), or throughout a volume (3D). Coordination of actions involves transitioning between these forms of contact, and this can happen in two directions:\n\nforward along the progression: 0D → 1D → 2D → 3D, or\nbackward along the progression: 3D → 2D → 1D → 0D.\n\n\nA forward along the progression means that if one object interacts with another at just a single point, improving the interaction can be achieved by expanding it to a line, then to a surface, and eventually to a full three-dimensional volume. For example, the earliest “washing machine” was simply a stone used to beat clothes – this was a point-based interaction (0D) with very low effectiveness. The process improved when people began using a stick, shifting to a line-based interaction (1D). Further development came with the use of a washboard, introducing surface-based interaction (2D). Eventually, the system evolved into the modern washing machine, where the interaction occurs in all three dimensions (3D).\nAn example of improving a system through a backward along the progression can be a pizza box. When the bottom of the box contacts the pizza across the entire surface (2D), moisture accumulates, causing the crust to become soggy. Introducing a ribbed or corrugated bottom shifts the interaction to line contact (1D), which improves air circulation and reduces moisture. Further enhancement can be achieved by designing the box with point-based support (0D) – providing minimal contact and allowing even better airflow, resulting in a crisper crust.\nThe direction of transition depends on two factors:\n\nwhether the function is useful or harmful, and\nthe availability of resources.\n\nThe following table illustrates how these factors influence the choice of transition direction:\n\n\n\nTrend of increasing degree of trimming"
  },
  {
    "objectID": "index.html#overview-79",
    "href": "index.html#overview-79",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe trend of of increasing degree of trimmingis one of the four mechanisms directly supporting the trend of increasing value in the hierarchy of TESE (along with the trend of transition to the supersystem, the trend of increasing completeness of system components, and the trend of flow enhancement).\nAccording to this trend, as an engineering system evolves, more and more of its components are trimmed. This applies to components of both devices and processes (operations).\nThe trend of increasing degree of trimming is fairly universal and can, in principle, be applied at any stage of system development. However, systems typically tend to expand in the early stages of the S-curve, while trimming becomes more relevant in the later stages, especially in stages 3 and 4.\nTrimming rules explain how to carry out trimming, while the trend provides guidance on what to trim and in what order. The trend has 3 mechanisms:\n\ntrimming function blocks,\ntrimming operations, and\ntrimming components with the lowest value."
  },
  {
    "objectID": "index.html#trimming-function-blocks",
    "href": "index.html#trimming-function-blocks",
    "title": "TRIZ knowledge base",
    "section": "Trimming function blocks",
    "text": "Trimming function blocks\nThis mechanism focuses on the function blocks of a system.\nThe trend of increasing completeness of the system components shows the order in which the system, as it evolves, acquires the following function blocks: operating agent, transmission, energy source, and control block.\nNow – to keep value growing – the system eliminates these blocks. This typically occurs in the following order:\n\ntransmission,\nenergy source,\ncontrol system, and\noperating agent.\n\nIn the long run, the system evolves into a self-controlling (intelligent) operating agent that is capable of generating its own energy."
  },
  {
    "objectID": "index.html#trimming-operations",
    "href": "index.html#trimming-operations",
    "title": "TRIZ knowledge base",
    "section": "Trimming operations",
    "text": "Trimming operations\nThis sub-trend applies specifically to processes.\nAccording to it, operations should be trimmed in the following order:\n1. operations with corrective functions,\n2. operations with providing functions, and\n3. operations with productive functions.\nThe guidelines for handling the functions of operations subjected to trimming are determined by the trimming rules for each type of function."
  },
  {
    "objectID": "index.html#trimming-components-with-the-lowest-value",
    "href": "index.html#trimming-components-with-the-lowest-value",
    "title": "TRIZ knowledge base",
    "section": "Trimming components with the lowest value",
    "text": "Trimming components with the lowest value\nThis sub-trend applies to both devices and processes. According to it, components with the lowest value are the first to be removed from the system.\n\nTrend of increasing dynamization"
  },
  {
    "objectID": "index.html#overview-80",
    "href": "index.html#overview-80",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nBy dynamization, we should understand the possibility of changing parameters values. It may refer to:\n\ndynamization of components,\nsegmentation of components, and\ndynamization of function.\n\nIn the hierarchy of trends, the trend of increasing dynamization is a mechanism of the trend of increasing controllability. A system must first become more dynamic before it can be effectively controlled.\nKeep in mind that – just like with other trends – a system does not have to pass through every stage in its evolution. Some stages may be skipped, and the system can leap to a higher level than what the trend line would suggest."
  },
  {
    "objectID": "index.html#dynamization-of-design",
    "href": "index.html#dynamization-of-design",
    "title": "TRIZ knowledge base",
    "section": "Dynamization of design",
    "text": "Dynamization of design\nThis sub-trend of the trend is also called dynamization of components.\nA component of an engineering system can be a substance, a field, or a combination of both. That’s why we distinguish between two separate lines of increasing dynamization:\n\ndynamization of substances, and\ndynamization of fields.\n\n\nThe line of substance dynamization\nIn the line of substance dynamization, the system goes through the following stages during its development:\n\nA new system typically begins as a monolith structure, which is why this stage is considered the starting point of the evolution. Such a system is the simplest, but also the least adaptable – none of its properties can change during use. As the system evolves, its level of dynamization gradually increases. The monolith first becomes divided into spatial zones with different properties. Next, it evolves into a one-joint system, and then into a multi-joint system, where a joint represents a degree of freedom. Eventually, the number of hinges increases to the point where the entire system – or its parts – becomes fully flexible or elastic. The system may then evolve into forms such as powder, liquid, and finally gas. Ultimately, it transforms into a field-based system, which is more controllable and adaptable than substances, making it even more dynamic.\n\n\nThe line of field dynamization\nIn the line of field dynamization, the system goes through the following stages:\n\nA newly created system is usually based on a constant field. The next step in its evolution is transition to a system with a gradient field, and then the variable fields. The difference between them is that for a gradient field the parameter value changes in space; for a variable field it changes over time. \nThe following step in the evolution is transition to a system with an impulse field. Using resonance field is supposed to be the next according to the trend. \nApplication of more complex fields is typical for the end of this line of development. The system uses wave interference, both standing and moving."
  },
  {
    "objectID": "index.html#dynamization-of-composition",
    "href": "index.html#dynamization-of-composition",
    "title": "TRIZ knowledge base",
    "section": "Dynamization of composition",
    "text": "Dynamization of composition\nThis sub-trend is also called segmentation of components. According to it, the system goes through the following stages in its development:\n\nIn historical materials, one can find an additional mechanism identified by Altshuller, often referred to as the trend of increasing porosity. This trend includes stages ranging from a solid monolith, to a single opening, to multiple pores, and eventually to micropores at the molecular level.\nThis trend does not appear in the current hierarchy, as it has not yet been fully studied."
  },
  {
    "objectID": "index.html#dynamization-of-functions",
    "href": "index.html#dynamization-of-functions",
    "title": "TRIZ knowledge base",
    "section": "Dynamization of functions",
    "text": "Dynamization of functions\nThis sub-trend essentially states that system evolves from single-function to multi-function systems. There are no intermediate states that the system passes through.\n\nTrend of increasing value"
  },
  {
    "objectID": "index.html#overview-81",
    "href": "index.html#overview-81",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe trend of increasing value, also referred to as the trend of increasing ideality, is the primary mechanism behind the trend of S-curve evolution. All other trends serve as its supporting mechanisms.\nAccording to this trend, for a system to remain competitive and attractive in the market, its value must continuously increase. This can be achieved through two types of mechanisms:\n\nby applying any of the trends positioned below it in the trends’ hierarchy, or\nby using the internal mechanisms of the trend itself, which can be expressed as models representing value growth as the ratio of total functionality to total cost of the system."
  },
  {
    "objectID": "index.html#internal-mechanisms-of-the-trend-of-increasing-value",
    "href": "index.html#internal-mechanisms-of-the-trend-of-increasing-value",
    "title": "TRIZ knowledge base",
    "section": "Internal mechanisms of the trend of increasing value",
    "text": "Internal mechanisms of the trend of increasing value\nIncreasing a system’s value for the market is always considered in the context of a specific MPV.\nAccording to the definition, a system’s value is directly proportional to the sum of its functionalities and inversely proportional to the sum of its costs. Regardless of where the system is on the S-curve, its functionality must outweigh its costs in order to remain viable.\nThis advantage can be maintained in various ways. Identifying the current stage of the S-curve for the given MPV is extremely helpful in determining the right strategy. The diagram below outlines recommended strategies for each stage of development:\n\nThe recommended strategies for each stage of system development are as follows:\n\n\n\n\n\n\n\n\n\nstrategy\nexplanation\n\n\nStage 1\nΣF↑ / ΣC↓ focus on simultaneously improving functionality and reducing costs\nStage 1 offers many opportunities for major changes and improvements, as the system is still in its early phase and is highly adaptable to modifications.\n\n\nStage 2\nΣF↑↑ / ΣC↑ ΣF↑ / ΣCconst ensure that functionality grows faster than costs\nAs the product evolves into Stage 2, its MPV increases rapidly, which typically drives up costs. Since costs are rising, functionality must grow at an even faster rate. If the growth in functionality slows down, costs should remain stable or increase only slightly.\n\n\nStage 3\nΣFconst / ΣC↓ shift focus to cost reduction\nIn the maturity stage, there are fewer opportunities for dramatic functional improvements. The priority should be on optimization and cutting costs wherever possible.\n\n\nStage 4\nΣF↓ / ΣC↓↓ intentionally reduce functionality (by designing lower-functionality products) to allow for significant cost reductions\nAt this point, the system is approaching obsolescence and is being pushed out of the market. Opportunities to improve functionality or lower costs are limited. However, it is still possible to increase value. A good example of this strategy is the development of disposable products (such as cameras, phones, paper towels, etc.), where functionality is lowered deliberately to reduce costs and boost market appeal.\n\n\n\n\nTrend of S-curve evolution"
  },
  {
    "objectID": "index.html#overview-82",
    "href": "index.html#overview-82",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nIn the context of each MPV, of a technical system evolves along an S-curve, passing through the following stages:\n\n\n\n\n\n\n\nStage 1:\na “newborn” system has not yet entered the market and may exist only as an idea, sketch, or prototype.\n\n\nStage 2:\na stage of intensive growth and expansion – the system moves into mass production.\n\n\nStage 3:\nthe mature system is still in mass production, but it reaches one or several development limits.\n\n\nStage 4:\nthe system becomes non-utilitarian, or it continues to function only in highly specialized fields or within a supersystem. It is the phase of decline.\n\n\n\nIf the system survives stage 1, it enters the transitional phase, considered in TRIZ as a separate stage (in fact it is the very end of stage 1). This phase is crucial in the system’s lifetime, as it transitions from lab development to market entry. The risk of market rejection is high, and the newly developed system often faces its strongest competition, contending with both other emerging systems and established, mature ones.\n\nThe trend of the S-curve evolution is considered the overarching law, placing it at the very top of the hierarchy of trends of engineering systems evolution (TESE).\nFor a system to evolve along the S-curve, its value – within the context of a given MPV – must continuously increase. That’s why the trend of increasing value directly drives the S-curve trend. All other trends stem from it, making them its sub-trends.\nIn other words, when a system evolves according to any given trend, it directly leads to an increase in system value, thereby moving the system forward along its S-curve.\n\nArticles\n\nMain parameter of value\nS-curve\n\n\n\nMain parameter of value"
  },
  {
    "objectID": "index.html#overview-83",
    "href": "index.html#overview-83",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe main parameter of value (MPV) refers to a critical attribute, parameter, or feature of a system that significantly influences customer decisions and, therefore, determines the success of a technical system in the market. In other words, MPV represents the key factor that customers consider when assessing a product’s attractiveness.\nFor example, different MPVs for a kitchen robot may include:\n\nmotor power, which affects the device’s performance and efficiency,\nnumber of accessories, which influences functionality,\nmaterial of components, which impacts durability and lifespan,\nbody shape, which determines ergonomic usability.\n\nEach of these parameters indicates a direction for development. By analyzing them, manufacturers can make informed decisions about where to focus their innovation efforts and which parameters to improve.\n\nS-curve"
  },
  {
    "objectID": "index.html#overview-84",
    "href": "index.html#overview-84",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe S-curve is a graphical representation illustrating the life cycle of a system’s main parameter of value (MPV) over time. It shows how a parameter evolves from its initial development through maturity to its eventual decline. The horizontal axis of the S-curve represents time, while the vertical axis represents the value or performance of a specific MPV.\nThe concept of the S-curve was originally adapted from biology into other fields of knowledge. In early 20th-century research, scientists discovered that bacterial colony growth followed a distinct pattern: a slow start, a phase of rapid growth, stabilization, and eventual decline due to resource limitations. This pattern resembled the shape of the letter S.\nDuring his research, Altshuller examined and confirmed that various MPVs in engineering systems also evolve along their own specific S-curves over time.\nTo analyze and understand the evolutionary stage of an engineering system, Altshuller recommended using specific indicators. These indicators are a fundamental part of classical TRIZ and undoubtedly contribute significantly to the methodology. However, over time, it became clear that their practical application has serious limitations, and the results of analyses based on them were not always reliable. The Altshuller’s classical approach was further developed and served as the foundation for the creation of a pragmatic S-curve analysis."
  },
  {
    "objectID": "index.html#stages-of-the-s-curve",
    "href": "index.html#stages-of-the-s-curve",
    "title": "TRIZ knowledge base",
    "section": "Stages of the S-curve",
    "text": "Stages of the S-curve\nEvery system goes through 4 main stages during its life cycle:\n\n\n\n\n\n\n\n\nSTAGE 1:\nA “newborn” system has not yet entered the market. It may even exist in the form of an idea, a sketch, or a prototype. MPV is almost flat.\n\n\n\nIf the system survives stage 1, it enters the TRANSITIONAL STAGE. Due to specific characteristics, the transitional stage is sometimes considered a separate Stage in TRIZ, in fact it is the very end the stage 1. The system is still very young and vulnerable to external factors, but it is nearly ready to go to market or occupies small, strictly limited market niches. MPV starts growing noticeably.\n\n\nSTAGE 2:\nA stage of intensive growth and expansion – the system moves into mass production, it is adapted for use in different applications, its variations and applications become more widely differentiated, the supersystem begins to adapt to the system, etc. MPV grows fast.\n\n\nSTAGE 3:\nThe mature system reaches some development limits. It is still in mass production, successfully infiltrates new applications and market niches, consumes highly specialized resources. Its incremental improvement requires disproportionate resources. The supersystem components intensively adapt to the system. MPV stabilizes and grows slowly.\n\n\nSTAGE 4:\nThe phase of decline. The system loses its utilitarian purpose, so it becomes an entertainment artifact, a decoration, a toy, sports equipment, etc., or it continues to function only in highly specialized fields or within a supersystem. MPV goes down."
  },
  {
    "objectID": "index.html#the-altshullers-indicators-of-the-s-curve-stages",
    "href": "index.html#the-altshullers-indicators-of-the-s-curve-stages",
    "title": "TRIZ knowledge base",
    "section": "The Altshuller’s indicators of the S-curve stages",
    "text": "The Altshuller’s indicators of the S-curve stages\nThe indicators advised by Altshuller are the following:\n\nMain parameter of value behavior is usually the easiest to be measured.\nNumber of inventions usually expressed as the number of patents. It is an indicator for which data can be easily obtained; they can be provided by patent databases (now, available online).\nLevel of invention is an indicator that has some subjectivity.\nProfitability is probably the most difficult of the four measures. For a subsystem of a larger system, analysis can sometimes be even impossible.\n\nThe following chart illustrates a comparison of how individual indicators change as the system evolves:\n\n\nMPV value\nDuring the early stages, MPV value tends to be low as the system is refined and improved. During the rapid growth, it increases significantly due to the optimization for mass production and market demands. During the mature stage, it may plateau or increase more slowly, and it can decline in the final stage as the system becomes obsolete or less competitive.\n\n\n\nNumber of patents\nThe number of patents is an indicator for which data can be relatively easily obtained from patent databases available online.\nIt usually experiences two significant spikes:\n\nduring the introduction of the system into mass production, and\nduring efforts to extend the system’s lifecycle.\n\n\nIn the first stage of the system’s development in the context of a specific MPV, the number of patents is relatively low due to a lack of practical applications. As the system enters Stage 2, demand increases for technologies that enable mass production and widespread adoption. Companies and inventors race to secure intellectual property rights, leading to a rapid rise in patent filings.\nIn the third stage, patent activity continues to grow but for different reasons. The system is now mature, and engineers focus on extending its lifespan and improving profitability. Innovations mainly target optimization, performance enhancement, and new applications. In this phase, the motivation for patents is often to maintain market relevance and profitability.\nIn the fourth stage, a noticeable decline in patent activity occurs. The technology has reached its peak, and opportunities for further innovation are limited. The drop in patent filings reflects the phase in which the system is either being phased out or replaced by newer technologies, and the drive for new patents significantly weakens compared to the active pursuit seen in the previous two stages.\n\n\nLevel of invention\nThe level of invention is more difficult to obtain. The indicator depends on the individual assessment of patents, making it a subjective measure. Additionally, analyzing the history of a given system in the context of the given parameter is usually a very time-consuming process.\nYoung systems are characterized by a very high level of invention, which decreases over time. A temporary increase occurs during the period of mass application, only to revert to a downward trend.\n\nIn his research, Altshuller observed that not all inventions possess the same inventive level. By using the criteria of how contradictions are resolved and the scope of introduced inventions, he identified five levels:\nLevel 1 involves simple optimizations that do not resolve any contradictions and typically include minor improvements, usually of a structural nature, introduced through experimentation. These solutions often refine existing systems without introducing new principles. Developing these requires knowledge and resources (devices, methods, materials) related to the specific system.\nLevel 2 encompasses inventions that resolve contradictions, but these contradictions are simple and relatively easy to solve. The solutions typically involve still minor, but more significant changes than those at Level 1. These changes remain within the same engineering field, although they may require knowledge and resources from other areas of industry.\nLevel 3 is characterized by advanced and non-obvious solutions; however, both the problem and the solution still originate from the same field. These inventions are more sophisticated and already involve the use of knowledge from other branches of industry.\nLevel 4 includes more groundbreaking solutions that synthesize new systems by applying knowledge from one field of science to solve problems in another (e.g., solving a mechanical problem using principles from biology). By integrating different fields, this level reflects a significant leap in innovation.\nLevel 5 is the highest. It involves breakthrough solutions often resulting from fundamental scientific research. These introduce new principles that can revolutionize entire industries, such as the invention of the laser or radio. These inventions typically go beyond the scope of conventional problem-solving methods, such as TRIZ.\n\n\nProfitability\nProfitability is probably the most difficult to obtain. For a subsystem of a larger system, analysis can sometimes be almost impossible.\nYoung systems, despite their very high level of invention, do not generate income – they often exist only on paper or in single prototypes. They have many flaws and inconveniences. Income begins to appear once they transition to mass application. During this period, even small improvements can yield significant profits.\n\n\n\nTrend of transition to the supersystem"
  },
  {
    "objectID": "index.html#overview-85",
    "href": "index.html#overview-85",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nIn general terms, the transition to a supersystem refers to hybridizing (integration) of the system with components of its supersystem.\nThe trend of transition to the supersystem is one of the most effective tools for increasing value of the system. On one hand, integration provides the system with access to additional resources, which can be used for further improvements and enhanced functionality. On the other hand, after integration, some components may become redundant, and their removal can lead to cost reduction."
  },
  {
    "objectID": "index.html#sub-trends-mechanisms-of-the-trend",
    "href": "index.html#sub-trends-mechanisms-of-the-trend",
    "title": "TRIZ knowledge base",
    "section": "Sub-trends (mechanisms) of the trend",
    "text": "Sub-trends (mechanisms) of the trend\nThe trend is one of the most well-developed TESE. It has four sub-trends helping to define what kind of engineering systems should merge, how deep they should be integrated, how many systems should get combined, etc.\nThese sub-trends are the following:\nSub-trend 1: Parameters of the integrated systems that perform the same main function become increasingly different.\nSub-trend 2: The main functions of integrated systems become increasingly different.\nSub-trend 3: The level of integration of engineering systems becomes deeper.\nSub-trend 4: The number of systems that get integrated together increases.\n\nIncreasing differentiation of parameters\nThis sub-trend determines what systems merge and how they do it if they perform the same main function. The sequential steps are the following:\n\nhomogeneous systems, i.e. systems with the same parameters,\nsystems that differ by the value of at least one parameter,\ndifferent systems performing the same or similar main function (so called competing systems).\n\nThe detailed step-by-step algorithm for merging competing systems is feature transfer.\n\n\nIncreasing differentiation between main functions\nThis sub-trend explains how systems merge if they perform different main functions. This sub-trend could also be considered as the continuation of the previous mechanism because it starts where the sub-trend of increasing differentiation of parameters ends.\nThe steps of the sub-trend are the following:\n\nallied systems, i.e. performing different main functions, but having common characteristics, e.g.,:\n\nthe object of the main function is the same for both systems,\nthe systems are involved in the same process, or\nthe systems are used in the same situation or under the same conditions,\n\nheterogeneous systems, i.e. performing different main functions, with no common characteristics,\ninverse systems, i.e. systems performing opposite main functions.\n\n\n\nDeeper integration\nThis mechanism determines how deep should the systems be integrated. This sequence should be the recommendation for the level of integration of merging systems.\nLevels of the systems integration are the following:\n\nunlinked systems, i.e. put together without any continuous link,\npartially trimmed system, when some components become redundant and get trimmed,\ncompletely trimmed system, i.e. integration is so deep that it is not possible to determine which of the merged systems is represented by the final solution; usually one of the systems get totally trimmed.\n\n\n\nIncreased number of integrated systems\nThe last sub-trend determines how many systems merge. It explains that systems typically evolve in the following sequence:\n\nmono-system, i.e. single system,\nbi-system, formed as the result of combining two systems,\npoly-system, formed as the result of combining several systems.\n\nMono-system should be considered as a starting point of the evolution line. As the system develops, the number of integrated systems grows more and more.\n\n\nTrend of uneven development of system components"
  },
  {
    "objectID": "index.html#overview-86",
    "href": "index.html#overview-86",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nAlongside the trend of increasing controllability, the trend of uneven development of system components serves as a mechanism of the trend of increasing coordination.\nThis trend in a way bridges technology and philosophy. The evolution of a system is driven by resolving contradictions, while contradictions themselves arise from the uneven development of the system’s components. So, when one part of the system evolves faster than the others, a mismatch occurs between the components – this discrepancy triggers further developments, and the cycle continues.\nThis trend is directly tied to the S-curve of development:\n\nA good example illustrating the trend is the evolution of the automobile.\nIn early cars, the engine was the most advanced component. Over time, gaps began to emerge between the development of the engine and other sub-systems of the vehicle. These discrepancies drove the advancement of systems such as the drivetrain, transmission, body design, air conditioning, and more – all in response to the uneven pace of the development."
  },
  {
    "objectID": "index.html#glossary",
    "href": "index.html#glossary",
    "title": "TRIZ knowledge base",
    "section": "GLOSSARY",
    "text": "GLOSSARY"
  },
  {
    "objectID": "index.html#a",
    "href": "index.html#a",
    "title": "TRIZ knowledge base",
    "section": "A",
    "text": "A\nAdditional function: a useful function that acts on a component of the supersystem that is not a target component.\nAlgorithm for resolving physical contradictions: a problem-solving tool that provides a systematic access to the inventive principles for solving physical contradictions.\nAlternative system: a competing system that has a complementary, to the base system, pair of advantages and disadvantages.\nAltshuller matrix: go to contradiction matrix.\nARIZ: a problem-solving tool that transforms a complex key problem into a well-defined model of the problem, which can be solved effectively using a wide spectrum of TRIZ tools.\nAuxiliary function: a useful function that acts on a component of the analyzed engineering system."
  },
  {
    "objectID": "index.html#b",
    "href": "index.html#b",
    "title": "TRIZ knowledge base",
    "section": "B",
    "text": "B\nBase system: a system to which features from the alternative system is transferred. The base system is the alternative system selected for improvement.\nBasic function: a useful function directed toward a target component of the analyzed engineering system."
  },
  {
    "objectID": "index.html#c",
    "href": "index.html#c",
    "title": "TRIZ knowledge base",
    "section": "C",
    "text": "C\nCause – effect chain analysis (CECA): an analytical tool that identifies the key disadvantages of the engineering system. This is accomplished by building cause-effect chains of disadvantages that link the initial disadvantage with its fundamental causes.\nChain Su-Field: a combination of two or more Su-Fields where one substance participates in two Su-Fields.\nClone problems application: a problem- solving tool that generalizes the approach to solving one problem and applies the approach to solving another problem.\nCompeting system: an engineering system that performs the same or similar main function as the analyzed system.\nComplex Su-Field: a complete Su-Field with an extra substance (often in the form of an additive) that readily responds to the existing field.\nComponent: a material object that constitutes a part of an engineering system or its supersystem.\nComponent analysis: a stage in Function Analysis that identifies components of the engineering system and its supersystem.\nComponent model: a set of components belonging to the analyzed engineering system and its supersystem.\nConflicting pair: (in ARIZ) a pair of components, the tool(s) and the product(s), interaction between which causes a conflict that prevents reaching the required result.\nContradiction matrix (Altshuller matrix): a matrix that provides a systematic access to the inventive principles for solving engineering contradictions.\nCorrective function: a useful function that eliminates a defect.\nCost analysis: a step in function-cost analysis that identifies the absolute and relative costs of components that constitute a engineering system being analyzed."
  },
  {
    "objectID": "index.html#d",
    "href": "index.html#d",
    "title": "TRIZ knowledge base",
    "section": "D",
    "text": "D\nDatabase of scientific effects: a problem-solving tool used to solve key problems, modeled as functions. It is a collection of effects and scientific phenomena from various fields (physics, chemistry, biology, etc.), organized in accordance with a function-oriented and resource-oriented taxonomy (rather than topics).\nDefect: a material object (a substance or a field) that impairs performance of a useful function or performs some harmful function.\nDouble Su-Field: a Su-Field where two different fields provide interactions between the substances (one substance acts on the second substance with two fields)."
  },
  {
    "objectID": "index.html#e",
    "href": "index.html#e",
    "title": "TRIZ knowledge base",
    "section": "E",
    "text": "E\nEngineering contradiction (EC), also called technical contradictions (TC): a parametric model of the problem in which an attempt to improve one parameter of the engineering system leads to worsening of another parameter.\nEngineering system (technical system): a system that has been developed to perform a function."
  },
  {
    "objectID": "index.html#f",
    "href": "index.html#f",
    "title": "TRIZ knowledge base",
    "section": "F",
    "text": "F\nFeature transfer: an analytical tool for improvement of an engineering system given (base system) by transferring certain features from the alternative system with the aim to combine the useful features in a single system.\nFeature transfer problem: a key problem that must be resolved to realize feature transfer.\nField: an object without a rest mass that transfers interaction between substances.\nFlow: a movement of substance, energy (field), and information within an engineering system.\nFlow analysis: an analytical tool that identifies disadvantages in flows of energy, substances, and information in an engineering system.\nFlow disadvantage: a disadvantage of the analyzed engineering system identified during flow analysis.\nFunction: an action performed by one material object (function carrier) to change or maintain a parameter of another material object (object of the function).\nFunction analysis (see also: function-cost analysis): an analytical tool that identifies functions, their characteristics, and the cost of the system and its supersystem components.\nFunction–cost diagram: the graph that presents function point score (F) of the system components against their cost (C).\nFunction disadvantage: a disadvantage of an engineering system identified during the function modeling.\nFunction model: a model of an engineering system that identifies and describes functions performed by the components of the system and its supersystem, their usefulness and performance level, and costs.\nFunction modeling: the stage in function analysis, during which a function model of the analyzed engineering system is built.\nFunction-oriented search (FOS): a problem-solving tool based upon identifying existing technologies worldwide, using function criteria.\nFunction rank: a dimensionless measure that determines the importance of the useful function.\nFunctionality: go to functionality index.\nFunctionality index (functionality): a dimensionless measure of the overall functional contribution of the component to the overall performance of the engineering system."
  },
  {
    "objectID": "index.html#h",
    "href": "index.html#h",
    "title": "TRIZ knowledge base",
    "section": "H",
    "text": "H\nHarmful flow: a flow whose object (substance, energy, or information) performs a harmful function.\nHarmful function: a function performed by a function carrier that results in an inacceptable change or inacceptable preservation of a parameter of an object of the function.\nHarmful Su-Field: a Su-Field which represents a model of a problem, in which at least one interaction is harmful or excessive (excessive = normal + harmful excess)."
  },
  {
    "objectID": "index.html#i",
    "href": "index.html#i",
    "title": "TRIZ knowledge base",
    "section": "I",
    "text": "I\nIdeal final result (IFR): a model of the best solution to an inventive problem, whereby the problem is fully eliminated with minimal changes to the system and without any deterioration of system parameters.\nIdeal system: a system with infinite value. It may have no components or associated costs, but still deliver the intended functionality; in other words – it may not exist, but its main function is still being performed.\nIdeality: the ratio of the total benefits provided by the system to the sum of all payment factors associated with it. Payment factors include not only direct costs but also required space, environmental damage, maintenance, etc.\nIncomplete Su-Field: a Su-Field representing a model of a problem of lacking one substance, or a field, or substance and a field.\nInert system: go to neutral system.\nInitial disadvantage: a disadvantage in the analyzed engineering system, the elimination of which is the goal of a project. The initial disadvantage is formulated as an inverted project goal.\nInnovative benchmarking: an analytical tool that identifies the best engineering system for improvement and engineering system candidates for feature transfer.\nInsufficient Su-Field: a Su-Field representing a problem model, which is complete but does not work.\nInteraction: a physical touch between components of the engineeging system and/or components of its supersystem.\nInteraction analysis: a stage of function analysis of devices that identifies interactions between the components included into the component model.\nInteraction matrix: a table showing interactions among components of the analyzed engineering system and its supersystem. It is result of the interaction analysis.\nInventive principle: an abstract model of a solution that provides generalized recommendations for modifying the system to solve the problem formulated as the contradiction."
  },
  {
    "objectID": "index.html#k",
    "href": "index.html#k",
    "title": "TRIZ knowledge base",
    "section": "K",
    "text": "K\nKey disadvantage: a disadvantage selected to be eliminated to achieve the goal of the project. Usually, key disadvantages appear at the root of cause-effect chains.\nKey problem: a problem that has been selected for solving to achieve the goal of the project."
  },
  {
    "objectID": "index.html#m",
    "href": "index.html#m",
    "title": "TRIZ knowledge base",
    "section": "M",
    "text": "M\nMain function: the function for which the engineering system was designed.\nMain parameter of value (MPV): a key attribute, parameter, or feature of a product that is important for the purchasing decision.\nMATChEM: an acronym representing six types of fields used in TRIZ – mechanical, acoustic, thermal, chemical, electrical, and magnetic. The last two letters (EM) also stand for electromagnetic.\nMeasurement function: a useful function that reveals information about components.\nMeasurement Su-Field: a special type of a Su-Field which is used to present models of inventive problems where measurement or detection is required in terms of substance-field analysis. Its uniqueness lies in the fact that it is the only model with 2 fields and 1 substance (input field &gt; substance &gt; output field).\nMini-problem: a problem whose solution is limited by constraints against significant changes to the analyzed engineering system."
  },
  {
    "objectID": "index.html#n",
    "href": "index.html#n",
    "title": "TRIZ knowledge base",
    "section": "N",
    "text": "N\nNeutral flow: a flow that has an irrelevant or insignificant influence on the engineering system.\nNeutral system (inert system): a system that does not have the disadvantage of the base system (it is its advantage), but it also does not perform the desired main function (does not work) that is considered to be its disadvantage."
  },
  {
    "objectID": "index.html#o",
    "href": "index.html#o",
    "title": "TRIZ knowledge base",
    "section": "O",
    "text": "O\nOperating time: (in ARIZ) a time interval, when one of the contradiction requirements must be met.\nOperating zone: (in ARIZ) a physical space, where one of the contradiction requirements must be met.\nOperation: a set of functions within a technological process grouped because of certain considerations."
  },
  {
    "objectID": "index.html#p",
    "href": "index.html#p",
    "title": "TRIZ knowledge base",
    "section": "P",
    "text": "P\nPartial trimming: redistributing some useful functions of a system component to other components, while leaving the component in the system for performing remaining functions.\nPhysical contradiction: a parametric model of the problem that emerges when two justified contradictory demands are placed upon a single parameter of an object to provide the required result.\nProduct: (in ARIZ) the element that needs to be processed (manufactured, moved, changed, improved, protected from a harmful influence, revealed, measured etc.) according to the problem conditions\nProductive function: a useful function that irreversibly (permanently) changes a parameter of its object.\nProviding function: a useful function that is necessary for the performance of another useful function."
  },
  {
    "objectID": "index.html#s",
    "href": "index.html#s",
    "title": "TRIZ knowledge base",
    "section": "S",
    "text": "S\nS-curve: an S-shaped curve that represents the typical dependence of a main parameter of value of an evolving engineering system on time\nS-curve analysis: an analytical tool based on the trend of S-curve evolution that determines where an engineering system is in its development and what steps should be taken to improve it.\nStandard inventive solutions (SIS): a set of 76 typical solution models, to typical problem models that are expressed in the form of substance-field (Su-Field) models.\nSubstance: an object with a rest mass.\nSubstance-field analysis: a part of standard inventive solutions application that models a problem in the form of a substance-fields model.\nSubstance-field model (Su-Field model, Su-Field): an abstract model of a problem and potential solutions (when possible) formulated in terms of interactions between substances and fields.\nSupersystem: a system that contains the analyzed engineering system as a component.\nSupporting function: a useful function that temporarily changes a parameter of the product."
  },
  {
    "objectID": "index.html#t",
    "href": "index.html#t",
    "title": "TRIZ knowledge base",
    "section": "T",
    "text": "T\nTarget component: an object of the main function of the engineering system.\nTechnical contradiction: go to engineering contradiction.\nTechnical system: go to engineering system.\nTechnological process: a process that uses material objects, such as raw material, labour, energy, and machinery, to create finished products.\nTheory of inventive problems solving, TRIZ (ru: теория решения изобретательских задач): a discipline of applied sciences that deals with directions of development and methods for improvement of engineering systems.\nTool: (in ARIZ) an object directly interacting (conflicting) with the product in contradictions identified in part 1 of ARIZ.\nTransport function: a useful function that changes a position of its object in space.\nTrend of decreasing human involvement: trend of engineering system evolution according to which as an engineering system evolves, the number of engineering system functions performed by humans decreases.\nTrend of flow enhancement: trend of engineering system evolution according to which as an engineering system evolves, flow rates of substances, energy, or information increase, and/or the flows are better utilized.\nTrend of increasing completeness of system components: a trend of engineering system evolution according to which as an engineering system evolves, it acquires the following typical function blocks: operating agent, transmission, energy source, and control system.\nTrend of increasing controllability: trend of engineering system evolution according to which as engineering systems evolve, they develop more ways in which they can be controlled.\nTrend of increasing coordination: trend of engineering system evolution according to which as an engineering system evolves, characteristics of the components of the engineering system become more coordinated with each other and with the supersystem.\nTrend of increasing degree of trimming: trend of engineering system evolution according to which as an engineering system evolves, system elements (components or operations) are eliminated without impairing the functionality of the system, and possibly improving it.\nTrend of increasing dynamization: a trend of engineering system evolution according to which the engineering system and its components evolve towards becoming more flexible, dynamic, and adaptable – having more degrees of freedom.\nTrend of increasing value: a trend of engineering system evolution according to which as an engineering system evolves its value always increases.\nTrend of S-curve evolution: a trend of engineering system evolution located at the top position in the trends hierarchy. According to it, as an engineering system evolves, the evolution of each main parameter of value (MPV) describes an S-shaped curve in time.\nTrend of transition to supersystem: a trend of engineering system evolution which states that as an engineering system evolves, it is integrated with supersystem components.\nTrend of uneven development of system components: trend of engineering system evolution according to which as an engineering system evolves, development is concentrated on the operating agent first, and on the rest of the system later.\nTrends of engineering system evolution (TESE): statistically proven or empirically derived directions of engineering system development that describe the natural transition of engineering systems from one state to another.\nTrimming: an analytical tool for improving an engineering system by removing (trimming) certain components and redistributing their useful functions among the remaining system or its supersystem components, while preserving quality and performance of the system.\nTrimming model: a function model of an improved engineering system developed through trimming.\nTrimming problem: a problem that must be resolved to realize the trimming model.\nTrimming rule: an option for eliminating a component of an engineering system by either eliminating its useful functions or redistributing them to other system or supersystem components.\nTypical parameters: a limited set of the pre-defined generalized parameters that typically need improvement in the engineering system, used in the contradiction (Altshuller) matrix."
  },
  {
    "objectID": "index.html#u",
    "href": "index.html#u",
    "title": "TRIZ knowledge base",
    "section": "U",
    "text": "U\nUseful flow: a flow whose object (substance, energy, or information) performs a useful function or is an object of a useful function.\nUseful function: a function performed by a function carrier that results in a positive (required) change or preservation a parameter of an object of the function."
  },
  {
    "objectID": "index.html#v",
    "href": "index.html#v",
    "title": "TRIZ knowledge base",
    "section": "V",
    "text": "V\nValue: the ratio of a normalized sum of component/system function points over the sum of its costs.\nValue analysis: an analytical tool that compares relative functionality and relative cost of the system components.\nVicious circle: a situation in CECA when a disadvantage causes new disadvantages that lead to the original disadvantage to occur again."
  },
  {
    "objectID": "index.html#w",
    "href": "index.html#w",
    "title": "TRIZ knowledge base",
    "section": "W",
    "text": "W\nWasted flow: a flow that is characterized by losses of substance, energy, or information."
  },
  {
    "objectID": "index.html#x",
    "href": "index.html#x",
    "title": "TRIZ knowledge base",
    "section": "X",
    "text": "X\nX-factor: (in ARIZ) any change in the engineering system (e.g., change in its components, parameters, etc.) that should be incorporated into the system in order to solve a problem."
  },
  {
    "objectID": "index.html#resources-in-triz",
    "href": "index.html#resources-in-triz",
    "title": "TRIZ knowledge base",
    "section": "Resources in TRIZ",
    "text": "Resources in TRIZ"
  },
  {
    "objectID": "index.html#overview-87",
    "href": "index.html#overview-87",
    "title": "TRIZ knowledge base",
    "section": "Overview",
    "text": "Overview\nThe concept of resources in TRIZ goes beyond the conventional understanding of natural, financial, or human resources. Here, they are expanded into inventive and evolutionary resources that can be harnessed to enhance the engineering system performance and achieve its ideality by providing additional useful features, as well as reducing cost-related factors.\nResource in TRIZ can be the following:\n\nany substance or anything made of a substance (including waste) that is available in the system or its supersystem,\nan energy reserve, free time, unoccupied space, information, etc., and\nthe functional and technological ability to perform additional functions, including properties of substances as well as physical, chemical, geometric, and other effects.\n\nResources can be grouped in the following categories:\nA. Based on accessibility:\n\ninternal (limited to the main elements of the system),\nexternal, including resources from the general environment and those which are specific for the given system, and\nresources from the super-system or other accessible, inexpensive resources (including waste).\n\nB. Based on readiness for utilization:\n\nreadily-available resources, and\nderived (modified readily-available resources)."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "TESE.html#overview",
    "href": "TESE.html#overview",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "",
    "text": "The identification and understanding of trends of engineering systems evolution (TESE) is arguably TRIZ’s most significant contribution to the science of innovation. They also form the basis for many TRIZ tools.\nTESE emerged from an in-depth analysis of product and technology evolution across various industries. Studying their history – based on the examination of thousands of patents – revealed that all products and technologies follow similar conceptual patterns. TESE define the stages that nearly all products and technologies are likely to go through during their development. This does not mean that designing a product that deviates from TESE is technically impossible, but rather that sooner or later, it is likely to fail.\nAt the core of TESE lies the assumption that technologies evolve along their own trajectory, independent of human influence. For this reason, they are often referred to as the voice of the product. However, it is important to note that to be fully effective, TESE should be integrated with market needs – the voice of the customer."
  },
  {
    "objectID": "TESE.html#hierarchical-structure-of-tese",
    "href": "TESE.html#hierarchical-structure-of-tese",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "",
    "text": "TESE are organized in a hierarchical structure that reflects the relationships between them. In this structure, a lower-level trend functions as a sub-trend (mechanism) of a higher-level trend. However, each trend also has its own internal mechanisms that drive system evolution. In other words, for a system to evolve according to a higher-level trend, both its internal mechanisms and the mechanisms of its sub-trends must be implemented.\n\nIt is important to note that both TESE and their structure have evolved over decades, which is why different versions can be found in TRIZ literature. The officially approved definitions of the trends and their hierarchy, as recognized by MATRIZ, were developed by the St. Petersburg TRIZ Scientific School, which is considered the most pragmatic TRIZ school.\n\nTrend of S-curve evolution: as an engineering system evolves, the evolution of each main parameter of value (MPV) describes an S-shaped curve in time.\nTrend of increasing value: an engineering system evolves so that its value always increases.\nTrend of transition to the supersystem: as an engineering system evolves, it is integrated with supersystem components.\nTrend of increasing completeness of system components: as an engineering system evolves, it acquires the following typical functions: operating agent, transmission, energy source, and control system.\nTrend of decreasing human involvement: as an engineering system evolves, the number of engineering system functions performed by humans decreases.\nTrend of increasing degree of trimming: as an engineering system evolves, system elements (components or operations) are eliminated without impairing the functionality of the system, and possibly improving it.\nTrend of flow enhancement: as an engineering system evolves, flow rates of substances, energy, or information increase, and/or the flows are better utilized.\nTrend of increasing coordination: as an engineering system evolves, characteristics of the components of the engineering system become more coordinated with each other and with the supersystem.\nTrend of uneven development of system components: as an engineering system evolves, development is concentrated on the operating agent first, and on the rest of the system later.\nTrend of increasing controllability: as engineering systems evolve, they develop more ways in which they can be controlled.\nTrend of increasing dynamization: as an engineering system evolves, it and its components become more “dynamic”.\n\n\n\n\nTrend of S-curve evolution\n\nMain parameter of value\nS-curve\n\nTrend of increasing value\nTrend of transition to the supersystem\nTrend of increasing completeness of system components\nTrend of decreasing human involvement\nTrend of increasing degree of trimming\nTrend of flow enhancement\nTrend of increasing coordination\nTrend of uneven development of system components\nTrend of increasing controllability\nTrend of increasing dynamization"
  },
  {
    "objectID": "TESE.html#overview-1",
    "href": "TESE.html#overview-1",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nThe trend of decreasing human involvement is a sub-trend (mechanism) of the trend of increasing completeness of system components.\nBefore an engineering system is designed, a human performs all functions at every level themself – otherwise, those functions would not exist. The emergence of the system and its further development allow it to gradually take over these functions (increasing its completeness), thereby reducing human involvement. This process typically unfolds in the following order:\n\ntransmission,\nenergy source,\ncontrol system, and\ndecision-making.\n\n\nTrend of flow enhancement"
  },
  {
    "objectID": "TESE.html#overview-2",
    "href": "TESE.html#overview-2",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nTrend of flow enhancement is one of the four mechanisms directly supporting the trend of increasing value in the hierarchy of TESE (along with the trend of transition to the supersystem, the trend of increasing degree of trimming, and the trend increasing completeness of system components)."
  },
  {
    "objectID": "TESE.html#subtrends-of-the-trend-of-flow-enhancement",
    "href": "TESE.html#subtrends-of-the-trend-of-flow-enhancement",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Subtrends of the trend of flow enhancement",
    "text": "Subtrends of the trend of flow enhancement\nThe trend has two main sub-trends, each further divided into specific mechanisms:\n\nimproving useful flows, and\nreducing the negative impact of harmful/accidental flows.\n\n\nImproving useful flows\nUseful flows can be improved by two mechanisms:\nA. increasing the conductivity of the flow, or\nB. making better use of the flow.\n\nIncreasing the conductivity of the flow\nTo increase the conductivity of the useful flow, the following techniques can be applied:\n\nreducing the number of the flow transformations,\ntransition to a more efficient flow type,\nreducing the length of the flow,\neliminating “gray zones”,\neliminating “bottlenecks”,\ncreating a bypass,\nincreasing the conductivity of the separate parts of the flow channel,\nincreasing the density of the flow,\napplying the useful action of one flow to another,\napplying the useful action of one flow to the channel of another flow,\nrearranging one flow so that it carries another flow,\nassigning multiple flows to one channel,\nmodifying the flow to increase conductivity, or\ndirecting the flow through a supersystem channel.\n\n\n\nMaking better use of the flow\nTechniques applied to make better use of the flow can be as follows:\n\neliminating a stagnant zone,\nutilizing impulse action,\nutilizing resonance,\nmodulating the flow,\nredistributing the flow,\ncombining homogeneous flows,\nutilizing recirculation,\ncombining two different flows to obtain synergy, or\npresetting the necessary substance, energy, or information.\n\n\n\n\nReducing the negative impact of harmful/accidental flows\nThe negative impact of harmful/accidental flows can be reduced by:\nA. decreasing the conductivity of harmful or accidental flows, or\nB. reducing the impact of harmful flows.\n\nDecreasing the conductivity of harmful or accidental flows\nTo decrease the conductivity of harmful or accidental flows, the following techniques can be used:\n\nincreasing the number of flow transformations,\ntransition to a low-conductivity flow,\nincreasing the length of the flow,\nintroducing bottlenecks,\nintroducing stagnant zones,\nreducing the conductivity of part of the flow channel, or\nutilizing recirculation.\n\n\n\nReducing the impact of harmful flows\nThe following techniques are used to reduce the impact of harmful flows:\n\nintroducing gray zones,\nreducing the density of the flow,\neliminating resonance,\nredistributing the flow,\ncombining a flow and an anti-flow,\nmodifying the flow,\nmodifying the damaged object,\npresetting the substance, energy, or data that will be required to neutralize the flow,\nbypassing,\ntransferring the flow to the supersystem, or\nrecycling or recovering the incidental flows.\n\n\n\n\nTrend of increasing completeness of system components"
  },
  {
    "objectID": "TESE.html#overview-3",
    "href": "TESE.html#overview-3",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nTrend of increasing completeness of system components is one of the four mechanisms directly supporting the trend of increasing value in the hierarchy of TESE (along with the trend of transition to the supersystem, the trend of increasing degree of trimming, and the trend of flow enhancement).\nAn engineering system must utilize four essential blocks in order to operate:\n\noperating agent that performs a function identical to the main function of the system (basic function),\nsource of energy needed to operate the system,\ntransmission block, through which the energy is transferred from the source of energy to the operating agent, and\ncontrol block that controls the system operation.\n\nAn emerging, young system often consists solely of the operating agent, which remains its integral part throughout the lifecycle. Sometimes, it may additionlally be equipped with a primitive form of transmission.\nThe other function blocks are parts of the supersystem. As the engineering system is developing it acquires these function blocks of its own in the following order:\n\nThe development of a system through the integration of different blocks is not always a simple four-step sequence. The integration of some functional blocks may take place over several steps.\nFor example, a system does not receive a full motor right away – it may first be equipped with an energy storage device such as a spring or a bowstring. Similarly, the control block of a heating system gradually acquires different functions, such as a thermostat, a timer switch, and so on.\n\nTrend of increasing controllability"
  },
  {
    "objectID": "TESE.html#overview-4",
    "href": "TESE.html#overview-4",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nAlongside the trend of uneven development of system components, the trend of increasing controllability serves as a mechanism of the trend of increasing coordination.\nThe term control refers to actions aimed at adjusting the values of system parameters to align them with the changing parameters of the supersystem and the surrounding environment."
  },
  {
    "objectID": "TESE.html#mechanisms-of-the-trend-of-of-increasing-controllability",
    "href": "TESE.html#mechanisms-of-the-trend-of-of-increasing-controllability",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Mechanisms of the trend of of increasing controllability",
    "text": "Mechanisms of the trend of of increasing controllability\nA sub-trend of the trend of increasing controllability is the trend of increasing dynamization. Additionally, the trend has two mechanisms of its own which state that as a system evolves:\n\nthe level of control within the engineering system increases, and\nthe number of controllable states increases.\n\n\nThe level of control within the engineering system increases\nAccording to this mechanism, systems follow the path outlined below as they develop:\n\nAt first, the system is uncontrolled, meaning it lacks its own control block (e.g., office lighting that is manually switched on and off by staff). Once a control block is introduced, the system begins to control itself – initially through a fixed program (e.g., a lighting system with a built-in timer that turns lights on and off at set times). A more advanced system allows intervention to the fixed program (e.g., switching to a weekend mode or adjusting on/off times based on day length). The next stage is externally controlled system (e.g., a building manager monitoring room occupancy and manually switching lights based on presence).\nEventually, the system reaches full self-control – for instance, motion or presence sensors detect whether people are in the office, and the system automatically adjusts lighting accordingly. Here, it is possible to distinguish between macro-level control and micro-level control.\nAn example of macro-level control is a system equipped with special sensors that detect environmental parameters and adjust lighting accordingly (e.g., turning lights on or off based on the human presence or daylight levels).\nIn micro-level control, there are no separate components for detecting external conditions. Instead, the system uses specific materials or physical phenomena to respond directly to changes, without the need for prior detection. A good example is a check valve, which operates purely based on the force of the flowing medium acting on a movable part inside the valve. The valve opens and closes automatically, without the use of sensors, electronics, or external signals – just as long as there is appropriate flow and pressure of the working fluid.\n\n\nThe number of controllable states increases\nThis sub-trend states that as a system evolves, the number of controllable states increases in the following way:\n\nAn example is sound parameter control in systems designed for audio playback. Early phonographs had only one fixed volume level (single state), as there was no way to adjust it during playback. Over time,step switches were introduced that allowed users to choose from a few discrete volume levels. The next stage brought smooth volume adjustment, offering a wide range of infinitely variable states. Modern devices now feature digital potentiometers, enabling precise control not only of volume but also of tone, channel balance, and equalization – significantly increasing the number of controllable states (multiple ranges).\n\n\nTrend of increasing coordination"
  },
  {
    "objectID": "TESE.html#overview-5",
    "href": "TESE.html#overview-5",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nIn general, the trend of increasing coordination states that as an engineering system evolves, it becomes more coordinated – both internally and with the surrounding it supersystem. Components of the system work together more effectively, and interaction with the supersystem becomes increasingly seamless.\nThe trend of increasing coordination is one of the TESE still actively evolving. New project-based mechanisms are being discussed at conferences and in publications, and some of them may eventually become part of the methodology."
  },
  {
    "objectID": "TESE.html#mechanisms-of-the-trend-of-increasing-coordination",
    "href": "TESE.html#mechanisms-of-the-trend-of-increasing-coordination",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Mechanisms of the trend of increasing coordination",
    "text": "Mechanisms of the trend of increasing coordination\nThis trend includes two types of mechanisms:\n\nSub-trends, which are:\n\n\nthe trend of increasing controllability, and\nthe trend of uneven development of system components.\n\n\nInternal mechanisms, which are:\ncoordination of shape,\ncoordination of rhythms,\ncoordination of materials, and\ncoordination of actions.\n\nUnlike the sub-trends of other trends, the internal mechanisms of the trend of increasing coordination do not define a step-by-step sequence of development. Instead, they function more like checklists, where the identified states can occur in any order – or even simultaneously.\nThe only exception is the mechanism of coordination of action, where the states follow a specific sequence.\n\nCoordination of shape\nShape coordination can occur in four ways. Shapes may be:\nIDENTICAL – when elements fit together perfectly, for example:\n\na screw and a nut, where the thread dimensions must be identical for proper fit and function,\nscrewdriver tip and the slot of a screw,\nan egg and an egg carton,\na key and a lock.\n\nSELF-COMPATIBLE – when the shape of elements allows multiple objects to be tightly stacked or nested, for example:\n\ndisposable cutlery,\nshipping containers,\nstackable garden chairs.\n\nCOMPATIBLE – when components are coordinated with certain parameters of the supersystem, for example:\n\nergonomically shaped objects like door handles, furniture, or computer mice that match the shape of the human body,\na strainer designed to work well with powdered substances.\n\nSPECIAL – shapes that don’t fall into any of the above categories, designed to serve a unique purpose, for example:\n\nthe bow of an icebreaker designed to crack ice,\nthe shape of a shovel that allows it to scoop and move sand.\n\n\n\nCoordination of rhythms\nRhytm coordination can occur in three ways. These can be the following:\nIDENTICAL, for example:\n\nthe movement of valves in an internal combustion engine are perfectly synchronized with the motion of the piston to ensure that the air-fuel mixture is drawn in and the exhaust gases are released at the right moment,\naudio and video streams in AV systems play in sync to keep lips and voice aligned (a phenomenon known as lip sync),\n3D glasses, in which the right and left lenses are synchronized with the images delivered to the right and left eyes.\n\nCOMPLEMENTARY – components of a system do not operate simultaneously but instead take turns or work in a way that fills in each other’s idle time, for example:\n\nthe SETI@home program runs only when the computer is not in use (as a screensaver), making use of otherwise idle processing time,\ncollaborative robots (cobots) on an assembly line, where the robot’s rhythm is synchronized with a human worker’s pauses – the robot performs its task (e.g., tightening a screw), then stops to allow the human to complete their step (e.g., placing the next component).\n\nSPECIAL – all other types of rhythm coordination that don’t fit into the previous two categories, for example:\n\nultrasound therapy massagers, where the vibration frequency is tuned to the resonance of muscles and subcutaneous tissues,\nprecision agriculture irrigation systems, where the watering rhythm is aligned with the growth phases of plants and their circadian rhythm (such as transpiration cycles).\n\n\n\nCoordination of materials\nA checklist to support the search for materials suitable for coordination includes the following categories:\nIDENTICAL MATERIALS, for example:\n\ntransplanting a cloned organ,\nrepairing a damaged road surface using a mixture identical to the original material.\n\nSIMILAR MATERIALS, for example:\n\ntransplanting an organ from a donor,\nfilling a gap in a wooden piece of furniture with a matching piece of wood.\n\nINERT MATERIALS, for example:\n\ntransplanting an artificial organ,\npatching a wooden surface with filler compound.\n\nMATERIALS WITH SHIFTED PARAMETERS – materials whose coordination leads to an effect based on the difference in their properties, for example:\n\na thermocouple, made from two different metals – the temperature difference at their junction generates a voltage known as the thermoelectric effect.\n\nMATERIALS WITH OPPOSITE PARAMETERS, for example:\n\na cable consisting of a conductor and an insulator.\n\n\n\nCoordination of actions\nThe interaction between a tool and a product can take various forms. Contact between them may occur at a point (0D), along a line (1D), on a surface (2D), or throughout a volume (3D). Coordination of actions involves transitioning between these forms of contact, and this can happen in two directions:\n\nforward along the progression: 0D → 1D → 2D → 3D, or\nbackward along the progression: 3D → 2D → 1D → 0D.\n\n\nA forward along the progression means that if one object interacts with another at just a single point, improving the interaction can be achieved by expanding it to a line, then to a surface, and eventually to a full three-dimensional volume. For example, the earliest “washing machine” was simply a stone used to beat clothes – this was a point-based interaction (0D) with very low effectiveness. The process improved when people began using a stick, shifting to a line-based interaction (1D). Further development came with the use of a washboard, introducing surface-based interaction (2D). Eventually, the system evolved into the modern washing machine, where the interaction occurs in all three dimensions (3D).\nAn example of improving a system through a backward along the progression can be a pizza box. When the bottom of the box contacts the pizza across the entire surface (2D), moisture accumulates, causing the crust to become soggy. Introducing a ribbed or corrugated bottom shifts the interaction to line contact (1D), which improves air circulation and reduces moisture. Further enhancement can be achieved by designing the box with point-based support (0D) – providing minimal contact and allowing even better airflow, resulting in a crisper crust.\nThe direction of transition depends on two factors:\n\nwhether the function is useful or harmful, and\nthe availability of resources.\n\nThe following table illustrates how these factors influence the choice of transition direction:\n\n\n\nTrend of increasing degree of trimming"
  },
  {
    "objectID": "TESE.html#overview-6",
    "href": "TESE.html#overview-6",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nThe trend of of increasing degree of trimmingis one of the four mechanisms directly supporting the trend of increasing value in the hierarchy of TESE (along with the trend of transition to the supersystem, the trend of increasing completeness of system components, and the trend of flow enhancement).\nAccording to this trend, as an engineering system evolves, more and more of its components are trimmed. This applies to components of both devices and processes (operations).\nThe trend of increasing degree of trimming is fairly universal and can, in principle, be applied at any stage of system development. However, systems typically tend to expand in the early stages of the S-curve, while trimming becomes more relevant in the later stages, especially in stages 3 and 4.\nTrimming rules explain how to carry out trimming, while the trend provides guidance on what to trim and in what order. The trend has 3 mechanisms:\n\ntrimming function blocks,\ntrimming operations, and\ntrimming components with the lowest value."
  },
  {
    "objectID": "TESE.html#trimming-function-blocks",
    "href": "TESE.html#trimming-function-blocks",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Trimming function blocks",
    "text": "Trimming function blocks\nThis mechanism focuses on the function blocks of a system.\nThe trend of increasing completeness of the system components shows the order in which the system, as it evolves, acquires the following function blocks: operating agent, transmission, energy source, and control block.\nNow – to keep value growing – the system eliminates these blocks. This typically occurs in the following order:\n\ntransmission,\nenergy source,\ncontrol system, and\noperating agent.\n\nIn the long run, the system evolves into a self-controlling (intelligent) operating agent that is capable of generating its own energy."
  },
  {
    "objectID": "TESE.html#trimming-operations",
    "href": "TESE.html#trimming-operations",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Trimming operations",
    "text": "Trimming operations\nThis sub-trend applies specifically to processes.\nAccording to it, operations should be trimmed in the following order:\n1. operations with corrective functions,\n2. operations with providing functions, and\n3. operations with productive functions.\nThe guidelines for handling the functions of operations subjected to trimming are determined by the trimming rules for each type of function."
  },
  {
    "objectID": "TESE.html#trimming-components-with-the-lowest-value",
    "href": "TESE.html#trimming-components-with-the-lowest-value",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Trimming components with the lowest value",
    "text": "Trimming components with the lowest value\nThis sub-trend applies to both devices and processes. According to it, components with the lowest value are the first to be removed from the system.\n\nTrend of increasing dynamization"
  },
  {
    "objectID": "TESE.html#overview-7",
    "href": "TESE.html#overview-7",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nBy dynamization, we should understand the possibility of changing parameters values. It may refer to:\n\ndynamization of components,\nsegmentation of components, and\ndynamization of function.\n\nIn the hierarchy of trends, the trend of increasing dynamization is a mechanism of the trend of increasing controllability. A system must first become more dynamic before it can be effectively controlled.\nKeep in mind that – just like with other trends – a system does not have to pass through every stage in its evolution. Some stages may be skipped, and the system can leap to a higher level than what the trend line would suggest."
  },
  {
    "objectID": "TESE.html#dynamization-of-design",
    "href": "TESE.html#dynamization-of-design",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Dynamization of design",
    "text": "Dynamization of design\nThis sub-trend of the trend is also called dynamization of components.\nA component of an engineering system can be a substance, a field, or a combination of both. That’s why we distinguish between two separate lines of increasing dynamization:\n\ndynamization of substances, and\ndynamization of fields.\n\n\nThe line of substance dynamization\nIn the line of substance dynamization, the system goes through the following stages during its development:\n\nA new system typically begins as a monolith structure, which is why this stage is considered the starting point of the evolution. Such a system is the simplest, but also the least adaptable – none of its properties can change during use. As the system evolves, its level of dynamization gradually increases. The monolith first becomes divided into spatial zones with different properties. Next, it evolves into a one-joint system, and then into a multi-joint system, where a joint represents a degree of freedom. Eventually, the number of hinges increases to the point where the entire system – or its parts – becomes fully flexible or elastic. The system may then evolve into forms such as powder, liquid, and finally gas. Ultimately, it transforms into a field-based system, which is more controllable and adaptable than substances, making it even more dynamic.\n\n\nThe line of field dynamization\nIn the line of field dynamization, the system goes through the following stages:\n\nA newly created system is usually based on a constant field. The next step in its evolution is transition to a system with a gradient field, and then the variable fields. The difference between them is that for a gradient field the parameter value changes in space; for a variable field it changes over time. \nThe following step in the evolution is transition to a system with an impulse field. Using resonance field is supposed to be the next according to the trend. \nApplication of more complex fields is typical for the end of this line of development. The system uses wave interference, both standing and moving."
  },
  {
    "objectID": "TESE.html#dynamization-of-composition",
    "href": "TESE.html#dynamization-of-composition",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Dynamization of composition",
    "text": "Dynamization of composition\nThis sub-trend is also called segmentation of components. According to it, the system goes through the following stages in its development:\n\nIn historical materials, one can find an additional mechanism identified by Altshuller, often referred to as the trend of increasing porosity. This trend includes stages ranging from a solid monolith, to a single opening, to multiple pores, and eventually to micropores at the molecular level.\nThis trend does not appear in the current hierarchy, as it has not yet been fully studied."
  },
  {
    "objectID": "TESE.html#dynamization-of-functions",
    "href": "TESE.html#dynamization-of-functions",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Dynamization of functions",
    "text": "Dynamization of functions\nThis sub-trend essentially states that system evolves from single-function to multi-function systems. There are no intermediate states that the system passes through.\n\nTrend of increasing value"
  },
  {
    "objectID": "TESE.html#overview-8",
    "href": "TESE.html#overview-8",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nThe trend of increasing value, also referred to as the trend of increasing ideality, is the primary mechanism behind the trend of S-curve evolution. All other trends serve as its supporting mechanisms.\nAccording to this trend, for a system to remain competitive and attractive in the market, its value must continuously increase. This can be achieved through two types of mechanisms:\n\nby applying any of the trends positioned below it in the trends’ hierarchy, or\nby using the internal mechanisms of the trend itself, which can be expressed as models representing value growth as the ratio of total functionality to total cost of the system."
  },
  {
    "objectID": "TESE.html#internal-mechanisms-of-the-trend-of-increasing-value",
    "href": "TESE.html#internal-mechanisms-of-the-trend-of-increasing-value",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Internal mechanisms of the trend of increasing value",
    "text": "Internal mechanisms of the trend of increasing value\nIncreasing a system’s value for the market is always considered in the context of a specific MPV.\nAccording to the definition, a system’s value is directly proportional to the sum of its functionalities and inversely proportional to the sum of its costs. Regardless of where the system is on the S-curve, its functionality must outweigh its costs in order to remain viable.\nThis advantage can be maintained in various ways. Identifying the current stage of the S-curve for the given MPV is extremely helpful in determining the right strategy. The diagram below outlines recommended strategies for each stage of development:\n\nThe recommended strategies for each stage of system development are as follows:\n\n\n\n\n\n\n\n\n\nstrategy\nexplanation\n\n\nStage 1\nΣF↑ / ΣC↓ focus on simultaneously improving functionality and reducing costs\nStage 1 offers many opportunities for major changes and improvements, as the system is still in its early phase and is highly adaptable to modifications.\n\n\nStage 2\nΣF↑↑ / ΣC↑ ΣF↑ / ΣCconst ensure that functionality grows faster than costs\nAs the product evolves into Stage 2, its MPV increases rapidly, which typically drives up costs. Since costs are rising, functionality must grow at an even faster rate. If the growth in functionality slows down, costs should remain stable or increase only slightly.\n\n\nStage 3\nΣFconst / ΣC↓ shift focus to cost reduction\nIn the maturity stage, there are fewer opportunities for dramatic functional improvements. The priority should be on optimization and cutting costs wherever possible.\n\n\nStage 4\nΣF↓ / ΣC↓↓ intentionally reduce functionality (by designing lower-functionality products) to allow for significant cost reductions\nAt this point, the system is approaching obsolescence and is being pushed out of the market. Opportunities to improve functionality or lower costs are limited. However, it is still possible to increase value. A good example of this strategy is the development of disposable products (such as cameras, phones, paper towels, etc.), where functionality is lowered deliberately to reduce costs and boost market appeal.\n\n\n\n\nTrend of S-curve evolution"
  },
  {
    "objectID": "TESE.html#overview-9",
    "href": "TESE.html#overview-9",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nIn the context of each MPV, of a technical system evolves along an S-curve, passing through the following stages:\n\n\n\n\n\n\n\nStage 1:\na “newborn” system has not yet entered the market and may exist only as an idea, sketch, or prototype.\n\n\nStage 2:\na stage of intensive growth and expansion – the system moves into mass production.\n\n\nStage 3:\nthe mature system is still in mass production, but it reaches one or several development limits.\n\n\nStage 4:\nthe system becomes non-utilitarian, or it continues to function only in highly specialized fields or within a supersystem. It is the phase of decline.\n\n\n\nIf the system survives stage 1, it enters the transitional phase, considered in TRIZ as a separate stage (in fact it is the very end of stage 1). This phase is crucial in the system’s lifetime, as it transitions from lab development to market entry. The risk of market rejection is high, and the newly developed system often faces its strongest competition, contending with both other emerging systems and established, mature ones.\n\nThe trend of the S-curve evolution is considered the overarching law, placing it at the very top of the hierarchy of trends of engineering systems evolution (TESE).\nFor a system to evolve along the S-curve, its value – within the context of a given MPV – must continuously increase. That’s why the trend of increasing value directly drives the S-curve trend. All other trends stem from it, making them its sub-trends.\nIn other words, when a system evolves according to any given trend, it directly leads to an increase in system value, thereby moving the system forward along its S-curve.\n\nArticles\n\nMain parameter of value\nS-curve\n\n\n\nMain parameter of value"
  },
  {
    "objectID": "TESE.html#overview-10",
    "href": "TESE.html#overview-10",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nThe main parameter of value (MPV) refers to a critical attribute, parameter, or feature of a system that significantly influences customer decisions and, therefore, determines the success of a technical system in the market. In other words, MPV represents the key factor that customers consider when assessing a product’s attractiveness.\nFor example, different MPVs for a kitchen robot may include:\n\nmotor power, which affects the device’s performance and efficiency,\nnumber of accessories, which influences functionality,\nmaterial of components, which impacts durability and lifespan,\nbody shape, which determines ergonomic usability.\n\nEach of these parameters indicates a direction for development. By analyzing them, manufacturers can make informed decisions about where to focus their innovation efforts and which parameters to improve.\n\nS-curve"
  },
  {
    "objectID": "TESE.html#overview-11",
    "href": "TESE.html#overview-11",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nThe S-curve is a graphical representation illustrating the life cycle of a system’s main parameter of value (MPV) over time. It shows how a parameter evolves from its initial development through maturity to its eventual decline. The horizontal axis of the S-curve represents time, while the vertical axis represents the value or performance of a specific MPV.\nThe concept of the S-curve was originally adapted from biology into other fields of knowledge. In early 20th-century research, scientists discovered that bacterial colony growth followed a distinct pattern: a slow start, a phase of rapid growth, stabilization, and eventual decline due to resource limitations. This pattern resembled the shape of the letter S.\nDuring his research, Altshuller examined and confirmed that various MPVs in engineering systems also evolve along their own specific S-curves over time.\nTo analyze and understand the evolutionary stage of an engineering system, Altshuller recommended using specific indicators. These indicators are a fundamental part of classical TRIZ and undoubtedly contribute significantly to the methodology. However, over time, it became clear that their practical application has serious limitations, and the results of analyses based on them were not always reliable. The Altshuller’s classical approach was further developed and served as the foundation for the creation of a pragmatic S-curve analysis."
  },
  {
    "objectID": "TESE.html#stages-of-the-s-curve",
    "href": "TESE.html#stages-of-the-s-curve",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Stages of the S-curve",
    "text": "Stages of the S-curve\nEvery system goes through 4 main stages during its life cycle:\n\n\n\n\n\n\n\n\nSTAGE 1:\nA “newborn” system has not yet entered the market. It may even exist in the form of an idea, a sketch, or a prototype. MPV is almost flat.\n\n\n\nIf the system survives stage 1, it enters the TRANSITIONAL STAGE. Due to specific characteristics, the transitional stage is sometimes considered a separate Stage in TRIZ, in fact it is the very end the stage 1. The system is still very young and vulnerable to external factors, but it is nearly ready to go to market or occupies small, strictly limited market niches. MPV starts growing noticeably.\n\n\nSTAGE 2:\nA stage of intensive growth and expansion – the system moves into mass production, it is adapted for use in different applications, its variations and applications become more widely differentiated, the supersystem begins to adapt to the system, etc. MPV grows fast.\n\n\nSTAGE 3:\nThe mature system reaches some development limits. It is still in mass production, successfully infiltrates new applications and market niches, consumes highly specialized resources. Its incremental improvement requires disproportionate resources. The supersystem components intensively adapt to the system. MPV stabilizes and grows slowly.\n\n\nSTAGE 4:\nThe phase of decline. The system loses its utilitarian purpose, so it becomes an entertainment artifact, a decoration, a toy, sports equipment, etc., or it continues to function only in highly specialized fields or within a supersystem. MPV goes down."
  },
  {
    "objectID": "TESE.html#the-altshullers-indicators-of-the-s-curve-stages",
    "href": "TESE.html#the-altshullers-indicators-of-the-s-curve-stages",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "The Altshuller’s indicators of the S-curve stages",
    "text": "The Altshuller’s indicators of the S-curve stages\nThe indicators advised by Altshuller are the following:\n\nMain parameter of value behavior is usually the easiest to be measured.\nNumber of inventions usually expressed as the number of patents. It is an indicator for which data can be easily obtained; they can be provided by patent databases (now, available online).\nLevel of invention is an indicator that has some subjectivity.\nProfitability is probably the most difficult of the four measures. For a subsystem of a larger system, analysis can sometimes be even impossible.\n\nThe following chart illustrates a comparison of how individual indicators change as the system evolves:\n\n\nMPV value\nDuring the early stages, MPV value tends to be low as the system is refined and improved. During the rapid growth, it increases significantly due to the optimization for mass production and market demands. During the mature stage, it may plateau or increase more slowly, and it can decline in the final stage as the system becomes obsolete or less competitive.\n\n\n\nNumber of patents\nThe number of patents is an indicator for which data can be relatively easily obtained from patent databases available online.\nIt usually experiences two significant spikes:\n\nduring the introduction of the system into mass production, and\nduring efforts to extend the system’s lifecycle.\n\n\nIn the first stage of the system’s development in the context of a specific MPV, the number of patents is relatively low due to a lack of practical applications. As the system enters Stage 2, demand increases for technologies that enable mass production and widespread adoption. Companies and inventors race to secure intellectual property rights, leading to a rapid rise in patent filings.\nIn the third stage, patent activity continues to grow but for different reasons. The system is now mature, and engineers focus on extending its lifespan and improving profitability. Innovations mainly target optimization, performance enhancement, and new applications. In this phase, the motivation for patents is often to maintain market relevance and profitability.\nIn the fourth stage, a noticeable decline in patent activity occurs. The technology has reached its peak, and opportunities for further innovation are limited. The drop in patent filings reflects the phase in which the system is either being phased out or replaced by newer technologies, and the drive for new patents significantly weakens compared to the active pursuit seen in the previous two stages.\n\n\nLevel of invention\nThe level of invention is more difficult to obtain. The indicator depends on the individual assessment of patents, making it a subjective measure. Additionally, analyzing the history of a given system in the context of the given parameter is usually a very time-consuming process.\nYoung systems are characterized by a very high level of invention, which decreases over time. A temporary increase occurs during the period of mass application, only to revert to a downward trend.\n\nIn his research, Altshuller observed that not all inventions possess the same inventive level. By using the criteria of how contradictions are resolved and the scope of introduced inventions, he identified five levels:\nLevel 1 involves simple optimizations that do not resolve any contradictions and typically include minor improvements, usually of a structural nature, introduced through experimentation. These solutions often refine existing systems without introducing new principles. Developing these requires knowledge and resources (devices, methods, materials) related to the specific system.\nLevel 2 encompasses inventions that resolve contradictions, but these contradictions are simple and relatively easy to solve. The solutions typically involve still minor, but more significant changes than those at Level 1. These changes remain within the same engineering field, although they may require knowledge and resources from other areas of industry.\nLevel 3 is characterized by advanced and non-obvious solutions; however, both the problem and the solution still originate from the same field. These inventions are more sophisticated and already involve the use of knowledge from other branches of industry.\nLevel 4 includes more groundbreaking solutions that synthesize new systems by applying knowledge from one field of science to solve problems in another (e.g., solving a mechanical problem using principles from biology). By integrating different fields, this level reflects a significant leap in innovation.\nLevel 5 is the highest. It involves breakthrough solutions often resulting from fundamental scientific research. These introduce new principles that can revolutionize entire industries, such as the invention of the laser or radio. These inventions typically go beyond the scope of conventional problem-solving methods, such as TRIZ.\n\n\nProfitability\nProfitability is probably the most difficult to obtain. For a subsystem of a larger system, analysis can sometimes be almost impossible.\nYoung systems, despite their very high level of invention, do not generate income – they often exist only on paper or in single prototypes. They have many flaws and inconveniences. Income begins to appear once they transition to mass application. During this period, even small improvements can yield significant profits.\n\n\n\nTrend of transition to the supersystem"
  },
  {
    "objectID": "TESE.html#overview-12",
    "href": "TESE.html#overview-12",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nIn general terms, the transition to a supersystem refers to hybridizing (integration) of the system with components of its supersystem.\nThe trend of transition to the supersystem is one of the most effective tools for increasing value of the system. On one hand, integration provides the system with access to additional resources, which can be used for further improvements and enhanced functionality. On the other hand, after integration, some components may become redundant, and their removal can lead to cost reduction."
  },
  {
    "objectID": "TESE.html#sub-trends-mechanisms-of-the-trend",
    "href": "TESE.html#sub-trends-mechanisms-of-the-trend",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Sub-trends (mechanisms) of the trend",
    "text": "Sub-trends (mechanisms) of the trend\nThe trend is one of the most well-developed TESE. It has four sub-trends helping to define what kind of engineering systems should merge, how deep they should be integrated, how many systems should get combined, etc.\nThese sub-trends are the following:\nSub-trend 1: Parameters of the integrated systems that perform the same main function become increasingly different.\nSub-trend 2: The main functions of integrated systems become increasingly different.\nSub-trend 3: The level of integration of engineering systems becomes deeper.\nSub-trend 4: The number of systems that get integrated together increases.\n\nIncreasing differentiation of parameters\nThis sub-trend determines what systems merge and how they do it if they perform the same main function. The sequential steps are the following:\n\nhomogeneous systems, i.e. systems with the same parameters,\nsystems that differ by the value of at least one parameter,\ndifferent systems performing the same or similar main function (so called competing systems).\n\nThe detailed step-by-step algorithm for merging competing systems is feature transfer.\n\n\nIncreasing differentiation between main functions\nThis sub-trend explains how systems merge if they perform different main functions. This sub-trend could also be considered as the continuation of the previous mechanism because it starts where the sub-trend of increasing differentiation of parameters ends.\nThe steps of the sub-trend are the following:\n\nallied systems, i.e. performing different main functions, but having common characteristics, e.g.,:\n\nthe object of the main function is the same for both systems,\nthe systems are involved in the same process, or\nthe systems are used in the same situation or under the same conditions,\n\nheterogeneous systems, i.e. performing different main functions, with no common characteristics,\ninverse systems, i.e. systems performing opposite main functions.\n\n\n\nDeeper integration\nThis mechanism determines how deep should the systems be integrated. This sequence should be the recommendation for the level of integration of merging systems.\nLevels of the systems integration are the following:\n\nunlinked systems, i.e. put together without any continuous link,\npartially trimmed system, when some components become redundant and get trimmed,\ncompletely trimmed system, i.e. integration is so deep that it is not possible to determine which of the merged systems is represented by the final solution; usually one of the systems get totally trimmed.\n\n\n\nIncreased number of integrated systems\nThe last sub-trend determines how many systems merge. It explains that systems typically evolve in the following sequence:\n\nmono-system, i.e. single system,\nbi-system, formed as the result of combining two systems,\npoly-system, formed as the result of combining several systems.\n\nMono-system should be considered as a starting point of the evolution line. As the system develops, the number of integrated systems grows more and more.\n\n\nTrend of uneven development of system components"
  },
  {
    "objectID": "TESE.html#overview-13",
    "href": "TESE.html#overview-13",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nAlongside the trend of increasing controllability, the trend of uneven development of system components serves as a mechanism of the trend of increasing coordination.\nThis trend in a way bridges technology and philosophy. The evolution of a system is driven by resolving contradictions, while contradictions themselves arise from the uneven development of the system’s components. So, when one part of the system evolves faster than the others, a mismatch occurs between the components – this discrepancy triggers further developments, and the cycle continues.\nThis trend is directly tied to the S-curve of development:\n\nA good example illustrating the trend is the evolution of the automobile.\nIn early cars, the engine was the most advanced component. Over time, gaps began to emerge between the development of the engine and other sub-systems of the vehicle. These discrepancies drove the advancement of systems such as the drivetrain, transmission, body design, air conditioning, and more – all in response to the uneven pace of the development."
  },
  {
    "objectID": "TESE.html#glossary",
    "href": "TESE.html#glossary",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "GLOSSARY",
    "text": "GLOSSARY"
  },
  {
    "objectID": "TESE.html#a",
    "href": "TESE.html#a",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "A",
    "text": "A\nAdditional function: a useful function that acts on a component of the supersystem that is not a target component.\nAlgorithm for resolving physical contradictions: a problem-solving tool that provides a systematic access to the inventive principles for solving physical contradictions.\nAlternative system: a competing system that has a complementary, to the base system, pair of advantages and disadvantages.\nAltshuller matrix: go to contradiction matrix.\nARIZ: a problem-solving tool that transforms a complex key problem into a well-defined model of the problem, which can be solved effectively using a wide spectrum of TRIZ tools.\nAuxiliary function: a useful function that acts on a component of the analyzed engineering system."
  },
  {
    "objectID": "TESE.html#b",
    "href": "TESE.html#b",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "B",
    "text": "B\nBase system: a system to which features from the alternative system is transferred. The base system is the alternative system selected for improvement.\nBasic function: a useful function directed toward a target component of the analyzed engineering system."
  },
  {
    "objectID": "TESE.html#c",
    "href": "TESE.html#c",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "C",
    "text": "C\nCause – effect chain analysis (CECA): an analytical tool that identifies the key disadvantages of the engineering system. This is accomplished by building cause-effect chains of disadvantages that link the initial disadvantage with its fundamental causes.\nChain Su-Field: a combination of two or more Su-Fields where one substance participates in two Su-Fields.\nClone problems application: a problem- solving tool that generalizes the approach to solving one problem and applies the approach to solving another problem.\nCompeting system: an engineering system that performs the same or similar main function as the analyzed system.\nComplex Su-Field: a complete Su-Field with an extra substance (often in the form of an additive) that readily responds to the existing field.\nComponent: a material object that constitutes a part of an engineering system or its supersystem.\nComponent analysis: a stage in Function Analysis that identifies components of the engineering system and its supersystem.\nComponent model: a set of components belonging to the analyzed engineering system and its supersystem.\nConflicting pair: (in ARIZ) a pair of components, the tool(s) and the product(s), interaction between which causes a conflict that prevents reaching the required result.\nContradiction matrix (Altshuller matrix): a matrix that provides a systematic access to the inventive principles for solving engineering contradictions.\nCorrective function: a useful function that eliminates a defect.\nCost analysis: a step in function-cost analysis that identifies the absolute and relative costs of components that constitute a engineering system being analyzed."
  },
  {
    "objectID": "TESE.html#d",
    "href": "TESE.html#d",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "D",
    "text": "D\nDatabase of scientific effects: a problem-solving tool used to solve key problems, modeled as functions. It is a collection of effects and scientific phenomena from various fields (physics, chemistry, biology, etc.), organized in accordance with a function-oriented and resource-oriented taxonomy (rather than topics).\nDefect: a material object (a substance or a field) that impairs performance of a useful function or performs some harmful function.\nDouble Su-Field: a Su-Field where two different fields provide interactions between the substances (one substance acts on the second substance with two fields)."
  },
  {
    "objectID": "TESE.html#e",
    "href": "TESE.html#e",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "E",
    "text": "E\nEngineering contradiction (EC), also called technical contradictions (TC): a parametric model of the problem in which an attempt to improve one parameter of the engineering system leads to worsening of another parameter.\nEngineering system (technical system): a system that has been developed to perform a function."
  },
  {
    "objectID": "TESE.html#f",
    "href": "TESE.html#f",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "F",
    "text": "F\nFeature transfer: an analytical tool for improvement of an engineering system given (base system) by transferring certain features from the alternative system with the aim to combine the useful features in a single system.\nFeature transfer problem: a key problem that must be resolved to realize feature transfer.\nField: an object without a rest mass that transfers interaction between substances.\nFlow: a movement of substance, energy (field), and information within an engineering system.\nFlow analysis: an analytical tool that identifies disadvantages in flows of energy, substances, and information in an engineering system.\nFlow disadvantage: a disadvantage of the analyzed engineering system identified during flow analysis.\nFunction: an action performed by one material object (function carrier) to change or maintain a parameter of another material object (object of the function).\nFunction analysis (see also: function-cost analysis): an analytical tool that identifies functions, their characteristics, and the cost of the system and its supersystem components.\nFunction–cost diagram: the graph that presents function point score (F) of the system components against their cost (C).\nFunction disadvantage: a disadvantage of an engineering system identified during the function modeling.\nFunction model: a model of an engineering system that identifies and describes functions performed by the components of the system and its supersystem, their usefulness and performance level, and costs.\nFunction modeling: the stage in function analysis, during which a function model of the analyzed engineering system is built.\nFunction-oriented search (FOS): a problem-solving tool based upon identifying existing technologies worldwide, using function criteria.\nFunction rank: a dimensionless measure that determines the importance of the useful function.\nFunctionality: go to functionality index.\nFunctionality index (functionality): a dimensionless measure of the overall functional contribution of the component to the overall performance of the engineering system."
  },
  {
    "objectID": "TESE.html#h",
    "href": "TESE.html#h",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "H",
    "text": "H\nHarmful flow: a flow whose object (substance, energy, or information) performs a harmful function.\nHarmful function: a function performed by a function carrier that results in an inacceptable change or inacceptable preservation of a parameter of an object of the function.\nHarmful Su-Field: a Su-Field which represents a model of a problem, in which at least one interaction is harmful or excessive (excessive = normal + harmful excess)."
  },
  {
    "objectID": "TESE.html#i",
    "href": "TESE.html#i",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "I",
    "text": "I\nIdeal final result (IFR): a model of the best solution to an inventive problem, whereby the problem is fully eliminated with minimal changes to the system and without any deterioration of system parameters.\nIdeal system: a system with infinite value. It may have no components or associated costs, but still deliver the intended functionality; in other words – it may not exist, but its main function is still being performed.\nIdeality: the ratio of the total benefits provided by the system to the sum of all payment factors associated with it. Payment factors include not only direct costs but also required space, environmental damage, maintenance, etc.\nIncomplete Su-Field: a Su-Field representing a model of a problem of lacking one substance, or a field, or substance and a field.\nInert system: go to neutral system.\nInitial disadvantage: a disadvantage in the analyzed engineering system, the elimination of which is the goal of a project. The initial disadvantage is formulated as an inverted project goal.\nInnovative benchmarking: an analytical tool that identifies the best engineering system for improvement and engineering system candidates for feature transfer.\nInsufficient Su-Field: a Su-Field representing a problem model, which is complete but does not work.\nInteraction: a physical touch between components of the engineeging system and/or components of its supersystem.\nInteraction analysis: a stage of function analysis of devices that identifies interactions between the components included into the component model.\nInteraction matrix: a table showing interactions among components of the analyzed engineering system and its supersystem. It is result of the interaction analysis.\nInventive principle: an abstract model of a solution that provides generalized recommendations for modifying the system to solve the problem formulated as the contradiction."
  },
  {
    "objectID": "TESE.html#k",
    "href": "TESE.html#k",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "K",
    "text": "K\nKey disadvantage: a disadvantage selected to be eliminated to achieve the goal of the project. Usually, key disadvantages appear at the root of cause-effect chains.\nKey problem: a problem that has been selected for solving to achieve the goal of the project."
  },
  {
    "objectID": "TESE.html#m",
    "href": "TESE.html#m",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "M",
    "text": "M\nMain function: the function for which the engineering system was designed.\nMain parameter of value (MPV): a key attribute, parameter, or feature of a product that is important for the purchasing decision.\nMATChEM: an acronym representing six types of fields used in TRIZ – mechanical, acoustic, thermal, chemical, electrical, and magnetic. The last two letters (EM) also stand for electromagnetic.\nMeasurement function: a useful function that reveals information about components.\nMeasurement Su-Field: a special type of a Su-Field which is used to present models of inventive problems where measurement or detection is required in terms of substance-field analysis. Its uniqueness lies in the fact that it is the only model with 2 fields and 1 substance (input field &gt; substance &gt; output field).\nMini-problem: a problem whose solution is limited by constraints against significant changes to the analyzed engineering system."
  },
  {
    "objectID": "TESE.html#n",
    "href": "TESE.html#n",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "N",
    "text": "N\nNeutral flow: a flow that has an irrelevant or insignificant influence on the engineering system.\nNeutral system (inert system): a system that does not have the disadvantage of the base system (it is its advantage), but it also does not perform the desired main function (does not work) that is considered to be its disadvantage."
  },
  {
    "objectID": "TESE.html#o",
    "href": "TESE.html#o",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "O",
    "text": "O\nOperating time: (in ARIZ) a time interval, when one of the contradiction requirements must be met.\nOperating zone: (in ARIZ) a physical space, where one of the contradiction requirements must be met.\nOperation: a set of functions within a technological process grouped because of certain considerations."
  },
  {
    "objectID": "TESE.html#p",
    "href": "TESE.html#p",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "P",
    "text": "P\nPartial trimming: redistributing some useful functions of a system component to other components, while leaving the component in the system for performing remaining functions.\nPhysical contradiction: a parametric model of the problem that emerges when two justified contradictory demands are placed upon a single parameter of an object to provide the required result.\nProduct: (in ARIZ) the element that needs to be processed (manufactured, moved, changed, improved, protected from a harmful influence, revealed, measured etc.) according to the problem conditions\nProductive function: a useful function that irreversibly (permanently) changes a parameter of its object.\nProviding function: a useful function that is necessary for the performance of another useful function."
  },
  {
    "objectID": "TESE.html#s",
    "href": "TESE.html#s",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "S",
    "text": "S\nS-curve: an S-shaped curve that represents the typical dependence of a main parameter of value of an evolving engineering system on time\nS-curve analysis: an analytical tool based on the trend of S-curve evolution that determines where an engineering system is in its development and what steps should be taken to improve it.\nStandard inventive solutions (SIS): a set of 76 typical solution models, to typical problem models that are expressed in the form of substance-field (Su-Field) models.\nSubstance: an object with a rest mass.\nSubstance-field analysis: a part of standard inventive solutions application that models a problem in the form of a substance-fields model.\nSubstance-field model (Su-Field model, Su-Field): an abstract model of a problem and potential solutions (when possible) formulated in terms of interactions between substances and fields.\nSupersystem: a system that contains the analyzed engineering system as a component.\nSupporting function: a useful function that temporarily changes a parameter of the product."
  },
  {
    "objectID": "TESE.html#t",
    "href": "TESE.html#t",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "T",
    "text": "T\nTarget component: an object of the main function of the engineering system.\nTechnical contradiction: go to engineering contradiction.\nTechnical system: go to engineering system.\nTechnological process: a process that uses material objects, such as raw material, labour, energy, and machinery, to create finished products.\nTheory of inventive problems solving, TRIZ (ru: теория решения изобретательских задач): a discipline of applied sciences that deals with directions of development and methods for improvement of engineering systems.\nTool: (in ARIZ) an object directly interacting (conflicting) with the product in contradictions identified in part 1 of ARIZ.\nTransport function: a useful function that changes a position of its object in space.\nTrend of decreasing human involvement: trend of engineering system evolution according to which as an engineering system evolves, the number of engineering system functions performed by humans decreases.\nTrend of flow enhancement: trend of engineering system evolution according to which as an engineering system evolves, flow rates of substances, energy, or information increase, and/or the flows are better utilized.\nTrend of increasing completeness of system components: a trend of engineering system evolution according to which as an engineering system evolves, it acquires the following typical function blocks: operating agent, transmission, energy source, and control system.\nTrend of increasing controllability: trend of engineering system evolution according to which as engineering systems evolve, they develop more ways in which they can be controlled.\nTrend of increasing coordination: trend of engineering system evolution according to which as an engineering system evolves, characteristics of the components of the engineering system become more coordinated with each other and with the supersystem.\nTrend of increasing degree of trimming: trend of engineering system evolution according to which as an engineering system evolves, system elements (components or operations) are eliminated without impairing the functionality of the system, and possibly improving it.\nTrend of increasing dynamization: a trend of engineering system evolution according to which the engineering system and its components evolve towards becoming more flexible, dynamic, and adaptable – having more degrees of freedom.\nTrend of increasing value: a trend of engineering system evolution according to which as an engineering system evolves its value always increases.\nTrend of S-curve evolution: a trend of engineering system evolution located at the top position in the trends hierarchy. According to it, as an engineering system evolves, the evolution of each main parameter of value (MPV) describes an S-shaped curve in time.\nTrend of transition to supersystem: a trend of engineering system evolution which states that as an engineering system evolves, it is integrated with supersystem components.\nTrend of uneven development of system components: trend of engineering system evolution according to which as an engineering system evolves, development is concentrated on the operating agent first, and on the rest of the system later.\nTrends of engineering system evolution (TESE): statistically proven or empirically derived directions of engineering system development that describe the natural transition of engineering systems from one state to another.\nTrimming: an analytical tool for improving an engineering system by removing (trimming) certain components and redistributing their useful functions among the remaining system or its supersystem components, while preserving quality and performance of the system.\nTrimming model: a function model of an improved engineering system developed through trimming.\nTrimming problem: a problem that must be resolved to realize the trimming model.\nTrimming rule: an option for eliminating a component of an engineering system by either eliminating its useful functions or redistributing them to other system or supersystem components.\nTypical parameters: a limited set of the pre-defined generalized parameters that typically need improvement in the engineering system, used in the contradiction (Altshuller) matrix."
  },
  {
    "objectID": "TESE.html#u",
    "href": "TESE.html#u",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "U",
    "text": "U\nUseful flow: a flow whose object (substance, energy, or information) performs a useful function or is an object of a useful function.\nUseful function: a function performed by a function carrier that results in a positive (required) change or preservation a parameter of an object of the function."
  },
  {
    "objectID": "TESE.html#v",
    "href": "TESE.html#v",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "V",
    "text": "V\nValue: the ratio of a normalized sum of component/system function points over the sum of its costs.\nValue analysis: an analytical tool that compares relative functionality and relative cost of the system components.\nVicious circle: a situation in CECA when a disadvantage causes new disadvantages that lead to the original disadvantage to occur again."
  },
  {
    "objectID": "TESE.html#w",
    "href": "TESE.html#w",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "W",
    "text": "W\nWasted flow: a flow that is characterized by losses of substance, energy, or information."
  },
  {
    "objectID": "TESE.html#x",
    "href": "TESE.html#x",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "X",
    "text": "X\nX-factor: (in ARIZ) any change in the engineering system (e.g., change in its components, parameters, etc.) that should be incorporated into the system in order to solve a problem."
  },
  {
    "objectID": "TESE.html#resources-in-triz",
    "href": "TESE.html#resources-in-triz",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Resources in TRIZ",
    "text": "Resources in TRIZ"
  },
  {
    "objectID": "TESE.html#overview-14",
    "href": "TESE.html#overview-14",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "Overview",
    "text": "Overview\nThe concept of resources in TRIZ goes beyond the conventional understanding of natural, financial, or human resources. Here, they are expanded into inventive and evolutionary resources that can be harnessed to enhance the engineering system performance and achieve its ideality by providing additional useful features, as well as reducing cost-related factors.\nResource in TRIZ can be the following:\n\nany substance or anything made of a substance (including waste) that is available in the system or its supersystem,\nan energy reserve, free time, unoccupied space, information, etc., and\nthe functional and technological ability to perform additional functions, including properties of substances as well as physical, chemical, geometric, and other effects.\n\nResources can be grouped in the following categories:\nA. Based on accessibility:\n\ninternal (limited to the main elements of the system),\nexternal, including resources from the general environment and those which are specific for the given system, and\nresources from the super-system or other accessible, inexpensive resources (including waste).\n\nB. Based on readiness for utilization:\n\nreadily-available resources, and\nderived (modified readily-available resources)."
  },
  {
    "objectID": "Problem-solving-tools.html#relation-of-the-problem-solving-tool-with-a-problem-model",
    "href": "Problem-solving-tools.html#relation-of-the-problem-solving-tool-with-a-problem-model",
    "title": "Problem-solving tools",
    "section": "",
    "text": "Depending on how the problem has been modeled, the appropriate problem-solving tool is applied. Consequently, the use of a specific tool results in a corresponding model of solution. The table below illustrates these relationships:\n\n\n\n\n\n\n\n\nmodel of the problem\ntool used to process the problem model\nmodel of solution\n\n\nengineering (technical) contradiction\n1. contradiction (Atshuller) matrix\n1. inventive principle\n\n\nphysical contradiction\n1. algorithm of resolving physical contradiction 2. function-oriented search (FOS) 3. database of scientific effects 4. clone problems application\n1. inventive principle 2. technology identified during FOS 3. scientific effects\n\n\nSu-Field\n1. system of 76 standard inventive solutions\n1. standard inventive solution\n\n\nfunction\n1. function-oriented search (FOS) 2. database of scientific effects\n1. technology identified during FOS 2. scientific effect/phenomenon\n\n\n\n\n\n\nSubstance-field modeling\n\nStandard inventive solutions (SIS)\n\nSubstance-field analysis\nSubstance-field model\n\n\nContradictions\n\nEngineering (technical) contradiction\n\nContradiction matrix\n\nTypical parameters\n\n\nPhysical contradiction\n\nAlgorithm for resolving physical contradictions\n\nInventive principle\n\nARIZ\n\nConflicting pair\nProduct\nTool\nARIZ Block 1: Restructuring the original problem\nX-factor\nOperating zone\nOperating time\nMini-problem\nIdeal final result\n\nFunction-oriented search (FOS)\nClone problems application\nDatabase of scientific effects"
  },
  {
    "objectID": "Problem-solving-tools.html#overview",
    "href": "Problem-solving-tools.html#overview",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nThe system of standard inventive solutions (SIS) is a collection of 76 typical technical solutions, developed in the form of substance-field models (so called Su-Fields) representing interactions between substances and fields. It serves as a tool for analyzing and generating solutions to engineering problems. \nThe system was created by Genrikh Altshuller, who, through the analysis of thousands of patents, identified recurring patterns in problem-solving across various technical fields. The history of SIS dates back to the 1970s, when Altshuller and his team developed the first set of 28 standard solutions based on the Su-Field model. The system was further expanded throughout the 1980s, culminating in a set of 76 standards, which Altshuller deemed sufficiently complete. However, he did not rule out the possibility of further expanding the system in the future.\nThus, the list of standard inventive solutions is not finite. Theoretically, new recommendations could be discovered and added, based on emerging technologies and evolving trends in engineering. Nonetheless, the current collection provides a robust foundation for addressing a wide range of technical challenges."
  },
  {
    "objectID": "Problem-solving-tools.html#structure-of-the-system",
    "href": "Problem-solving-tools.html#structure-of-the-system",
    "title": "Problem-solving tools",
    "section": "Structure of the system",
    "text": "Structure of the system\nThe system of standard inventive solutions contains 76 SISs, which are organized into five classes. Providing the logical structure facilitates efficient navigation and application of solutions to specific types of engineering problems:\n\nClass 1: Building and destruction of Su-Fields,\nClass 2: Development of Su-Fields,\nClass 3: Transition to supersystem and microlevel,\nClass 4: Standard inventive solutions for measuring and detecting, and\nClass 5: Standard inventive solutions on application of SISs."
  },
  {
    "objectID": "Problem-solving-tools.html#full-list-of-76-standard-inventive-solutions",
    "href": "Problem-solving-tools.html#full-list-of-76-standard-inventive-solutions",
    "title": "Problem-solving tools",
    "section": "Full list of 76 standard inventive solutions",
    "text": "Full list of 76 standard inventive solutions\nThe following text presents the original content developed by G. Altshuller (including pictures).\n\nClass 1: Building and destruction of Su-Fields\nSISs from Class 1 are used to resolve engineering problems by improving interactions and eliminating harmful effects. They are focused on constructing or destroying Su-Field models if the models are incomplete (S1, S2, or F is missing), complete but not working (F is inadequate), or harmful.\nThe class contains 2 sub-classes and 13 SISs.\n\n1.1. Synthesis of a substance-field system\nThe main idea of this sub-class is clearly reflected in SIS 1.1.1: for the synthesis of a workable technical system, it is necessary – in the simplest case – to go from incomplete Su-Field to complete Su-Field. Often, constructing the Su-Field encounters difficulties due to various restrictions on the introduction of substances and fields. Standards 1.1.2 through 1.1.8 show typical workarounds in such cases.\n1.1.1. Synthesis of a substance-field system\nIf there is an object that is not easy to change as required, and the conditions do not contain any limitations on introducing substances and fields, solve the problem by synthesizing an SIS, i.e., by introducing the missing element(s).\n\n1.1.2. Improving interactions by introducing additives into the objects\nIf there is a Su-Field that is difficult to be changed, and there are no restrictions on introducing additives into the available substances, the problem is being solved by transition to the internal complex Su-Field, i.e., by introducing an internal additive to S1 or S2. That increases the controllability or adds the necessary properties to the Su-Field. The additive can be added permanently or temporarily.\n\nS1 is a product, S2 is a tool, S3 is an additive. Brackets denote an inner compound bond (an outer compound bond is denoted without brackets).\n1.1.3. Improving interactions by introducing additives into the system\nIf there is a Su-Field that is difficult to be changed, and there are no restrictions on introducing additives into the available substances, the problem is being solved by transition to the external complex Su-Field, i.e., by introducing an external additive to S1 or S2. That increases the controllability or adds the necessary properties to the Su-Field. The additive can be added permanently or temporarily.\n\n1.1.4. Use the environment to improve interactions\nIf there is a Su-Field that is difficult to be changed, and there are no restrictions on introducing additives into the available substances, the problem is being solved by introducing an additive that is a part of the environment or the supersystem.\n1.1.5. Modify the environment to improve interactions\nIf the external environment does not contain ready substances required to synthesize a Su-Field, these substances can be obtained by replacing the external environment with another one, or by decomposing the environment, or by introducing additives into the environment.\n1.1.6. Providing minimal effect of action\nIf a minimal (measured, optimal) effect of action is required, but it is difficult or impossible to provide it under the conditions of the problem, use a maximal action (either of a field or a substance) while the excess is then removed. Substance excess is removed by a field, while field excess is removed by a substance. The excess is shown by a double line.\n\n1.1.7. Providing maximal effect of action\nIf a maximal effect of action on a substance is required and this is not allowed, the maximal action has to be preserved but directed to another substance attached to the first one.\n\n1.1.8. Use the selectively maximal mode\nIf a selectively maximal action is required (maximal in certain zones, while maintaining the minimal in other zones), the field should be maximal, but:\n1.1.8.1. Selectively maximal mode: maximal field\nIn the first case, we introduce a protective substance where it is necessary to maintain minimal action.\n1.1.8.2. Selectively maximal mode: minimal field\nIn the second case, while having the minimal mode, we selectively introduce substances that locally generate an additional field, for example, thermit compaunds – for thermal action, explosive compaunds for mechanical action.\n\n\n1.2. Destroy Su-Fields\nSub-class 1.2. includes SISs for destruction of Su-Fields and the elimination or neutralization of harmful effects within them.\nThe strongest idea of this sub-class is the mobilization of the necessary elements through the use of the available substance-field resources.\nStandard 1.2.2 is particularly important. According to it, functions of a new substance are performed by modified substances already present in the system.\n1.2.1. Eliminate harmful interaction by introducing a foreign substance\nIf useful and harmful actions appear between two substances in a substance-field system and there is no need to maintain a direct contact between the substances, solve the problem by introducing a third substance between them. The substance should be free or sufficiently cheap.\n\nThe wavy arrow indicates an action that has to be eliminated.\n1.2.2. Eliminate harmful interaction by modifying existing substances\nIf there are useful and harmful actions between two substances, and there is no need to maintain direct contact between the substances, and it is forbidden or inconvenient to use foreign substances, solve the problem by introducing a third substance between the two. In this case, the third substance is to be a modification of the first or second substances.\n\nNote: S3 can be introduced into the system as a ready substance from the supersystem or it can be obtained (by the action of F1 or F2) from S1 or S2. In particular, S3 can be a „void”, bubbles, foam, etc.\n1.2.3. Eliminate harmful action of a field by introducing a sacrificial substance\nIf it is necessary to eliminate the harmful action of a field upon a substance, the problem can be solved by introducing a second substance that draws off upon itself the harmful effect of the field.\n\n1.2.4. Eliminate harmful effects by a new counteracting field\nIf useful and harmful action appear between two substances in a Su-Field, and a direct contact between the substances must be maintained, the problem can be solved by transitioning to a dual substance-field system — the useful effect is provided by the existing field while a new counteracting field neutralizes the harmful action (or transforms the harmful action into a useful action).\n\n1.2.5. “Turning off” a magnetic field\nIf it is necessary to destroy a Su-Field with a magnetic field, the problem is solved by using physical effects that are capable of “switching off” ferromagnetic properties of substances (e.g., by de-magnetizing by a mechanical impact or by heating above the Curie point).\n\n\n\n\nClass 2: Development of Su-Fields\nClass 2 of standard inventive solutions is used to improve the efficiency of the engineering system by introducing minor modifications.\nThis class contains 4 sub-classes and 23 SISs.\n\n2.1. Transition to more sophisticated Su-Field\nAn increase of the efficiency of Su-Fields can be achieved by the transition from simple Su-Fields to more sophisticated ones – chain and double ones. The modifications are relatively small, while the transition ensures the emergence of new qualities and strengthening of the existing ones, primarily the controllability of the system.\n2.1.1. Transition to chain Su-Field\nIf it is necessary to increase the efficiency of the Su-Field, the problem can be solved by transforming S1 or S2 into an independently controlled Su-Field, thus creating a chain Su-Field.\nS3 or S4 can be transformed into another independently controlled Su-Field.\n\n2.1.2. Transition to double Su-Field\nIf the Su-Field is insufficient and the replacement of its elements is unacceptable, the problem can be solved by introducing a second field, hence constructing a double Su-Field that has higher efficiency.\n\n\n\n2.2. Intensification of Su-Fields\nThe general idea behind six SIS of this sub-class is to increase the efficiency of Su-Fields – simple or more sophisticated – without introducing any new fields or substances. This is achieved by the intensified use of the available substance-field resources.\n2.2.1. Transition to more controllable fields\nAn efficiency of Su-Field can be increased by replacing the uncontrolled (or poorly controlled) field with a controlled (well-controlled) field, e.g., replacing the gravity field with a mechanical, mechanical-electric, etc.\n2.2.2. Segmentation of the substance\nAn efficiency of Su-Field can be improved by increasing the degree of segmentation of S1 or S2.\n\nNote:\n\nThe symbol Sm denotes a substance segmented into many small particles (grains of sand, powder, granules, etc.).\nSIS 2.2.1 reflects one of the sub-trends of TESE, i.e, the segmentation of components.\n\n2.2.3. Transition to capillary-porous substance\nA special case of substances segmentation is the transition from solids to capillary-porous substances. This transition is performed along the following line:\n\nmonolith substance\nsubstance with one cavity\nmonolith with many cavities (perforated substance)\ncapillary-porous substance\ncapillary-porous substance with a certain pore structure (and size)\nWith the development of this line, the possibility of introducing a liquid substance into cavities-pores and using physical effects increases.\n\n2.2.4. Dynamization of the Su-Field\nEfficiency of a Su-Field can be improved by increasing the degree of its dynamization, i.e., by transitioning to a more flexible, rapidly changing structure of the system.\n\nNote: A triangular symbol with a wavy line represents a dynamic Su-Field that changes during its operation.\nThe dynamization of S2 usually start with introducing a hinge. Further dynamization runs along the line: one hinge -&gt; many hinges -&gt; flexible substance.\nThe dynamization of F usuall transition from the constant F to pulsating F.\n2.2.5. Changing the structure of the field\nEfficiency of Su-Field can be increased by transitioning from homogeneous or unstructured field to inhomogeneous field or a field with a special structure (constant or variable in time and space).\n\nNote: The # symbol next to the letter F denotes that the field has a special structure variable in time and space.\nIf a substance that is a part of the Su-Field or can be a part of the Su-Field mut have a specific spatial structure, the process should be performed in a field that has a structure corresponding to the required structure of the substance.\n\n2.2.6. Changing the structure of the substance\nEfficiency of Su-Field can be increased by transitioning from homogeneous or unstructured substance to inhomogeneous substance or a substance with a special structure (constant or variable in time and space).\n\nNote: The # symbol next to the letter S denotes that the substance has a special structure variable in time and space.\nIf it is necessary to obtain an intensive thermal effect in the certain places of the system (points, lines), exothermic substances should be introduced in these places beforehand.\n\n\n2.3. Intensification of rhythms coordination\nSub-class 2.3 includes SISs for Su-Fields intensification in particularly economical ways. Instead of introducing or substantially changing substances or fields, the SISs provide for purely quantitative changes – frequencies, sizes, or mass. Thus, a significant new effect is achieved with minimal system changes.\n2.3.1. Coordination of rhythms of the field and the substance\nEfficiency of Su-Field can be improved by coordination of the frequency of the Field with the natural frequency of the Substance.\n2.3.2. Coordination of rhythms of the fields that are used\nIn more sophisticated Su-Field, the frequencies of the Fields that are used should be coordinated.\n2.3.3. Coordination of incompatible or previously independent activities\nWhen two activities, e.g., changing and measuring, are incompatible, one activity can be performed in the pauses of the other. Important: pauses in one action should be filled with the other action.\n\n\n2.4. Fe-Fields (intensified sophisticated Su-Fields)\nFe-Field is a Su-Field where one of the Substances is segmented, has magnetic properties and at least one Field is electromagnetic.\nIntensification can be performed through several typical ways simultaneaously. Su-Fields where the magnetis Substance is segmented is the easiest to intensify.\n2.4.1. Transition to Proto-Fe-Field\nEfficiency of Su-Field can be improved by using a ferromagnetic Substance (as one piece) and a magnetic Field.\n\nNote: This is the SIS that uses ferromagnetic Substance that is not segmented. We talk about the Proto-Fe-Field and other intermediate states.\nThis SIS is applicable not only for simple Su-Fields but also to complex (with an additive), as well as for Su-Fields where the additive is a part of the environment.\n2.4.2. Transition to Fe-Field\nEfficiency of Su-Field can be improved by transition from Su-Field or Proto-Fe-Field to Fe-Field by replacing one of the substances with ferro-particles (or adding ferro-particles like chips, granules, grains, etc.) and using a magnetic or an electromagnetic field.\nThe controlability grows with the increase of the degree of the ferro-particles fragmentation, so the development of Fe-Fields follows the line:\n\ngranules\npowder\nfinely dispersed ferro-particles\nThe controlability also grows with the increase in the degree of fragmentation of the substance into which the ferro-particles are introduced. The development follows the line:\nmonolith substance\ngrains\npowder\nliquid\n\nNote:\nTransition to Fe-Field can be considered a joint application for two SIS – 2.4.1 (Transition to Proto-Fe-Field) and 2.2.2 (Segmentation of the substance).\nHaving turned into Fe-Field, the Su-Field repeats the development cycle, however, at a new level, since Fe-Fields can be characterized by high controllability and efficiency. The SISs of sub-class 2.4 can be considered as types of „isotopes” of SISs of sub-classes 2.1-2.3. Singling out Fe-Fields into their own sub-class is justified (at least at this stage of SIS development) by the exceptional practical significance of Fe-Fields. Additionally, Fe-Fields are more precise research tool for studying rougher Su-Fields and predicting their development.\n2.4.3. Using ferromagnetic fluids\nEfficiency of Fe-Field can be improved by the use of ferromagnetic fluids – colloidal ferro-particles suspended in kerosene, silicone, or water. SIS 2.4.3 can be seen as a last point in the development according to SIS 2.4.2.\n2.4.4. Using capillary-porous substances in Fe-Fields\nEfficiency of Fe-Fields can be improved by using a capillary-porous structure that is characteristic for many Fe-Fields.\n2.4.5. Transition to complex Fe-Field\nIf it is necessary to increase a controllability of the system by transition to Fe-Field, and the replacement of substances by ferro-particles is unacceptable, the transition is performed by introducing additives to one of the substances, hence creating an internal or external complex Fe-Field.\n\n2.4.6. Transition to Fe-Field using the external environment\nIf it is necessary to increase a controllability of the system by transition from Su-Field to Fe-Field, and replacing the substance with ferro-particles (or adding additives to the substance) is unacceptable, then the ferro-particles should be introduced into the external environment and control the system by the magnetic field, hence changing the environment parameters (SIS 2.4.3).\n\nElectrorheological fluids controlled by electric fields can also be used as an external environment.\n2.4.7. Using physical effects\nIt is possible to controll Fe-Fields using physical effects.\n2.4.8. Dynamization of the Fe-Field\nEfficiency of Fe-Field can be improved by increasing the degree of its dimization, i.e., by transitioning to a more flexible, rapidly changing structure of the system.\n\n2.4.9. Changing the Fe-Field structure\nEfficiency of Fe-Field can be increased by transitioning from homogeneous field to inhomogeneous one or from an unstructured field or a field with a special structure (constant or variable in time and space).\n\n2.4.10. Coordination of rhythms of the Fe-Field\nEfficiency of Proto-Fe-Field and Fe-Field can be improved by coordinating rythms of its elements.\n2.4.11. Transition to E-Field (Su-Field with interacting electrical currents)\nIf the introduction of ferromagnets or magnetization of substances is difficult, the interaction of an external electromagnetic field with the direct contact, or induced currents, or the interaction of these currents with each other should be used.\nNote:\n\nIf Fe-Fields are SISs with ferromagnetic particles, then E-Fields are SISs with currents or interacting currents instead of ferromagnetic particles.\nDevelopment of E-Field – similar to Fe-Fields – repeats the general line of Su-Field evolution:\n\n\nsimple E-Field\ncomplex E- Field\nE-Field based on an external environment\ndynamization\nsegmentation/structurization\nrhythm coordination\n2.4.12. Using electro-rheological liquids\nA special type of E-Fields are Su-Fields with electro-rheological suspension (fine non-conducting but electrically active particles), with controlled viscosity. If the ferromagnetic fluids cannot be used, the electro-rheological suspension can be applied.\n\n\n\nClass 3: Transition to supersystem and microlevel\nClass 3 of standard inventive solutions applies to the engineering systems which performance is insufficient. Their efficiency is improved by developing solutions on the different system levels, like the level of supersystem or the microlevel.\nThis class contains 2 sub-classes and 6 SISs.\n\n3.1. Transition to bi- and poly-systems\nAlong with the internal improvement (SISs of Class2), there is a line of external development: at any stage of the internal development, the system can be intergrated with the supersystem components obtaining a new quality.\n3.1.1. Transition to bi- and poly-systems\nAt any stage of the development, efficiency of Su-Field can be increased by the integration of the system with another system (or systems) into a more sophisticated bi-system or a poly-system (system transition 1a).\n3.1.2. Development of links in bi-systems and poly-systems\nIncreasing the efficiency of the synthesized bi-systems and poly-systems can be achieved primarily through the development of links between elements of Su-Field.\nThe newly developed bi-systems and poly-systems often have „no links”, that is, they are just a „pile” of components. The development is aimed at strengthening linking. On the other hand, elements in newly created systems are sometimes connected by rigid links. In these cases, the development is aimed at increasing the degree of dynamization of links.\nno links\nrigid link\nflexible link\nfield link\n3.1.3. Increasing the difference between the elements of bi-systems and poly-systems\nThe efficiency of bi-systems and poly-systems increases with an increase in the difference between the elements of Su-Field (system transition 1b):\n\nidentical elements\nelements with shifted characteristics\ndifferent elements\ninverse combinations of the „element and anti-element”\n3.1.4. Trimming of bi-systems and poly-systems\nEfficiency of bi-systems and poly-systems can be improved by Trimming. Completely trimmed bi-systems and poly-systems become monosystems again. The cycle can be repeated.\n3.1.5. Opposite properties of the system and its parts\nEfficiency of bi-systems and poly-systems can be improved by distributing opposite properties in the system and among its parts. A two-level system is used in which the entire system has property C, and its parts (particles) have property anti-C (system transition 1c).\n\n\n3.2. Transition to microlevel\nThere are two ways of system transition:\n\nthe transition to the supersystem („the way up” – SISs of subclass 3.1),\nthe transition to microlevel („the way down” – SISs of subclass 3.2).\n\n3.2.1. Transition to microlevel\nAt any stage of development, the efficiency of the system can be improved by system transition 2: from the macro level to the micro level, when the system or its part is replaced by a substance capable of performing the required action when interacting with the field.\n\n\n\nClass 4: Standard inventive solutions for measuring and detecting\nClass 4 of standard inventive solutions applies to problems of measuring or detecting.\nThis class contains 5 sub-classes and 17 SISs.\n\n4.1. Bypasses\nIf it is necessary to measure or detect, it is recommended that the principle of operation be changed in such a way that there is no need to measure or detect, maintaining the necessary accuracy and cost.\n4.1.1. Modifying the system so there is no need to measure or detect\nIf it is necessary to measure or detect, it is recommendd that the system be changed in such a way that there is no need to measure or detect.\n4.1.2. Measuring a copy or an image\nIf the problem of detection or measurement cannot be solved using SIS 4.1.1, it is recommended that the direct operation on the object be replaced with operations on its copy. For example, instead of directly measuring the logs loaded on the railway platform, the measurement is done from a photo taken on a specific scale.\n4.1.3. Successive change detection\nIf the problem of detection or measurement cannot be solved using SISs 4.1.1 or 4.1.2, it is recommended to turn it into a successive change detection task.\n\n\n4.2. Creating the measurement Su-Field\nWhen we create Su-Fields for measurement, the strategy should be similar to the case as we create a Su-Field for improvement: complete Su-Field by introducing the missing substances or fields. The difference is that the output ot the measurement Su-Field is a field.\n4.2.1. Creating the measurement Su-Field\nIf a non-Su-Field is difficult to detect or measure, the problem can be solved by creating a simple or double Su-Field with an output field.\n\n4.2.2. Transition to the complex measurement Su-Field\nIf the system (or part of it) is difficult to detect or measure, the problem can be solved by transition to the internal or external complex Su-Field, by introducing easily detectable additives (marks).\n\n4.2.3. Transition to the measurement Su-Field based on the external environment\nIf the system is difficult to detect or measure at some point in time and it is impossible to introduce additives which create an easily detectable and easily measured field, these additives should be introduced into the external environment so that the change in the state of the system can be assessed.\n\n4.2.4. Utilizing resources of the environment\nIf it is impossible to introduce the additives into the external environment (according to SIS 4.2.3), these additives can be obtained by using the resources of the environment, e.g., by decomposing it or changing its physical state (for example, gas or vapor bubbles obtained by electrolysis, cavitation, or other methods).\n\n\n4.3. Intensifying measurement Su-Fields\nThe measurment Su-Field can be intensified by applying physical effects and by coordinating the rhythm.\n4.3.1. Using the physical effects\nThe efficiency of detecting or measuring the Su-Field can be improved by using physical effects.\n4.3.2. Using the resonance of the controlled object\nIf changes in the system cannot be detected or measured directly and it is impossible to pass the field through the system, the problem can be solved by inducing resonance oscillations in the whole system or a part of it. Changing the oscillations frequency can help to identify changes in the system.\n\n4.3.3. Using the resonance of the integrated object\nIf it is not possible to apply SIS 4.3.2, the system condition can be assessed using the change of the natural frequency of an object (in the external environment) integrated with the controlled system.\n\n\n4.4. Transition to measurement Fe-Fields\nMeasurement Su-FIelds strongly tend to transform into Fe-Fields.\n4.4.1. Transition to measurement Proto-Fe-Fields\nSu-Fields with non-magnetic fields tend to transform into Proto-Fe-Fields, that is, Su-Fields with a magnetic substance and a magnetic field.\n4.4.2. Transition to measurement Fe-Field\nIf it is necessary to increase the efficiency of detection or measurement by Proto-Fe-Field or Su-Field, it is necessary to go to Fe-Field. One of the substances can be replaced with ferromagnetic particles or the ferromagnetic additives can be used, then the magnetic field can be detected or measured.\n\n4.4.3. Transition to complex measurement Fe-Field\nIf it is necessary to increase the efficiency of detection or measurement of the system by transition to Fe-Field, and replacing substances with ferromagnetic particles is impossible, then the complex Fe-Field should be created by introducing additives to the substance.\n\n4.4.4. Transition to measurement Fe-Field based on external environment\nIf it is necessary to increase the efficiency of detection or measurement of the system by transition from Su-Field to Fe-Field, and the introduction of ferromagnetic particles is impossible, then the ferromagnetic particles should be introduced into the external environment.\n4.4.5. Using the physical effects\nIf it is necessary to increase the efficiency of detection or measurement of the system, the scientific effects should be used, for example the Curie point, Hopkinson or Barkhausen effects, magnetoelastic effect, etc.\n\n\n4.5. Direction of measurement Su-Fields development\nThe development of measurement Su-Fields is performed through the usual system transitions, but it also has its specific features.\n4.5.1. Transition to measurement bi- and poly-systems\nAt any stage of development, the effectiveness of the measurment Su-Field can be increased by transition to a bi-system or a poly-system.\n4.5.2. Transition to the measurement of derivatives\nMeasurment Su-Fields are developing in the floowing direction:\nfunction measurement\nmeasurement of the first derivative of the function\nmeasurement of the second derivative of the function\n\n\n\nClass 5: Standard inventive solutions on application of SISs\nClass 5 of standard inventive solutions gives recommendations as to how to introduce new substances, fields or scientific effects more effectively when applying SISs in the four previous classes. It provides “helpers” to satisfy constraints of the project.\nThis class contains 5 subclasses and 17 SISs.\n\n5.1. Specifics of introducing substances\nWhen creating, restructuring, or destroing Su-Fields, it is often necessary to introduce new substance. That will deacrease the ideality of the system. Therefore, substances must be „introduced without introducing” and various bypasses should be used.\n5.1.1. Bypass\nIf it is necessary to introduce a substance into the system, and this is prohibited by the problem constraints or is unacceptable due to the operating conditions, then bypasses should be used.\n5.1.1.1. Using a void instead of substance\n5.1.1.2. Using a field instead of substance\n5.1.1.3. Using an external additive instead of an internal one\n5.1.1.4. Using very small doses of a particularly active additive\n5.1.1.5. Using very small doses of a usual additive, but concentrated in separate parts of the object\n5.1.1.6. Using an additive for some time\n5.1.1.7. Instead of an object, use its copy (model) into which an additive can be introduced\n5.1.1.8. Using the additive in the form of a chemical compound, which later released\n5.1.1.9. The additive is obtained by decomposition of an external environment or the object itself, for example, by electrolysis, or by changing the state of aggregate of the external environment or the part of the object\n5.1.2. Separating the product into interacting parts\nIf it is difficult to transform Su-Field and the problem conditions do not allow to replace the tool or to introduce additives, use the product instead of the tool, dividing it into parts that interact with each other.\n5.1.3. Using a substance for a limited time\nAfter the action, the substance introduced into the system should disappear or become indistinguishable from the substance that has previously been in the system or in the external environment.\n5.1.4. Using inflatable structures and foam\nIf it is necessary to introduce a large amount of a substance, and this is prohibited by the system constraints or is unacceptable due to the operating conditions, use a „void” in the form of inflatable structures or foam instead of the substance.\n\n\n5.2. Introducing fields\nWhen creating, restructuring, or destroing Su-Fields, it is often necessary to introduce new fields. In order not to complicate the system, SISs of subclass 5.2 should be used.\n5.2.1. Using the existing fields\nIf it is necessary to introduce a field into the Su-Field, first, the existing fields should be used. The substances of the Su-Field are the carriers of those fields.\n5.2.2. Using the field of the external environment\nIf it is necessary to introduce a field into the Su-Field, and it is not possible according to SIS 5.2.1, use the fields available in the external environment.\n5.2.3. Using existing substances as field sources\nIf it is necessary to introduce a field into the system, and it is impossible according to SISs 5.2.1 and 5.2.2, use the fields that can be generated by the substances present in the system or external environment.\n\n\n5.3. Using phase transitions\nContradictory demands for introduced substances and fields can be satisfied using phase transitions.\n5.3.1. Substituting the phase state of the substance\nThe efficiency of the substance application can be increased without introducing other substances through the phase transition 1, i.e., by changing the state of aggregate of the existing substances.\n5.3.2. The dual phase-state of the substance\n„Dual” properties can be provided by phase transition 2, i.e., the use of substances capable of changing from one phase state to another, depending on the operating conditions.\n5.3.3. Using phenomena accompanying the phase changes\nThe efficiency of the system can be improved by phase transition 3, i.e., the use of phenomena accompanying the phase transition.\n5.3.4. Transition to the two-phase state of the substance\nThe „dual” properties of the system can be provided by a phase transition 4 – replacement of a single-phase state by a two-phase state.\n5.3.5. Using interactions between parts (phases) of the system\nThe system efficiency obtained as a result of phase transition 4 can be increased by introducing an interaction (physical, chemical) between parts (or phases) of the system.\n\n\n5.4. Specifics of using the scientific effects\nMany SISs provide for the use of scientific effects or can be used together with them. In this case, it is necessary to consider some techniques that increase the effectiveness of the scientific effects application.\n5.4.1. Using the reversible physical transformations\nIf an object must periodically be in different physical states, then the transition should be accomplished by the object itself by means of reversible physical transformations, e.g., phase transitions, ionization-recombination, dissociation-association etc.\n5.4.2. Strengthening the output field\nIf a strong output action is required while the input action is weak, the converter-substance should be brought to a near critical state. Energy is stored in the substance and the input signal acts as a „trigger”.\n\n\n5.5. The experimental SISs\n5.5.1. Obtaining the substance particles by decomposition\nIf particles of the substance (i.e., ions) are needed to solve the problem, and their direct generation is impossible due to the problem constraints, then the required particles must be obtained by destroying a substance of a higher structural level (i.e., molecules).\n5.5.2. Obtaining the substance particles by combining\nIf particles of the substance (i.e., molecules) are needed to solve the problem and it is impossible to obtain them directly or according to SIS 5.5.1, then the required particles have to be generated by completing or combining particles of a lower structural level (i.e., ions).\n5.5.3. The simplest methods to obtain the substance particles\nWhen applying SIS 5.5.1, the simplest way is to destroy the nearest higher „whole” or „excess” (negative ions) level, while when using SIS 5.5.2, the simplest way is to complete combining the nearest lower „non-whole” level.\nREFERENCES\n\nG. Altshuller: Find an Idea. Introduction to the theory of inventive problem solving. Novosibirsk.: Nauka Publishers, 1986, ISBN 5-02-029265-6\n\n\n\nArticles\n\nSubstance-field analysis\nSubstance-field model\n\n\nSubstance-field analysis"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-1",
    "href": "Problem-solving-tools.html#overview-1",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nIn classical TRIZ, substance-field analysis was used to identify the components (substances and fileds) necessary to model a problem in the form of a Su-Field. However, since cause-effect chain analysis (CECA) became widely used in the analytical phase of projects, this tool has fallen out of common use.\nKey disadvantages identified through CECA clearly point to the substances and fields that form the Su-Field of the problem.\nSimilar to contradictions, the substance-field analysis is used for problem modeling. The tool designed for processing the substance-field models (Su-Fields) of problems is the system of 76 standard inventive solutions (SIS), which leads to solution models represented by selected SISs. In some cases, these solutions can also be presented in the form of Su-Fields. Thus, substance-field analysis is the only TRIZ tool where the model of solution can have the same form as a model the problem.\n\nBasic assumption in the approach is that a minimally functioning system must consist of 3 basic elements:\n1. 2 substances (S), i.e., objects with a rest mass involved in the system, and\n2. a field (F), i.e., entity without a rest mass that establishes an interaction between substances.\nThe substances are closely tied to the key problem that needs to be solved. They can refer to microscopic objects, single components, or the entire technical system. The field is typically one of the types selected from the MATChEM model.\n\nSubstance-field model"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-2",
    "href": "Problem-solving-tools.html#overview-2",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nSubstance-field models (Su-Fields) are inspired by chemistry, specifically the way of representing molecules that reflects their composition and bonds. Similarly, Su-Fields aim to explain relationships and functions in technical systems.\nBuilding substance-field models is performed within substance-field analysis.\nBasic assumption in the approach is that a minimally functioning system must consist of 3 basic elements:\n1. 2 substances (S), i.e., objects with a rest mass involved in the system, and\n2. a field (F), i.e., entity without a rest mass that establishes an interaction between substances.\nThe substances are closely tied to the key problem that needs to be solved. They can refer to microscopic objects, single components, or the entire technical system. The field is typically one of the types selected from the MATChEM model."
  },
  {
    "objectID": "Problem-solving-tools.html#structure-of-a-su-field",
    "href": "Problem-solving-tools.html#structure-of-a-su-field",
    "title": "Problem-solving tools",
    "section": "Structure of a Su-Field",
    "text": "Structure of a Su-Field\nUsually, the model is depicted by a diagram where the substances (S) and the field (F) are shown as nodes, and the interaction is presented as connecting lines or arrows.\n\nSymbols of interactions used in Su-Field models are similar to those used in function modeling for devices:\n\nThe examples can be as follows:"
  },
  {
    "objectID": "Problem-solving-tools.html#types-of-su-fields",
    "href": "Problem-solving-tools.html#types-of-su-fields",
    "title": "Problem-solving tools",
    "section": "Types of Su-Fields",
    "text": "Types of Su-Fields\nAlthough the substance-field models can represent both problems and (sometimes) solutions, these models are not the same, therefore they are differentiated into:\n\nSu-Fields of problems, and\nSu-Fields of solutions.\n\n\nSu-Fields of problems\nWhen modeling a problem with Su-Field, it is essential to include only those substances and fields that are directly related to the key problem requiring a solution.\nSubstance-field model of the problem may have 1, 2 or 3 elements. Building problem models with more than 3 elements, is incorrect.\nThe following types of Su-Fields are used to model problems:\n1. incomplete Su-Field (needs to be completed),\n2. insufficient, i.e. complete, but ineffective Su-Field (needs to be improved), and\n3. harmful Su-Field (the harmful or excessive action has to be eliminated).\n\nIncomplete Su-Field\nIncomplete Su-Field is a Su-Field representing a model of a problem of lacking one substance, or a field, or substance and a field.\nThe examples of incomplete Su-Fields can be the following:\n\n\n\nInsufficient Su-Field\nInsufficient Su-Field is a Su-Field representing a problem model, which is complete but does not work.\nThe insufficient Su-Field usually models an issue emerging when substance 1 does not respond to the field generated by substance 2.\n\n\n\nHarmful Su-Field\nHarmful Su-Field is a Su-Field which represents a model, in which at least one interaction is harmful or excessive (excessive = normal + harmful excess).\n\n\n\n\nSu-Fields of solutions\nSuFields of solutions may have 3 or more elements.\nExamples of solution models can be the following:\n1. complete Su-Field,\n2. complex Su-Field (internal and external),\n3. chain Su-Field,\n4. double Su-Field,\n5. measurement Su-Field.\n\nComplete Su-Field\nComplete Su-Field represents a model of a solution in which at least two substances and a field are present to create a working technical system or a subsystem.\n\n\n\nComplex Su-Field\nComplex Su-Field is a complete Su-Field with an extra substance (often in the form of an additive) that readily responds to the existing field.\n\nThis type of models is used in class 1.1 (synthesis of Su-Fields), class 2 (development of Su-Fields), and class 4 (standard iInventive solutions for detecting and measuring).\nNOTE! Complex Su-Fields should not be confused with the double and chain Su-Fields. These are different types of models.\n\n\nChain Su-Field\nChain Su-Field is a combination of two or more Su-Fields where one substance participates in two Su-Fields.\n\nThis type of models is used in class 2 (development of Su-Fields).\n\n\nDouble Su-Field\nDouble Su-Field is a Su-Field where two different fields provide interactions between the substances (one substance acts on the second substance with two fields).\n\nThis type of models is used in class 2 (development of Su-Fields).\n\n\nMeasurement Su-Field\nMeasurement Su-Field is a special type of a Su-Field which is used to present models of inventive problems where measurement or detection is required in terms of substance-field analysis. Its uniqueness lies in the fact that it is the only model with 2 fields and 1 substance (input field &gt; substance &gt; output field).\n\nThis type of models is used in class 4 (SISs for detecting and measuring).\n\n\n\nContradictions"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-3",
    "href": "Problem-solving-tools.html#overview-3",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nContradictions are parametric models of key problems identified during problem-identification stage of the project. In modern TRIZ, two types of contradictions are used:\n\nengineering (technical) contradiction, and\nphysical contradiction.\n\nThe engineering contradiction involves two different parameters. It represents a situation where improving one parameter leads to the deterioration of another.\nThe physical contradiction, on the other hand, pertains to one parameter with two justified but conflicting requirements imposed on it."
  },
  {
    "objectID": "Problem-solving-tools.html#relation-between-the-engineering-and-physical-contradiction",
    "href": "Problem-solving-tools.html#relation-between-the-engineering-and-physical-contradiction",
    "title": "Problem-solving tools",
    "section": "Relation between the engineering and physical contradiction",
    "text": "Relation between the engineering and physical contradiction\nEngineering and physical contradictions are directly related as both are formulated from IF-THEN-BUT format.\n\nin the engineering contradiction, the improving parameter is placed in the line THEN, while the worsening parameter – in the line BUT;\nthe physical contradiction concerns the parameter from the line IF, while the contradictory demands can be found in the line THEN.\n\nThe physical contradiction can be formulated based on the engineering contradiction in the following steps:\n\nformulate an engineering contradiction,\ngo to the line IF of the contradiction; the parameter/action/property mentioned in the line IF is the one around which the physical contradiction is formulated,\nthe line THEN of the engineering contradiction is the justification of one of the requirements of the physical contradiction;\nthe line BUT can prompt the justification of the other requirement (inverting the statement in the line BUT provides the justification).\n\nTo formulate the physical contradiction, creating an inverted (alternative) engineering contradiction beforehand can also be very helpful.\nThe conversion also works in the opposite direction. From each physical contradiction, two engineering contradictions can be derived: the basic and the inverted (alternative) one."
  },
  {
    "objectID": "Problem-solving-tools.html#resolving-the-contradictions",
    "href": "Problem-solving-tools.html#resolving-the-contradictions",
    "title": "Problem-solving tools",
    "section": "Resolving the contradictions",
    "text": "Resolving the contradictions\nFor both types of contradictions, the 40 inventive principles are the recommended models of solutions. However, the ways leading to the specific principles are different:\n\nfor the engineering contradiction, it is the contradiction matrix, also referred to as Altshuller matrix.\nfor the physical contradiction, it is the algorithm for resolving physical conradictions.\n\nAditionally, function-oriented search (FOS), database of scientific effects, and clone problems application can be used for physical contradiction.\n\nArticles\n\nEngineering (technical) contradiction\n\nContradiction matrix\n\nTypical parameters\n\n\nPhysical contradiction\n\nAlgorithm for resolving physical contradictions\n\nInventive principle\n\n\n\nEngineering (technical) contradiction"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-4",
    "href": "Problem-solving-tools.html#overview-4",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nWhen solving key problems, methods or technologies are often used that, while improving a specific parameter of a technical system, simultaneously lead to the deterioration of another parameter.\nModeling such a situation as an engineering contradiction is the first step toward solving the problem in a way that not only improves the first parameter but also avoids worsening – or even potentially improves – the second parameter as well.\nModels of solutions for engineering contradictions are inventive principles. The tool that is used to translate the engineering contradiction into inventive principles is contradiction matrix also referred to as Althuller matrix."
  },
  {
    "objectID": "Problem-solving-tools.html#formulating-the-engineering-contradiction",
    "href": "Problem-solving-tools.html#formulating-the-engineering-contradiction",
    "title": "Problem-solving tools",
    "section": "Formulating the engineering contradiction",
    "text": "Formulating the engineering contradiction\nAn engineering contradiction should be formulated using the IF-THEN-BUT format. That formula provides two parameters that constitute the engineering contradiction for solving:\n\nin the line THEN, the parameter that has to be improved to resolve the problem,\nin the line BUT, the parameter that deteriorates when the technique / approach mentioned in line IF is applied.\n\n\nTo properly formulate a contradiction, it is helpful to follow a specific order of providing the information. Typically, we start with the THEN position, then proceed to IF, and finish with BUT. The red numbers in the picture above indicate the order of filling.\nLet us consider a simple example of a key problem: the table is not strong enough. One way to strengthen it might be by adding additional reinforcing elements, but these increase its weight. The engineering contradiction will be formulated as follows:\n\nUsually, a key problem can be modeled using more than one engineering contradiction. This is typically due to the fact that various technologies can traditionally be applied to solve the problem.\nFor each technology, action, parameter, etc., proposed in the IF row, a separate contradiction should be created.\nFor example, to solve the problem of a weak table, various approaches can be applied: using a stronger material, increasing the thickness of the tabletop, or shaping it into a slightly domed form. Each of these approaches has its own implications, often leading to the deterioration of another parameter. Therefore, a technical contradiction should be formulated for each approach."
  },
  {
    "objectID": "Problem-solving-tools.html#alternative-engineering-contradiction",
    "href": "Problem-solving-tools.html#alternative-engineering-contradiction",
    "title": "Problem-solving tools",
    "section": "Alternative engineering contradiction",
    "text": "Alternative engineering contradiction\nFor each engineering contradiction, an alternative (opposite or inverted) one can be formulated. The following example presents a procedure for creating it:\n\nThe alternative contradiction should contain the same parameters as the base one, but the problem it models is different. Since the contradiction matrix is not symmetrical, the inverted engineering contradiction supports generating more ideas and can lead to solutions that help to achieve the goal of the project. It is also very helpful in formulating the physical contradiction."
  },
  {
    "objectID": "Problem-solving-tools.html#the-algorithm-for-an-engineering-contradiction",
    "href": "Problem-solving-tools.html#the-algorithm-for-an-engineering-contradiction",
    "title": "Problem-solving tools",
    "section": "The algorithm for an engineering contradiction",
    "text": "The algorithm for an engineering contradiction\nAn algorithm to deal with the engineering contradiction is the following:\n\n\nArticles\n\nContradiction matrix\n\nTypical parameters\n\n\n\nContradiction matrix"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-5",
    "href": "Problem-solving-tools.html#overview-5",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nContradiction matrix is a problem-solving tool that connects a problem modeled as an engineering contradiction with the statistically most frequently used inventive principles, which are generalized solution models for contradictions.\n\nThe traditional Altshuller matrix is a table from which the numbers of inventive principles are read. For user convenience, we have designed an interactive tool that significantly simplifies the process. Click the button below to use it.\nCONTRADICTION MATRIX\nAfter converting the two specific parameters from the contradiction into the typical parameters, a set of recommended inventive principles can be found in the matrix. Once the set of the inventive principles is identified, brainstorm around them to develop a solution.\nNote that the principles listed in a given cell of the matrix are the statistically most frequently used ones, but this does not mean that solutions cannot be found outside of them. Therefore, if the results obtained from the matrix are unsatisfactory, it is worth exploring and considering other principles."
  },
  {
    "objectID": "Problem-solving-tools.html#structure-of-the-contradiction-matrix",
    "href": "Problem-solving-tools.html#structure-of-the-contradiction-matrix",
    "title": "Problem-solving tools",
    "section": "Structure of the contradiction matrix",
    "text": "Structure of the contradiction matrix\nA traditional contradiction matrix contains 39 typical parameters on both the vertical and the horizontal axes:\n\nthe vertical axis represents a list of parameters that need to be improved to resolve the problem,\nthe horizontal axis represents a list of parameters that are worsening when we introduce specific technology.\n\nThe parameters are listed in the same order, both in the rows and in the columns.\nOn the crossing of the corresponding rows and columns, there are cells containing numbers of recommended inventive principles.\nThe following picture presents an example:\n\nThe boxes in the matrix can contain 4, 3, 2, or 1 principle, some of them are empty.\nThe order of principles within the cells does not indicate any preferences. All recommended principles are equally important, and their sequence simply reflects the fact that Altshuller added them as he discovered them during his research.\nThe empty cells in the matrix indicate that no inventive principle has been identified as statistically more frequently used than others. In such cases, any of the 40 principles can be applied equally, without preference.\nThe contradiction matrix is not symmetrical. Improving parameter A, while parameter B is deteriorating, results in different inventive principles than improving parameter B and deteriorating A.\n\nArticles\n\nTypical parameters\n\n\nTypical parameters"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-6",
    "href": "Problem-solving-tools.html#overview-6",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nTo work with the contradiction matrix, the improving and worsening parameters in an engineering contradiction must be expressed in the form of typical parameters included in the matrix. Due to the diversity of engineering fields, reducing the specific parameters to typical ones is a fundamental aspect of the universality of the Altshuller matrix\nSometimes, a specific parameter may already align with a standard parameter. However, if it does not, conversion is necessary. This applies to both the vertical and horizontal axes of the matrix.\nBelow, we have provided a complete list of 39 standard parameters, along with examples of specific parameters most commonly associated with them. Keep in mind that the list of specific parameters is not definitive, and each problem should be approached individually.\nKeep in mind that our examples are merely suggestions. If you believe your specific parameters can be better expressed using other typical parameters, feel free to do so. This may only increase the number of solution concepts generated.\nA good practice is to create several combinations of different standard parameters that fit the formulated contradiction and use the contradiction matrix for each pair. This results in multiple sets of recommendations, each of which should be considered as a potentially best guideline."
  },
  {
    "objectID": "Problem-solving-tools.html#typical-parameters-2",
    "href": "Problem-solving-tools.html#typical-parameters-2",
    "title": "Problem-solving tools",
    "section": "39 typical parameters",
    "text": "39 typical parameters\nNote that in several cases, the typical parameters distinguish between a moving object and a stationary object. A moving object is one that stays in motion or changes position relative to another object involved in the problem. This movement can vary – it might be caused by external forces or happen on its own, and it can be linear, rotational, very small, or cover a large distance. Common examples include items designed to be portable. In contrast, the stationary object remains completely still relative to the other object in the problem, with no movement between them.\n\nWeight of moving object\n\nThe mass or force of gravity exerted – by pressure or suspension – by a moving object.\nCan be related to: ballast, gravity, load, buoyant force, heaviness, mass, burden, heft, pressure, bulk, lightweight, tonnage, floating, lightness.\n\nWeight of stationary object\n\nThe mass or force of gravity exerted – by pressure, suspension, or the surface on which it rests – by a stationary object.\nCan be related to: ballast, gravity, load, buoyant force, heaviness, mass, burden, heft, pressure, bulk, lightweight, tonnage, floating, lightness.\n\nLength of moving object\n\nAny linear or angular dimension relating to a moving object, not necessarily the longest.\nCan be related to: altitude, distance, range, amplitude, extent, span, breadth, gap, stretch, circumference, girth, spread, cross measure, height, tolerance, depth, length, width, diameter, radius.\n\nLength of stationary object\n\nAny linear or angular dimension relating to a stationary object, not necessarily the longest.\nCan be related to: altitude, distance, range, amplitude, extent, span, breadth, gap, stretch, circumference, girth, spread, cross measure, height, tolerance, depth, length, width, diameter, radius.\n\nArea of moving object\n\nCharacteristics related to surfaces or surface area of a moving object, either internal or external. They may include the square measure of the surface of the object, the part of a surface occupied by the object, or a contact area of the objects.\nCan be related to: contact area, porosity, space, dimensions, region, square, expanse, section, surface, field, sector, territory, point-contact, size, zone.\n\nArea of stationary object\n\nCharacteristics related to surfaces or surface area of a stationary object, either internal or external. They may include the square measure of the object’s surface, the part of a surface occupied by the object, or a contact area of the objects.\nCan be related to: contact area, porosity, space, dimensions, region, square, expanse, section, surface, field, sector, territory, point-contact, size, zone.\n\nVolume of moving object\n\nAny characteristics related to the cubic measure of space occupied by the moving object or the space around it.\nCan be related to: 3D dimensions, compactness, size, amount / quantity of substance, cubic measure, shrinkage, flow amount, space, aggregate, oversize, swelling, bulk, room, void, capacity.\n\nVolume of stationary object\n\nAny characteristics related to the cubic measure of space occupied by the stationary object or the space around it.\nCan be related to: 3D dimensions, compactness, size, amount / quantity of substance, cubic measure, shrinkage, flow amount, space, aggregate, oversize, swelling, bulk, room, void, capacity.\n\nSpeed\n\nThe velocity or speed of an object or the rate of any kind of process or action in time, focused on issues of dynamics rather than output of product (see: 30. Productivity). The speed may be relative or absolute, linear, or rotational.\nCan be related to: acceleration, rapidity, slowness, deceleration, rate, speedup, latency, rush, takt time, pace, slowdown, tardiness.\n\nForce (Intensity)\n\nForce measures the interaction between systems. In Newtonian physics, force = mass x acceleration. Here, it is any interaction that is intended to change an object’s condition. Can be linear or rotational.\nCan be related to: action, intensity, stiction, change of momentum, lift, stress, momentum, load, tension, drag, thrust, effort, pull, torque, friction, push, traction, grip, reaction, twist, inertia, shear, voltage.\n\nStress or Pressure\n\nForce exercised per unit area. Stress is the effect of forces on an object. Stresses can be tensile or compressive, static, or dynamic. Parameter also includes strain provided length is not the main issue.\nCan be related to: chemical fatigue, overload, strain, compression, plasticity, tension, creep, stacking-load weight, thermal fatigue, elasticity, vacuum, fatigue.\n\nShape\n\nThe internal or external contour or profile of a component or assembly required for ergonomic or functional rather than aesthetic reasons.\nCan be related to: asymmetry, line, roughness, contour, outline, silhouette, curvature, pattern, smoothness, form, porosity, symmetry, flatness, profile, unevenness, geometry.\n\nStability of the object composition\n\nThe wholeness or integrity of the system; relation of its constituent elements. It applies to both macro (component) and micro (atomic) level parameters.\nCan be related to: chemical decomposition, delamination, integrity, dissociation, oxidation, consistency, distortion, rusting, deformation, droop, solidity, desired/undesired, entropy, structure, homogeneity, sustainability, inertness, wear, instability.\n\nStrength\n\nThe degree to which an object is able to resist change in response to a mechanical force. Break resistance. May be elastic limit, plastic limit, or final strength; stretching or compression; linear or rotary.\nCan be related to: bond, fatigue, rigidity, creep, hardness, robustness, distortion, join, stillness, droop, resistance, tolerance.\n\nDuration of action of moving object\n\nThe time that the moving object or the system needs to perform the action. The duration of action is arbitrary – from a few milliseconds to few hours, to several years or even more.\nThe parameter differs from 35. Reliability, which is related to the time to system failure – in this case it is specifically only the duration aspect.\nCan be related to: (time) countdown, natural frequency, reaction-time, delay, mode, response-time, frequency, period, service life, interval, phase, time-span, life, rate, time-consumption.\n\nDuration of action of stationary object\n\nThe time that the non-moving object or the system needs to perform the action. The duration of action is arbitrary – from a few milliseconds to few hours, to several years or even more.\nThe parameter differs from 27. Reliability, which is related to the time to system failure – in this case it is specifically only the duration aspect.\nCan be related to: (time) countdown, natural frequency, reaction-time, delay, mode, response-time, frequency, period, service life, interval, phase, time-span, life, rate, time-consumption.\n\nTemperature\n\nMeasured or perceived thermal condition of the object or the system. Includes other thermal parameters, that affect the rate of change of temperature.\nCan be related to: boiling point, isolation, radiation, cooling, freezing/melting point, thermal capacity, heating, thermodynamic equilibrium, hot, overheating.\n\nIllumination intensity\n\nThe light flux per unit area, as well as all other characteristics related to the color or quality of light, etc. The parameter applies to the light source.\nCan be related to: colour, light spectrum, saturation, contrast, lustre, shade, darkness, matt, shiny, emissivity, obscuration, tone, invisibility, reflection, transparency, light intensity, reflectivity, visibility.\n\nUse of energy by moving object\n\nA measure of a moving object’s capacity to perform work. This parameter focuses on the actual amount of energy needed to perform a specific job, not on the efficiency of its use. It concerns the use of energy provided by the supersystem (e.g., electricity or heat).\nCan be related to: power consumption, cooling, heat-input, calories, current, heating, calorific value, fuel consumption.\n\nUse of energy by stationary object\n\nA measure of a stationary object’s capacity to perform work. This parameter focuses on the actual amount of energy needed to perform a specific job, not on the efficiency of its use. It concerns the use of energy provided by the supersystem (e.g., electricity or heat).\nCan be related to: power consumption, cooling, heat-input, calories, current, heating, calorific value, fuel consumption.\n\nPower\n\nThe rate at which work is performed. The rate of use of energy. Rate of energy output.\nCan be related to: action intensity, horse-power, voltage, current, shaft horse-power, Wattage, energy.\n\nLoss of energy\n\nLoss or waste of energy that does not contribute to the performance of any useful function. It can be partial or complete, permanent, or temporary.\nCan be related to: cooling down, inefficiency, resistance, damping, interference, slowing down, dissipation, isolation, stiction, friction, long flow, turbulence, heat loss, muting, weakening, weariness.\n\nLoss of substance\n\nLoss or waste of elements of a system or its surroundings – substances, materials, parts, sub-systems, products, fields, etc. Can be partial or complete, permanent, or temporary.\nCan be related to: abrasion, erosion, wear, absorption, evaporation, waste, corrosion, leakage, poorly transferable flow of substance, degradability, obstruction, deposition, oxidation, desorption, seal.\n\nLoss of information\n\nLoss or waste of data or access to data in or by a system. Includes sensory data associated with any of the 5 senses – visual, auditory, kinesthetic, olfactory, or gustatory (VAKOG). Can be partial or complete, permanent or temporary.\nCan be related to: aroma, jamming, obscuration, corruption, lack of knowledge, opacity, communication issue, lack of feedback, poorly transferable information flow, measurement inaccuracy, grey zone, white spot, interference, misunderstanding.\n\nLoss of time\n\nTime (duration of an activity) inefficiencies. Improving the loss of time means reducing the time taken for the activity. Can be partial or complete, always, or occasional.\nCan be related to: bottleneck, slack time, time lag, delay, stagnant zone, waiting time, duplication of effort, time lost on redundant or unnecessary activities, reaction-time, response-time, idle time, latency.\n\nQuantity of substance\n\nThe amount, quantity, or number of a system’s materials, substances, parts, fields, or sub-systems. The “substance” is used here in its most general form and includes any physical or temporal “thing”.\nCan be related to: absorbency, density, particle, amount, flesh, stuff, mass, flow amount, volume, count, matter.\n\nReliability\n\nA system’s ability to perform its intended functions in predictable ways and conditions. Also includes durability and issues related to the performance or degradation in performance of an object or system over long periods.\nCan be related to: durability, life-cycle, Mean-Time-Between-Overhaul (MTBO) failure-rate, Mean-Time-Between-Failure (MTBF) maintenance, in-service, integrity, life, service-time, through-life-cost.\n\nMeasurement accuracy\n\nDegree of precision or accuracy. The closeness of a measured value to an actual value of a property of a system. Reducing the error in a measurement improves the accuracy of the measurement.\nCan be related to: consistency, median, punctuality, error, mode, standard deviation, exactness, precision, tolerance, mean.\n\nManufacturing precision\n\nThe extent to which the actual characteristics of the system or object match the specified or required characteristics.\nCan be related to: accuracy, quality assurance, surface finish, exactness, repeatability, tolerance, indefiniteness, sigma level, variation (6 Sigma), looseness, standard deviation.\n\nObject-affected harmful factor\n\nThis parameter is designed as a catch-all for any form of action or phenomenon in or around a system that manifests itself as a harmful effect on something in the system. Susceptibility of a system to externally generated (harmful) effects.\nCan be related to: adhesion, mold impact, sun-damage, contamination, oxidization, vulnerability, corroding, resilience, warpage, dust ingestion, undesired effect, weakening, erosion, sticking, weather impact.\n\nObject-generated harmful factor\n\nA harmful effect that reduces the performance or quality of the operation of an object or system. These harmful effects are generated by the object or system as part of its operation. It can also be any form of pollution or emission to the environment generated by an object or system.\nCan be related to: abrasion, noise, undesirable side effect, contamination, pollution, fumes emission, radioactivity, unburned hydro-carbons waste, infection, radiation, greenhouse gases emission, toxic by-products.\n\nEase of manufacture\n\nIssues related to manufacture, fabrication, and assembly of the object or system. The degree of facility, comfort or effortlessness in manufacturing or fabricating the object/system.\nCan be related to: assembly, degree of automation / robotization, machine-setting time, convenience of manufacture, tool-change, unchangeableness.\n\nEase of operation\n\nThe extent to which the user is able to learn to operate, to operate, or to control the system, object, or process. Convenience of use.\nThe process is NOT easy if it requires a large number of people, a large number of steps, special tools, etc. In opposite to „difficult” processes, the „easy” processes are high-efficient and easy to do them right.\nCan be related to: competencies, handiness knowledge, setup-time, controllability, simplicity, ease of transport, availability, tool-availability, ease-of-use, learning-curve, training, ergonomics, movability, transportability, familiarization- time, remote control, usability.\n\nEase of repair\n\nCharacteristics such as convenience, comfort, simplicity, and time to repair faults, failures, or defects of the system. Includes issues related to the need for special tools or equipment required for repair. Also consider the conditions for an on-site and remote repair.\nCan be related to: accessibility, interchangeability, removability, assembly, maintenance, replaceability, convenience of repair, modularity, updatability, recoverability, upgradability, disassembly, remote access, uptime, ergonomics.\n\nAdaptability or Versatility\n\nThe extent to which a system/object is able to respond to external changes. Also, relates to a system capable of being used in multiple ways or under a variety of circumstances. Flexibility of operation or use.\nCan be related to: agility, inadaptability, switching, compliance, modulation, tolerance, customizability, plasticity, trainability, evolution, responsivity, universality, flexibility, rigidity, variation.\n\nDevice complexity\n\nThe number and diversity of elements and element interrelationships within and across the boundaries of a system. The user may be an element of the system that increases the complexity. Includes issues like number of functions, number of interfaces and connections, excessive number of components. Also, the complexity of the control system – either physical components or the algorithms that it contains.\nCan be related to: differential, modularity, positive feedback, homogeneity, negative feedback, proportionality, integrity, obviousness, seamless, interfaces, part count, simplification, invariability, plainness, uniformity.\n\nDifficulty of detection\n\nDifficulty in performing measurements on an object or system. Measurement or monitoring systems that are complex, costly, time-consuming, and labor-intensive to set up and use, or that have complex relationships between components or interfering components show „difficulties in detecting and measuring”. The rising cost of measurement to a satisfactory error is also a sign of increased measurement difficulty.\nCan be related to: access, disturbance, location, availability, exactness, precision, ability to find the right parameter to measure, inaccessibility, repeatability, integrity, tolerance, interference, visibility, consistency, lag, variability, disappearance, latency.\n\nExtent of automation\n\nThe ability of a system or object to perform its functions without human interface or intervention. The lowest level of automation is the use of a manually operated tool. For intermediate levels, humans program the tool, observe its operation, and interrupt or re-program as needed. For the highest level, the machine senses the operation needed, programs itself, and monitors its own operations.\nCan be related to: algorithmic, man-in-the-loop / man-out-of-the-loop, programmability, computerization level, robotization, quality assurance, de-skilling, manual control, repeatability.\n\nProductivity\n\nThe number or amount of useful functions or operations (useful output) performed by a system per unit time. The time per unit function or operation. Cost per unit output.\nIt is not focused on issues of dynamics (see: 14. Speed).\nCan be related to: bottlenecks, number of, throughput, capacity, operations, value, expenses, output, value-adding, extra processing steps, overproduction, operations, performance, yield.\nREFERENCES:\n\nE. Domb, The 39 Features of Altshuller’s Contradiction Matrix,\nR. Platt, 39 Parameters – Definitions,\nD. Mann, Matrix 2010: Re-updating the TRIZ Contradiction Matrix, IFR Press, 2009.\n\n\nPhysical contradiction"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-7",
    "href": "Problem-solving-tools.html#overview-7",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nA physical contradiction refers to a situation where a single parameter of an object is subjected to two conflicting requirements. The focus on a single parameter distinguishes it from an engineering contradiction (which involves two different parameters). However, both types of contradictions are directly interconnected and can be derived from one another.\nNote that if one of the required parameter states cannot be justified, then there is no physical contradiction, rather you have a solution.\nThe physical contradiction is more precise than the engineering contradiction because the problem is modeled using a parameter belonging to only one component. This makes it clear from the outset which component should be addressed with the recommendations derived from TRIZ.\nModels of solutions for the physical contradictions are inventive principles. The tool that is used to translate the engineering contradiction into inventive principles is the algorithm for resolving physical conradictions."
  },
  {
    "objectID": "Problem-solving-tools.html#format",
    "href": "Problem-solving-tools.html#format",
    "title": "Problem-solving tools",
    "section": "Format",
    "text": "Format\nThe general format used for the physical contradiction is the following:\n\nAn example can be the following:\n\n\nArticles\n\nAlgorithm for resolving physical contradictions\n\n\nAlgorithm for resolving physical contradictions"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-8",
    "href": "Problem-solving-tools.html#overview-8",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nSeveral problem-solving tools can be used to solve physical contradictions; however, the algorithm is the most commonly applied. The choice of a specific approach leads to a corresponding set of inventive principles. These are the same inventive principles included in the contradiction matrix but grouped differently.\nOnce the appropriate set of inventive principles for a given contradiction is identified, a brainstorming session is conducted around them to propose specific solutions."
  },
  {
    "objectID": "Problem-solving-tools.html#approaches-of-resolving-physical-contradictions",
    "href": "Problem-solving-tools.html#approaches-of-resolving-physical-contradictions",
    "title": "Problem-solving tools",
    "section": "Approaches of resolving physical contradictions",
    "text": "Approaches of resolving physical contradictions\nThe key approach to solving physical contradictions involves separating the conflicting requirements in space, time, relation, or direction. To achieve this, appropriate control questions are asked. This helps filter the methods for separating conflicting demands that are applicable in the given case. Separation at the system level is a slightly different approach. It is the only method that does not require asking any control questions and is recommended in each case.\nIf separating the conflicting requirements is not possible, satisfying both demands should be explored.\nThe final approach is to resolve the problem by completely bypassing the contradictory demands.\n\nSeparating and satisfying contradictory demands lead to specific sets of inventive principles; for bypassing any principle can be applied.\nProblems should be modeled in multiple ways. The more problem models are created, the more solution models are generated, which in turn leads to a greater number of ideas.\nEach specific physical contradiction represents a unique situation. In some cases, all approaches may work, while in others, only a few – or even just one – may be applicable. If conflicting requirements can be separated in different ways, it is worth exploring all possible variants. Even if separation yields good ideas, it is recommended to also consider satisfying and bypassing approaches.\n\nSeparating the contradictory demands\nSeparating is the most frequently used method. There are five ways to separate contradictory demands:\n\nSeparating in space\ncontrol question: where?\nThe approach is applicable if answering the control question reveals that the contradictory demands are applied to different places in space.\nThe recommended inventive principles to separate the contradictory demands in space:\nPrinciple 1. Segmentation\n\nDivide the object into independent parts.\nMake the object easy to disassemble.\nIncrease the degree of fragmentation or segmentation of the object.\n\nPrinciple 2. Separation\n\nSeparate any interfering parts or properties from the object, or single out the only necessary part (or property) of the object.\n\nPrinciple 3. Local quality\n\nChange the object’s structure from uniform to non-uniform, change the external environment (or external influence) from uniform to non-uniform.\nEnsure that each part of the object functions in conditions most suitable for its operation.\nEnsure that each part of the object fulfills a different and useful function.\n\nPrinciple 7. “Nested doll”\n\nPlace one object inside another; place each object, in turn, inside the other.\nPass one part through a cavity in the other.\n\nPrinciple 4. Asymmetry\n\nChange the shape of the object from symmetrical to asymmetrical.\nIf the object is asymmetrical, increase its degree of asymmetry.\n\nPrinciple 17. Transition to another dimension\n\nMove the object in two- or three-dimensional space.\nUse a multistory arrangement for the objects instead of a single-story arrangement.\nTilt or re-orient the object, put it on its side.\nUse a different side of the given area.\n\n\n\nSeparating in time\ncontrol question: when?\nIt is applicable if answering the control question reveals that the contradictory demands are required at different moments in time.\nThe recommended inventive principles to separate the contradictory demands in time:\nPrinciple 9. Preliminary anti-action\n\nIf it is necessary to perform an action with both harmful and useful effects, a counteraction should be performed first to control the harmful effects.\nCreate stresses in the object in advance to oppose known undesirable working stresses later on.\n\nPrinciple 10. Preliminary action\n\nMake any changes in the object (either fully or partially) before such changes are required.\nPre-arrange objects so that they can be quickly activated without losing time delivering them.\n\nPrinciple 11. In-advance cushioning\n\nPrepare an emergency equipment beforehand to compensate for any objects that are not reliable.\n\nPrinciple 15. Dynamization\n\nAllow changes (or design such changes) in the characteristics of the object, external environment, or process that optimize the object, or that optimize the operating conditions.\nDivide the object into parts capable of moving relative to each other.\nIf the object (or process) is rigid or inflexible, make it movable or adaptable.\n\nPrinciple 34. Discarding and recovering\n\nEliminate portions of the object that have fulfilled their function (discard by dissolving, evaporating, etc.) or modify these during the operation of the object.\nConversely, restore consumable parts of the object during the operation of the object.\n\n\n\nSeparating in relation (conditions)\ncontrol question: for whom / for what object?**\nThis approach is applicable if answering the control question reveals that the contradictory demands are applied for different objects.\nThe recommended inventive principles to separate the contradictory demands in relation:\nPrinciple 3. Local quality\n\nChange the object’s structure from uniform to non-uniform, change the external environment (or external influence) from uniform to non-uniform.\nEnsure that each part of the object functions in conditions most suitable for its operation.\nEnsure that each part of the object fulfills a different and useful function.\n\nPrinciple 17. Transition to another dimension\n\nMove the object in two- or three-dimensional space.\nUse a multistory arrangement for the objects instead of a single-story arrangement.\nTilt or re-orient the object, put it on its side.\nUse a different side of the given area.\n\nPrinciple 19. Periodic action\n\nInstead of continuous action, use periodic or pulsating actions.\nIf an action is already periodic, change the periodic magnitude or frequency.\nUse pauses between impulses to perform a different action.\n\nPrinciple 31. Porous materials\n\nMake the object porous or add porous elements (inserts, coatings, etc.).\nIf the object is already porous, use the pores to introduce a useful substance or function.\n\nPrinciple 32. Color changes\n\nChange the color of the object or its external environment.\nChange the transparency of the object or its external environment.\n\nPrinciple 40. Composite materials\n\nChange from uniform to composite (multiple) materials.\n\n\n\nSeparating in direction\ncontrol question: in what direction?**\nIt is applicable if answering the control question reveals that the contradictory demands are applied for different directions of action.\nThe recommended inventive principles to separate the contradictory demands in direction:\nPrinciple 4. Asymmetry\n\nChange the shape of the object from symmetrical to asymmetrical.\nIf the object is asymmetrical, increase its degree of asymmetry.\n\nPrinciple 14. Spheroidality – curvature\n\nInstead of using rectilinear parts, surfaces, or forms, use curvilinear ones; change from flat surfaces to spherical ones; from cube-shaped (paralllelepiped) parts to ball-shaped structures.\nUse rollers, balls, spirals, domes.\nGo from linear to rotary motion; use centrifugal forces.\n\nPrinciple 17. Transition to another dimension\n\nMove the object in two- or three-dimensional space.\nUse a multistory arrangement for the objects instead of a single-story arrangement.\nTilt or re-orient the object, put it on its side.\nUse a different side of the given area.\n\nPrinciple 32. Color changes\n\nChange the color of the object or its external environment.\nChange the transparency of the object or its external environment.\n\nPrinciple 35. Parameter changes\n\nChange the object’s physical state (e.g., to a gas, liquid, or solid).\nChange the concentration or consistency.\nChange the degree of flexibility.\nChange the temperature.\n\nPrinciple 40. Composite materials\n\nChange from uniform to composite (multiple) materials.\n\n\n\nSeparating at the system level\nThere is no control question related to separation at the system level. This approach may always be applied\nThe recommended inventive principles to separate the contradictory demands at the system level:\nPrinciple 1. Segmentation\n\nDivide the object into independent parts.\nMake the object easy to disassemble.\nIncrease the degree of fragmentation or segmentation of the object.\n\nPrinciple 5. Merging\n\nBring closer together (or merge) identical or similar objects, assemble identical or similar parts to perform parallel operations.\nMake operations contiguous or parallel; bring them together in time.\n\nPrinciple 12. Equipotentiality\n\nIn any potential field, limit position changes (e.g., change operating conditions to eliminate the need to raise or lower objects in a gravity field).\n\nPrinciple 33. Homogeneity\n\nMake objects interacting with any given object of the same material (or material with identical properties).\n\n\n\n\nSatisfying the contradictory demands\nSatisfying contradictory demands is much less frequently used then separation.\nAs the name suggests, in this approach – similarly to separation – both demands are also met, but now simultaneously. Recommendations for this approach are often related to the use of so-called smart materials and scientific effects.\nThe recommended inventive principles to satisfy the contradictory demands:\nPrinciple 13. The other way around\n\nInvert the action(s) taken to solve the problem (e.g., instead of cooling the object, heat it).\nMake movable parts (or the external environment) stationary, and stationary parts movable.\nTurn the object (or process) “upside down”.\n\nPrinciple 28. Mechanics substitution\n\nReplace mechanical means with sensory (optical, acoustic, taste or smell) means.\nUse electric, magnetic and electromagnetic fields to interact with the object.\nChange from static to movable fields, from unstructured fields to structured.\nUse fields in conjunction with field-activated (e.g., ferromagnetic) particles.\n\nPrinciple 35. Parameter changes\n\nChange the object’s physical state (e.g., to a gas, liquid, or solid).\nChange the concentration or consistency.\nChange the degree of flexibility.\nChange the temperature.\n\nPrinciple 36. Phase transitions\n\nUse phenomena occurring during phase transitions (e.g., volume changes, loss or absorption of heat, etc.).\n\nPrinciple 37. Thermal expansion\n\nUse thermal expansion (or contraction) of materials.\nIf thermal expansion is being used, use multiple materials with different thermal expansion coefficients.\n\nPrinciple 38. Strong oxidants\n\nReplace air with oxygen-enriched air.\nReplace enriched air with pure oxygen.\nExpose air or oxygen to ionizing radiation.\nUse ozonized oxygen.\nReplace ozonized (or ionized) oxygen with ozone.\n\nPrinciple 39. Inert atmosphere\n\nReplace a normal environment with an inert one.\nAdd neutral parts, or inert additives to the object.\n\n\n\nBypassing the contradictory demands\nBypassing contradictory demands is the least used method of resolving physical contradictions. It is usually used when separating or satisfying contradictory demands doesn’t work.\nThe approach is based on changing the engineering system so that the physical contradiction becomes irrelevant and does not need to be resolved anymore, e.g. finding different ways of performing the desired function.\nThere are no inventive principles assigned to this method, which means that all principles can be applied.\n\nInventive principle"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-9",
    "href": "Problem-solving-tools.html#overview-9",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nThe inventive principles are proposed models of solutions for both engineering contradictions and physical contradictions. Depending on the type of contradiction, and thus the tool used to process it, a different set of principles will be proposed to solve the problem. In other words, the contradiction matrix will lead to different solution models than the algorithm for resolving physical contradictions.\nThe concept of inventive principles originated from G. Altshuller’s extensive research into patents across various engineering fields. By focusing on patents that resolved contradictions rather than those aimed at optimization, Altshuller identified patterns among innovative solutions. Through systematic analysis and classification of thousands of patents, he discovered that problems modeled as similar engineering contradictions often shared conceptually similar solutions. These generalized approaches were distilled and formalized into 40 inventive principles."
  },
  {
    "objectID": "Problem-solving-tools.html#inventive-principles",
    "href": "Problem-solving-tools.html#inventive-principles",
    "title": "Problem-solving tools",
    "section": "40 inventive principles",
    "text": "40 inventive principles\nPrinciple 1. Segmentation\n\nDivide the object into independent parts.\nMake the object easy to disassemble.\nIncrease the degree of fragmentation or segmentation of the object.\n\nPrinciple 2. Separation\n\nSeparate any interfering parts or properties from the object, or single out the only necessary part (or property) of the object.\n\nPrinciple 3. Local quality\n\nChange the object’s structure from uniform to non-uniform, change the external environment (or external influence) from uniform to non-uniform.\nEnsure that each part of the object functions in conditions most suitable for its operation.\nEnsure that each part of the object fulfills a different and useful function.\n\nPrinciple 4. Asymmetry\n\nChange the shape of the object from symmetrical to asymmetrical.\nIf the object is asymmetrical, increase its degree of asymmetry.\n\nPrinciple 5. Merging\n\nBring closer together (or merge) identical or similar objects, assemble identical or similar parts to perform parallel operations.\nMake operations contiguous or parallel; bring them together in time.\n\nPrinciple 6. Universality\n\nMake a part of the object, or the entire object perform multiple functions; eliminate the need for other parts.\n\nPrinciple 7. “Nested doll”\n\nPlace one object inside another; place each object, in turn, inside the other.\nPass one part through a cavity in the other.\n\nPrinciple 8. Anti-weight\n\nTo compensate for the weight of the object, merge it with other objects that provide some support.\nTo compensate for the weight of the object, make it interact with the environment (e.g., use aerodynamic, hydrodynamic, buoyancy, and other forces).\n\nPrinciple 9. Preliminary anti-action\n\nIf it is necessary to perform an action with both harmful and useful effects, a counteraction should be performed first to control the harmful effects.\nCreate stresses in the object in advance to oppose known undesirable working stresses later on.\n\nPrinciple 10. Preliminary action\n\nMake any changes in the object (either fully or partially) before such changes are required.\nPre-arrange objects so that they can be quickly activated without losing time delivering them.\n\nPrinciple 11. In-advance cushioning\n\nPrepare an emergency equipment beforehand to compensate for any objects that are not reliable.\n\nPrinciple 12. Equipotentiality\n\nIn any potential field, limit position changes (e.g., change operating conditions to eliminate the need to raise or lower objects in a gravity field).\n\nPrinciple 13. The other way around\n\nInvert the action(s) taken to solve the problem (e.g., instead of cooling the object, heat it).\nMake movable parts (or the external environment) stationary, and stationary parts movable.\nTurn the object (or process) “upside down”.\n\nPrinciple 14. Spheroidality – curvature\n\nInstead of using rectilinear parts, surfaces, or forms, use curvilinear ones; change from flat surfaces to spherical ones; from cube-shaped (paralllelepiped) parts to ball-shaped structures.\nUse rollers, balls, spirals, domes.\nGo from linear to rotary motion; use centrifugal forces.\n\nPrinciple 15. Dynamization\n\nAllow changes (or design such changes) in the characteristics of the object, external environment, or process that optimize the object, or that optimize the operating conditions.\nDivide the object into parts capable of moving relative to each other.\nIf the object (or process) is rigid or inflexible, make it movable or adaptable.\n\nPrinciple 16. Partial or excessive actions\n\nIf 100% of an effect is hard to achieve using a given method for solving a problem, then by using “lightly less” or “slightly more” of the same method, the problem may be considerably easier to solve.\n\nPrinciple 17. Transition to another dimension\n\nMove the object in two- or three-dimensional space.\nUse a multistory arrangement for the objects instead of a single-story arrangement.\nTilt or re-orient the object, put it on its side.\nUse a different side of the given area.\n\nPrinciple 18. Mechanical vibration\n\nCause the object to oscillate or vibrate.\nIncrease its frequency (even up to the ultrasonic).\nUse the object’s resonant frequency.\nUse piezoelectric vibrators instead of mechanical ones.\nUse combined ultrasonic and electromagnetic field oscillations.\n\nPrinciple 19. Periodic action\n\nInstead of continuous action, use periodic or pulsating actions.\nIf an action is already periodic, change the periodic magnitude or frequency.\nUse pauses between impulses to perform a different action.\n\nPrinciple 20. Continuity of useful action\n\nCarry on work continuously; make all parts of the object work at full load, all the time.\nEliminate all idle or intermittent actions or work.\n\nPrinciple 21. Skipping\n\nConduct a process, or certain stages of it (e.g., destructible, harmful or hazardous operations) at high speed.\n\nPrinciple 22. “Blessing in disguise”\n\nUse harmful factors (particularly, effects that are detrimental to the environment or surroundings) in such a way as to achieve a positive effect.\nEliminate the primary harmful action by adding it to another harmful action to resolve the problem.\nAmplify a harmful factor to such a degree that it is no longer harmful.\n\nPrinciple 23. Feedback\n\nIntroduce feedback (referring back, cross-checking) to improve a process or an action.\nIf feedback is already used, change it.\n\nPrinciple 24. Intermediary\n\nUse an intermediary carrier article or intermediary process.\nMerge one object temporarily with another (which can be easily removed).\n\nPrinciple 25. Self-service\n\nMake the object serve itself by performing auxiliary helpful functions\nUse waste resources, energy, or substances.\n\nPrinciple 26. Copying\n\nInstead of an unavailable, expensive, fragile object, use simpler, inexpensive copies.\nReplace the object or process with optical copies.\nIf visible optical copies are already used, move to infrared or ultraviolet copies.\n\nPrinciple 27. Cheap short-living objects\n\nReplace an expensive object with a multitude of inexpensive objects that compromise certain qualities (service life, for instance).\n\nPrinciple 28. Mechanics substitution\n\nReplace mechanical means with sensory (optical, acoustic, taste or smell) means.\nUse electric, magnetic and electromagnetic fields to interact with the object.\nChange from static to movable fields, from unstructured fields to structured.\nUse fields in conjunction with field-activated (e.g., ferromagnetic) particles.\n\nPrinciple 29. Pneumatics and hydraulics\n\nUse gas and liquid parts of the object instead of solid parts (e.g., inflatable, filled with liquids, air cushioned, hydrostatic, hydro-reactive).\n\nPrinciple 30. Flexible shells and thin films\n\nUse flexible shells and thin films instead of three-dimensional structures\nIsolate the object from the external environment using flexible shells and thin films.\n\nPrinciple 31. Porous materials\n\nMake the object porous or add porous elements (inserts, coatings, etc.).\nIf the object is already porous, use the pores to introduce a useful substance or function.\n\nPrinciple 32. Color changes\n\nChange the color of the object or its external environment.\nChange the transparency of the object or its external environment.\n\nPrinciple 33. Homogeneity\n\nMake objects interacting with any given object of the same material (or material with identical properties).\n\nPrinciple 34. Discarding and recovering\n\nEliminate portions of the object that have fulfilled their function (discard by dissolving, evaporating, etc.) or modify these during the operation of the object.\nConversely, restore consumable parts of the object during the operation of the object.\n\nPrinciple 35. Parameter changes\n\nChange the object’s physical state (e.g., to a gas, liquid, or solid).\nChange the concentration or consistency.\nChange the degree of flexibility.\nChange the temperature.\n\nPrinciple 36. Phase transitions\n\nUse phenomena occurring during phase transitions (e.g., volume changes, loss or absorption of heat, etc.).\n\nPrinciple 37. Thermal expansion\n\nUse thermal expansion (or contraction) of materials.\nIf thermal expansion is being used, use multiple materials with different thermal expansion coefficients.\n\nPrinciple 38. Strong oxidants\n\nReplace air with oxygen-enriched air.\nReplace enriched air with pure oxygen.\nExpose air or oxygen to ionizing radiation.\nUse ozonized oxygen.\nReplace ozonized (or ionized) oxygen with ozone.\n\nPrinciple 39. Inert atmosphere\n\nReplace a normal environment with an inert one.\nAdd neutral parts, or inert additives to the object.\n\nPrinciple 40. Composite materials\n\nChange from uniform to composite (multiple) materials.\n\n\nARIZ"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-10",
    "href": "Problem-solving-tools.html#overview-10",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nARIZ is a Russian acronym of algorithm for inventive problem solving (алгоритм решения изобретательских задач, АРИЗ).\nThere have been several versions of ARIZ over the years. The last one officially published under Altshuller’s name is ARIZ-85C. Although later versions were developed posthumously, they did not significantly improve the procedure’s effectiveness – some even added unnecessary complexity. As a result, ARIZ-85C remains the official version.\nIt’s important to keep in mind that in 1985, TRIZ did not yet include the advanced analytical tools available today. Still, Altshuller clearly understood the importance of identifying the right problem to solve, which is why ARIZ-85C already includes several built-in analytical procedures.\nclick here to read the original text of ARIZ-85C including all the notes and recommendations formulated by Altshuller\nclick here to download an ARIZ-85C template in editable Word file\nFor the reader’s convenience, each block of ARIZ has been described in a separate article."
  },
  {
    "objectID": "Problem-solving-tools.html#application-of-ariz",
    "href": "Problem-solving-tools.html#application-of-ariz",
    "title": "Problem-solving tools",
    "section": "Application of ARIZ",
    "text": "Application of ARIZ\nARIZ is typically used for solving complex key problems that cannot be resolved using other TRIZ methods, in projects where major changes to the system are unacceptable.To highlight the specific nature of these problems, the algorithm introduced the term mini-problem.\nThe mini-problems a key problems that can arise from various sources, like CECA, trimming, or feature transfer."
  },
  {
    "objectID": "Problem-solving-tools.html#strength-of-ariz",
    "href": "Problem-solving-tools.html#strength-of-ariz",
    "title": "Problem-solving tools",
    "section": "Strength of ARIZ",
    "text": "Strength of ARIZ\nThe strength of ARIZ is determined by its distinctive features:\n\nFocusing on achieving the ideal final result.\nBasing on trends of engineering system evolution.\nFocusing on the system resources.\n\n\nFocusing on achieving the ideal final result\nARIZ is focused on achieving the ideal final result (IFR) – the best possible solution to a problem, in which the problem is completely eliminated with minimal changes to the system and no deterioration of its parameters.\nIt’s important not to confuse the concept of IFR with that of the ideal system, as the two are fundamentally different – though often mistakenly used interchangeably. While the ideal system refers to a system that does not exist (it performs the function without taking up space, costing anything, or requiring maintenance), the IFR in ARIZ is about solving a specific problem within an existing system by making only minimal adjustments. The system still exists, takes up space, generates costs, and requires upkeep – but the problem it had is resolved in the most efficient way possible.\n\n\nBasing on trends of engineering system evolution\nLike many other TRIZ tools, ARIZ is built on the trends of engineering system evolution. The algorithm includes steps that directly reflect various trends – such as identifying and eliminating contradictions, aiming for the ideal final result (IFR), focusing on minimal changes to the initial system, or applying the multi-screen approach.\nAll of these actions are designed to help overcome psychological inertia and lead to the most effective possible solution.\n\n\nFocusing on the system resources\nMaking minimal changes to the system means working with resources that are already present within the system and its supersystem. While it might be tempting to introduce new materials, add components, or apply new fields, such changes often come with significant costs. In reality, most systems already contain what’s needed to solve the problem – those resources are simply overlooked. One of ARIZ’s key goals is to uncover them.\nTo do this, ARIZ works in two directions. First, it narrows focus like a funnel, transforming a broad key problem into a well-defined TRIZ mini-problem. Then, it expands outward, revealing more and more resources hidden within the system and supersystem as the analysis progresses."
  },
  {
    "objectID": "Problem-solving-tools.html#structure-of-ariz",
    "href": "Problem-solving-tools.html#structure-of-ariz",
    "title": "Problem-solving tools",
    "section": "Structure of ARIZ",
    "text": "Structure of ARIZ\nARIZ is a very well-structured tool. It has the structure of a block-diagram composed of steps, rules, and notes.\nComplete algorithm consists of 9 parts organized into three main blocks. Each part consists of several sub-steps. The general structure is the following:\nBlock 1: Restructuring the original problem\nPart 1. Analyze the system\nPart 2. Analyze the problem model.\nPart 3. Define the ideal final result and formulate the physical contradiction.\nBlock 2: Removing the physical contradiction\nPart 4. Resolve the physical contradiction.\nPart 5. Apply the knowledge base, scientific effects, standard inventive solutions, contradiction matrix, etc.\nPart 6. Change the mini-problem.\nBlock 3: Analyzing the solution\nPart 7. Review the solution and analyze removal of the physical contradiction.\nPart 8. Develop maximum usage of the solution.\nPart 9. Review all the stages in ARIZ in a “real time” application.\n\nArticles\n\nConflicting pair\nProduct\nTool\nARIZ Block 1: Restructuring the original problem\nX-factor\nOperating zone\nOperating time\nMini-problem\nIdeal final result\n\n\n\nARIZ Block 1: Restructuring the original problem"
  },
  {
    "objectID": "Problem-solving-tools.html#part-1.-analyze-the-system",
    "href": "Problem-solving-tools.html#part-1.-analyze-the-system",
    "title": "Problem-solving tools",
    "section": "Part 1. Analyze the system",
    "text": "Part 1. Analyze the system\nIn general, part 1 is about the analysis of the key problem. It includes seven steps.\nIt begins with identifying main function of the system, as wel as components of the system and its supersystem. After that the engineering problem is modelled as two alternative (inverted) engineering contradictions and the mini-problem is formulated.\nThe next steps help determine the tool(s) and the product(s) in the analyzed conflict. The two states of them are also identified. Next, graphical models of the contradictions are created. Finally, the base contradiction is selected, intensified, and the problem is formulated.\n\nStep 1.1. Formulate the mini-problem\nThe first step of ARIZ is to define the mini-problem by identifying the system and modeling the problem as engineering contradictions (EC).\nIn ARIZ, the system may differ from the one analyzed earlier during function analysis. Here, the focus is on the key problem, so the system includes only components directly related to it. However, it is recommended that not only technological components of the system be listed but also the “natural” ones that interact with it. For example, in the problem of protecting a telescope antenna, natural objects like lightning or incoming radio waves (emitted by celestial bodies) should also be considered.\nThe key disadvantages, identified earlier through CECA, help pinpoint the root causes, which may lie deep within or outside the original system. Eliminating these root causes defines the key problem, and the system in ARIZ refers to the area where this problem occurs.\nTo define the system, its main function is specified, and essential components of both the system and supersystem are listed. Based on this, two types of engineering contradictions are formulated: EC-1 (direct) and EC-2 (inverted). Together, they form the foundation of the mini-problem.\nWhen formulating contradictions, make sure to include key parameters in the IF, THEN, and BUT lines. It’s also helpful to keep the function format in the THEN and BUT lines, showing how the function carrier affects a specific parameter of the function object. This clarity will support later steps in the process.\nSometimes the problem situation involves only the product – the tool is absent. In such cases, there is no clear technical contradiction, but one can still be formulated by considering two states of the product, even if one of those states seems impossible to achieve.\nFor example – how can we observe tiny particles suspended in a transparent liquid with the naked eye, if the particles are so small that light flows around them?\nTC-1: The liquid remains transparent because the particles are small, but they cannot be seen with the naked eye.\nTC-2: Larger particles are easier to observe, but they make the liquid no longer transparent, which is an unacceptable outcome.\nSince we cannot change the product, we will proceed only with TC-1, but we also note that TC-2 adds a requirement to the product: The particles must remain small (to keep the liquid transparent) and simultaneously become large (so they can be seen).\n\n\nStep 1.2. Determine the conflicting pair\nStep 1.2 is used to identify the tool(s) and product(s) that form the conflicting pair.\nIn this step, we also identify the states in which the tool operates. These states refer to the properties, features, or parameters specified in the IF line of the contradictions formulated in step 1.1:\n\nstate 1 can be found in the direct contradiction,\nstate 2 appears in the inverted  contradiction.\n\n\n\nStep 1.3. Create graphical models of the engineering contradictions\nIn Step 1.3, the problem is presented in graphic form. Graphs are created for both EC-1 and EC-2.\nThe graphs are built using symbols familiar from tools such as function analysis and substance-field modeling.\nIt is important to note that the purpose of the diagrams is not to depict functions, but to illustrate engineering contradictions.\nThe diagram must clearly show both the useful and the harmful action. In practice, this means there should be two arrows – one “good” and one “bad.” If both arrows represent the same type of effect (e.g. both are useful, or both are harmful/insufficient/excessive), it indicates a mistake that needs to be corrected.\nThe conflicting pair shown in the illustration typically consists of two components, but in some cases it may involve three – either two products and one tool, or one product and two tools.\n\n\nStep 1.4. Select a contradiction for further analysis (basic contradiction)\nEC-1 and EC-2 model the same situation, but they represent completely different problems.\nTo achieve the project goal, both problems need to be addressed, but it’s not possible to deal with them simultaneously. At this stage, we must choose which engineering contradiction to focus on – this becomes the basic contradiction.\nAltshuller recommended selecting the contradiction in which the system’s main function is performed. This approach is quite natural, as the goal is to solve the problem with minimal changes to the system. However, experience shows that there are cases where engineers are open to more significant modifications. In such situations, choosing the inverted contradiction may be the better option.\nImportantly, selecting one contradiction at this point does not mean discarding the other one. If the solutions developed in the next steps are not satisfactory, the algorithm itself will prompt a return to this step and suggest reconsidering the second contradiction.\n\n\nStep 1.5. Intensify the conflict\nThis step has been introduced to help overcome psychological inertia, including the natural tendency of engineers to focus on optimization. While optimization isn’t inherently bad, it is not desirable during the conceptual phase of TRIZ-based projects.\nTo intensify the contradiction, the parameter from the line IF is pushed to its absolute extreme. If something was supposed to be light, it should now weigh nothing; if it was supposed to be small, it should now cease to exist entirely.\nStrengthening this parameter will require corresponding adjustments to the THEN and BUT positions in the contradiction model.\nImportant! From this point onward, we will be working exclusively with the intensified contradiction in ARIZ.\n\n\nStep 1.6. Formulate the problem model\nIn step 1.6, we use all the previous steps and formulate an ARIZ problem model. The ARIZ problem model should include:\n\nthe conflicting pair,\nthe intensified definition of the conflict, and\nthe X-factor.\n\n\n\nStep 1.7. Apply standard inventive solutions\nIn Step 1.7, based on the diagrams created in Step 1.3, substance-field models are constructed and standard inventive solutions are applied.\nThe entire analysis conducted in Part 1, along with the construction of the problem model, results in a significant refinement of the problem.\nImplementation of step 1.7 is not mandatory and can be skipped. Regardless, standard inventive solutions application will reappear in part 5 of ARIZ."
  },
  {
    "objectID": "Problem-solving-tools.html#part-2.-analyzing-the-problem-model",
    "href": "Problem-solving-tools.html#part-2.-analyzing-the-problem-model",
    "title": "Problem-solving tools",
    "section": "Part 2. Analyzing the problem model",
    "text": "Part 2. Analyzing the problem model\nPart 2 of ARIZ focuses on analyzing the resources available within the system and its supersystem.\nARIZ is designed for projects that allow only minimal changes to the system. This usually rules out the introduction of new resources, which makes identifying existing resources absolutely critical.\nPart 2 consists of three steps, during which we identify the main types of resources considered in ARIZ:\n\nspace resources,\ntime resources, and\nsubstance and field resources of the system and its supersystem, including their parameters.\n\n\nStep 2.1. Define the operating zone\nIn Step 2.1, the spatial resources of the system are identified. The operating zone (also called operating space) refers to the area where the conflict identified in the problem model occurs.\nAccording to the previously formulated contradiction, the system faces two opposing requirements. One must be fulfilled in operating zone 1 (OZ-1), the other in operating zone 2 (OZ-2). If these zones are separated, the contradiction may be resolved by separating the contradictory demands in space. If the zones overlap, then other methods must be explored to resolve the contradiction.\n\n\nStep 2.2. Define the operating time\nIn this step, the time resources of the system are identified.\nThe operating time is most simply defined as the time in which the conflict identified in the problem model occurs. According to the contradiction, the system faces two opposing requirements. Operating time 1 (OT-1) is the period during which the first requirement of the system is met, while operating time 2 (OT-2) is the period during which the second requirement occurs.\nIt is essential to determine whether these zones are separated or overlapping. If these times are different, the contradiction can be resolved by separating the contradictory requirements in time. If the times overlap, the separation is not possible hence a different strategy is required.\n\n\nStep 2.3. Define the substance-field resources (SFR)\nIn the final step of Part 2, the focus shifts to the analysis of substance and field resources – both those already present and those that can be easily accessed or introduced.\nThe resources under consideration include:\n\ninternal resources:\n\n\nproduct resources, and\ntool resources,\n\n\nexternal resources.\n\nDuring resource analysis, we are interested not only in the presence of a substance or field. Special attention is given to their parameters or features, which are considered particularly valuable in ARIZ. When creating a list of resources, everything that comes to your mind should be included, as any resource could be a potential candidate for solving the problem.\nThe internal resources of the conflicting pair are the first to be analyzed. Since both the tool and the product are already located in the conflict zone, their associated resources are also present – no additional effort is required to deliver them.\nCompared to the tool, the product’s resources may be more limited in terms of availability. While we often have the freedom to modify the tool as needed, making changes to the product may be subject to design, functional, or business constraints.\nWhen it comes to external resources, the search begins in the immediate surroundings of the conflict – the operating zone. However, it is beneficial to expand the search area, as there may be low-cost or even free resources available in the supersystem. Nearly every engineering project has access to universal resources like air and gravity. Additionally, nearby systems may generate waste or possess surplus materials or fields that could be valuable for solving the problem."
  },
  {
    "objectID": "Problem-solving-tools.html#part-3.-defining-the-ideal-final-result-and-formulating-the-physical-contradiction",
    "href": "Problem-solving-tools.html#part-3.-defining-the-ideal-final-result-and-formulating-the-physical-contradiction",
    "title": "Problem-solving tools",
    "section": "Part 3. Defining the ideal final result and formulating the physical contradiction",
    "text": "Part 3. Defining the ideal final result and formulating the physical contradiction\nPart 3 of ARIZ focuses on the ideal final result (IFR) and identifying physical contradictions that hinder achieving it.\n\nStep 3.1. Formulate IFR\nIn Step 3.1, we return to the requirements defined for the X-factor based on the intensified technical contradiction from Step 1.6. Now, we can supplement these requirements with those identified in Steps 2.1 and 2.2, relating to the operating zone and operating time.\nTo formulate the ideal final result (IFR), a template is typically used. However, in some projects, applying the template word-for-word may result in a confusing or unclear statement. In such cases, it’s recommended to break the text into several separate sentences to clearly and effectively convey the intended meaning.\n\n\nStep 3.2. Formulate the intensified ideal final result\nAt this stage, the X-factor from Step 3.1 is replaced with a specific available resource.\nKeep in mind that the only resources that may be used to replace the X-factor are those identified in Step 2.3 – using any other resources is not in line with ARIZ. However, the replacement can be a single resource or a combination of several.\nIt is recommended to consider SFRs in the following order:\n\nSFR of the tool,\nSFR of the supersystem,\nother external SFR,\nSFR of the product (if not restricted).\n\nModifications to the product are usually significantly restricted or even completely prohibited. However, there are rare situations where the product may be allowed to change on its own, change temporarily, or be combined with a void, etc. SFR of the product may be considered only if such modifications are explicitly permitted.\nThe list of resources identified in Part 2 is usually quite long. Considering each one as a potential X-factor would significantly extend the project timeline. That’s why in Step 3.2, it is recommended to start by considering 5 to 6 selected resources. If using them does not lead to satisfactory results, you can return to Step 3.2 later in the ARIZ process to explore other resources.\n\n\nStep 3.3. Define the physical contradiction on macro-level\nThe intensified ideal final result (IFR) concepts developed in Step 3.2 usually do not yet solve the mini-problem. It is highly likely that the chosen resources are prevented from acting effectively as X-factors due to underlying physical contradictions. Identifying these contradictions enables us to attempt to resolve them.\nFor formulating the physical contradictions here, we usually use the following pattern:\nThe parameter [specify] of the resource [specify] should be value 1 [specify] to eliminate the harmful action [specify] and/or value 2 [specify] to provide the useful function [specify].\nWhen approaching the formulation of physical contradictions, we typically encounter one of the following three scenarios:\n\nThe contradiction can be clearly formulated and processed.\nAfter formulating the contradiction, it turns out that the selected resource has no influence or connection to the parameters that need to be changed. At this stage, the resource is set aside – it may be reconsidered later in the ARIZ process.\nIt becomes clear that only one demand of the contradiction is justified. This means the contradiction does not actually exist – and we’ve just found the solution.\n\nThe physical contradictions formulated in Step 3.2 represent models of entirely new problems that had not been previously identified – yet they are precisely what gives ARIZ its distinctive power.\n\nConflicting pair"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-11",
    "href": "Problem-solving-tools.html#overview-11",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nConflicting pair is a term used in ARIZ.\nThe terms of the tool and the product are specific to ARIZ but closely mirror the function carrier and function object from function analysis. The product corresponds to the target component – the object of the system’s main function – while the tool is the component that performs this function. This analogy makes it easier to quickly identify the conflicting pair in the system.\nA conflicting pair consists of two or three components.\nFor example, in the process of sealing glass ampoules containing medicine, the flame, the ampoule, and the medicine form a conflicting pair. The flame melts the ampoule tip, but if it’s too strong, it damages the medicine; if it’s too weak, it fails to seal the ampoule properly. In this case, the pair includes one tool (the flame) and two products (the ampoule and the medicine). In other scenarios, a conflicting pair may involve two tools and one product.\n\nMini-problem"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-12",
    "href": "Problem-solving-tools.html#overview-12",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nMini-problem is a concept used in ARIZ.\nThe prefix “mini” does not imply that the problem is small, but rather that its solution must involve only minimal changes to the system.\nA mini-problem is created by taking the original problem situation and adding a constraint: everything in the system must stay the same or become simpler, while the desired action (or property) appears, or the harmful action (or property) disappears. This transformation doesn’t mean we’re trying to solve a “smaller” problem. Instead, adding this extra requirement – achieving the desired result without changing the system – sharpens the conflict and blocks any path toward compromise right from the start. This is achieved by making use of resources that already exist – either within the system or in its surrounding environment.\nIn engineering projects, this approach is often a necessary condition for balancing business interests with the ambitions of engineers.\nThe mini-problems a key problems that can arise from different sources, like CECA, trimming, or feature transfer.\n\nOperating time"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-13",
    "href": "Problem-solving-tools.html#overview-13",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nThe operating time is a concept used in ARIZ. It is defined in Step 2.2 of the algorithm. Its purpose is to identify the time resources of the system.\nThe operating time is most simply defined as the time in which the conflict identified in the problem model occurs.\nAccording to the previously formulated contradiction, the system faces two opposing requirements. Operating time 1 (OT-1) is the period during which the first requirement of the system is met, while operating time 2 (OT-2) is the period during which the second requirement occurs.\nIt is essential to determine whether these zones are separated or overlapping.\n\nIf these times are different, the contradiction can be resolved by separating the contradictory requirements in time. If the times overlap, the separation is not possible hence a different strategy is required.\nCreating sketches that clearly highlight OT-1 and OT-2 is recommended. In fact, Altshuller considered such sketches mandatory during this step.\nAltshuller recommended a deeper time analysis by examining three distinct phases:\n\nbefore the conflict,\nduring the conflict, and\nafter the conflict.\n\nAnalysing the first phase enables the implementation of preventive measures ahead of time. Analysing the third phase allows for actions aimed at eliminating the consequences of the conflict.\nAlthough in some projects the before and/or after phases may not be applicable, considering this structure can help identify a broader range of time-related resources, often leading to more effective and robust solutions.\n\nOperating zone"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-14",
    "href": "Problem-solving-tools.html#overview-14",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nThe operating zone is a concept used in ARIZ. It is defined in Step 2.1 of the algorithm. Its purpose is to identify the spatial resources of the system.\nThe operating zone – also known as the operating space – is most simply defined as the area in which the conflict identified in the problem model occurs.\nAccording to the previously formulated contradiction, the system faces two opposing requirements. These requirements must be fulfilled in specific areas, referred to as operating zone 1 (OZ-1) and operating zone 2 (OZ-2).\nIt is essential to determine whether these zones are separated or overlapping.\n\nIf they are located in different places, the problem might be resolved by separating the contradictory demands in space. If the zones overlap, the separation is not possible hence a different strategy is required.\nCreating sketches that clearly highlight OZ-1 and OZ-2 is recommended. In fact, Altshuller considered such sketches mandatory during this step.\n\nProduct"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-15",
    "href": "Problem-solving-tools.html#overview-15",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nThe term of product is characteristic for ARIZ – together with the tool, it forms what is known as a conflicting pair, which is identified in Step 1.2 of the algorithm.\nThe product can be directly compared to the target component, which is the object of the main function of the system in function analysis. Such an analogy significantly facilitates it’s quick identification.\nThe difference in terminology between ARIZ and function analysis stems from the fact that, in 1985 – when the final version of ARIZ was developed – function analysis had not yet been officially introduced into the TRIZ toolkit. Even after it became a standard TRIZ tool, Altshuller’s original terminology was preserved in ARIZ to maintain consistency with the original structure.\nTo identify the product move on to the main function of the system.\n\nTool"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-16",
    "href": "Problem-solving-tools.html#overview-16",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nThe term of tool is characteristic for ARIZ – together with the product, it forms what is known as a conflicting pair, which is identified in Step 1.2 of the algorithm.\nThe tool is the element that directly interacts with the product, such as, for example, a mill rather than a milling machine, or a flame rather than a burner. Sometimes, a specific part of the environment can be considered as a tool. The standard parts from which the product is assembled can also be considered as a tool.\nIn terms of state-of-the-art TRIZ, the tool is the component of the system performing main function. It immediately evokes associations with the carrier of the function that significantly facilitates quick identification of it. The difference in terminology between ARIZ and function analysis stems from the fact that, in 1985 – when the final version of ARIZ was developed – function analysis had not yet been officially introduced into the TRIZ toolkit. Even after it became a standard TRIZ tool, Altshuller’s original terminology was preserved in ARIZ to maintain consistency with the original structure.\nTo identify the tool, refer to the line IF of the contradictions.\n\nX-factor"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-17",
    "href": "Problem-solving-tools.html#overview-17",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nX-factor is a term used in ARIZ. It refers to any entity that should be introduced into the system to help solve the problem.\nThe X-factor can be any resource identified in Part 2 of ARIZ, or a combination of several resources. It may be a substance, a field, a parameter, time, space, or any other characteristic – whether from the system or its supersystem.\nExamples include a temperature change, a phase transition, a change in color or material, and more. The role of the X-factor is to preserve what is desirable in the contradiction while eliminating what is undesirable.\nThe requirements for the X-factor are defined in Step 1.6 of ARIZ.\nInitially, the term X-element was used in ARIZ. However, since the word element is polysemantic in many languages, it has been replaced with X-factor in state-of-the-art TRIZ.\n\nIdeal final result"
  },
  {
    "objectID": "Problem-solving-tools.html#overview-18",
    "href": "Problem-solving-tools.html#overview-18",
    "title": "Problem-solving tools",
    "section": "Overview",
    "text": "Overview\nIFR is a concept introduced in ARIZ where it helps in setting a clear, unambiguous goal that guides the subsequent steps. Formulating it is one of crucial steps of the algorithm.\nWith the IFR in mind, ARIZ uses various TRIZ tools and principles to systematically eliminate contradictions and develop innovative solutions."
  },
  {
    "objectID": "Problem-solving-tools.html#key-features",
    "href": "Problem-solving-tools.html#key-features",
    "title": "Problem-solving tools",
    "section": "Key features",
    "text": "Key features\n\nThe IFR aims to achieve the maximum benefit for a system with the least use of resources, including time, money, energy, and materials.\nAchieving IFR must not introduce new problems or side effects. It should resolve the issue without creating additional challenges.\nIFR usually simplifies the system rather than complicate it. This often involves reducing the number of components or steps required to achieve the desired outcome. It often incorporates self-regulating and self-maintaining aspects, meaning the system requires little to no external intervention to function optimally."
  },
  {
    "objectID": "Problem-solving-tools.html#difference-between-ifr-and-ideal-system",
    "href": "Problem-solving-tools.html#difference-between-ifr-and-ideal-system",
    "title": "Problem-solving tools",
    "section": "Difference between IFR and ideal system",
    "text": "Difference between IFR and ideal system\nIFR is sometimes confused with an ideal system. These concepts are significantly different and it is a major mistake to equate them. IFR is is a term used in ARIZ. It is a model of the best solution to a specific problem, whereby the problem is fully eliminated with minimal changes to the system and without any deterioration of system parameters. However, the system exists, occupies space, incurs costs, requires maintenance, etc. The ideal system referes to the system with infinite value. It has no components or associated costs, but still delivers the intended function(s). In other words, the system does not exist, but its main function is performed.\n\nFunction-oriented search (FOS)"
  },
  {
    "objectID": "Problem-identification-tools.html#overview",
    "href": "Problem-identification-tools.html#overview",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe term of function-cost analysis is sometimes used as a synonym for function analysis. Technically, it should be considered as function analysis supplemented with cost analysis performed in its final stage.\nThe analysis is usually performed if cost reduction is a goal of the project. It helps identify function disadvantages and cost disadvantages that are later used as building blocks for CECA. It also aids in making decisions about which components should be considered for trimming.\n\nFunction-cost analysis is usually presented by adding a column to the function model table. If the project involves developing an innovation strategy, its results can also be illustrated in the form of a function-cost diagram.\nThe tool should not be confused with value analysis. Value analysis involves mathematically calculating value of components based on the function-cost diagram illustrating results of function-cost analysis.\n\nArticles\n\nFunction analysis\n\nComponent analysis\n\nComponent\nEngineering system\nComponent model\nSupersystem\n\nInteraction analysis\n\nInteraction\nInteraction matrix\n\nFunction modeling\n\nFunction\nMain function\n\nTarget component\n\nFunction disadvantage\nFunction rank\n\nBasic function\nAdditional function\nAuxiliary function\nProductive function\nProviding function\n\nSupporting function\nTransport function\nMeasurement function\n\nCorrective function\n\nDefect\n\n\nFunction model\n\nValue analysis\n\nValue\n\nIdeal system\n\nFunctionality index\n\n\nCost analysis\nFunction-cost diagram\n\n\n\nFunction analysis"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-1",
    "href": "Problem-identification-tools.html#overview-1",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nEvery engineering system is designed to deliver specific main function(s). This functionality is the result of functions performed by individual components of the engineering system. Function analysis involves identifying and characterizing these functions, making it the foundation for almost all problem-identification and problem-solving tools used in TRIZ.\nThe outcomes of the tool are:\n\nfunction model of the system,\na list of function disadvantages.\n\nFunction analysis neither provides new information about the analyzed system, nor suggests solutions but is crucial for project success. It organizes and translates information about the system into the language of functions, enabling the effective application of problem-solving tools.\nFunction analysis, supplemented with cost analysis, helps formulate a system development strategy. It aids in determining which component(s) should be trimmed, which should be improved, and which should remain unchanged."
  },
  {
    "objectID": "Problem-identification-tools.html#types-of-function-analysis",
    "href": "Problem-identification-tools.html#types-of-function-analysis",
    "title": "Problem-identification tools",
    "section": "Types of function analysis",
    "text": "Types of function analysis\nFunction analysis is differentiated into\n\nfunction analysis of devices, and\nfunction analysis of processes.\n\nBoth serve to build a function model of the system and identify its function disadvantages. They share many similarities, however, there are several significant differences between them.\n\n\n\n\n\n\n\n\nstage\nfunction analysis of devices\nfunction analysis of processes\n\n\ncomponent analysis\nsplitting the system into components, which are substances, fields, or combination of both\nsplitting the system into components,which are operations\n\n\ninteraction analysis\nidentifying interactions between components\nnot performed\n\n\nfunction modeling\nidentifying functions performed betweeninteracting components\nidentifying functions performed withinoperations\n\n\n\nranking the identified functions as basic, additional, or auxiliaryones\nranking the identified functions as productive, providing(supporting, transport, or measurement), or correctiveones"
  },
  {
    "objectID": "Problem-identification-tools.html#function-analysis-of-devices",
    "href": "Problem-identification-tools.html#function-analysis-of-devices",
    "title": "Problem-identification tools",
    "section": "Function analysis of devices",
    "text": "Function analysis of devices\n\nOverview\nFunction analysis of devices is applied to technical systems with a fixed set of components that remains constant over time, such as machines, apparatuses, equipment, etc.\n\n\nStages of the analysis\nThe function analysis of devices consists of three stages:\n\ncomponent analysis,\ninteraction analysis, and\nfunction modeling.\n\n\nAt each stage, information is gathered to confirm one of the three conditions for a function to occur. First, a list of components is created, as both the function carrier and the function object must be components of the system or its supersystem. Then, pairs of components with any interactions are identified. Finally, for each pair, it is determined whether one component in the pairs alters or intentionally maintains any parameter of the other.\n\n\nAlgorithm for function analysis of the device\nAlgorithm for function analysis of devices is the following:\n\nDetermine boundaries of the system, its main function, and the target component.\nPerform the component analysis:\n\nidentify all the system components, remember to keep the proper hierarchy of components, and not to split them if not necessary,\nidentify relevant supersystem components; remember to consider the components that can provide free resources,\nlist all the identified components, e.g., in the form of a table.\n\nPerform the interaction analysis:\n\ncreate the interaction matrix template with the number of columns and rows corresponding to the number of all identified components,\nfill out the interaction matrix template with the names of components in column and the raw headings, in the same order,\ncheck if there is any interaction for each pair of components in the matrix; record the results of your analysis – with a “+” sign if the interaction exists, a “–” when it does not,\ncheck if the interaction matrix is symmetrical relative to the diagonal running from the upper left-hand corner to the lower right-hand corner.\n\nPerform the function modeling:\n\ncheck whether any function is performed for every interaction identified in interaction analysis,\nspecify category of each function,\ndetermine the level of performance of the useful functions,\nrank the functions (if needed),\ncalculate the functionality index of the engineering system components (if needed),\ncalculate the value of each component of the engineering system (if needed)."
  },
  {
    "objectID": "Problem-identification-tools.html#function-analysis-of-processes",
    "href": "Problem-identification-tools.html#function-analysis-of-processes",
    "title": "Problem-identification tools",
    "section": "Function analysis of processes",
    "text": "Function analysis of processes\n\nOverview\nFunction analysis of processes is applied to technical systems, in which the set of components changes as the time goes, i.e. some of them appear, while others disappear from the system.\nIt is a fairly universal analytical tool. In the MATRIZ methodology, it was developed to deal with technological processes. However, with appropriate modifications, it can be applied to any processes that can be presented as step-by-step procedures, such as administrative, managerial, or logistical processes, among others.\n\n\nStages\nFunction analysis of the process consist of two stages:\n\ncomponent analysis, and\nfunction modeling.\n\n\nNo that, on the contrary to devices, interaction analysis is not conducted for processes. In TRIZ, interaction is understood as physical contact, and since no physical contact occurs between the components of processes (operations), there are no interactions to analyze.\nThe first step in process analysis involves identifying all the relevant components of the system. However, the concept of components differs – they are no longer substances and/or fields but the operations that constitute the process. Additionally, neither the target component nor supersystem components are used here. Technically, they exist, however, essentially are not actively used.\nThe second and final step of function analysis for processes is function modeling. Due to the specific nature of the system, functions are no longer identified between components but within the components themselves, which in this case are the operations."
  },
  {
    "objectID": "Problem-identification-tools.html#algorithm-for-function-analysis-of-the-process",
    "href": "Problem-identification-tools.html#algorithm-for-function-analysis-of-the-process",
    "title": "Problem-identification tools",
    "section": "Algorithm for function analysis of the process",
    "text": "Algorithm for function analysis of the process\nAlgorithm for function analysis of processes is the following:\n\nDetermine boundaries of the process, the main function(s) and its final product.\nPerform the component analysis:\n\n\nidentify all the operations of the process; remember to keep the proper hierarchy of operations, and not to split them if not necessary,\nidentify relevant supersystem operations; remember to consider the operations that can provide free resources,\nlist all the identified components, e.g., in the form of a table.\n\n\nPerform the function modeling:\n\n\nidentify functions performed within each operation,\nspecify category of each function,\nrank the functions,\ncalculate the functionality index of the engineering system components (if needed),\ncalculate the value of each component of the engineering system (if needed).\n\n\nArticles\n\nComponent analysis\n\nComponent\nEngineering system\nComponent model\nSupersystem\n\nInteraction analysis\n\nInteraction\nInteraction matrix\n\nFunction modeling\n\nFunction\nMain function\n\nTarget component\n\nFunction disadvantage\nFunction rank\n\nBasic function\nAdditional function\nAuxiliary function\nProductive function\nProviding function\n\nSupporting function\nTransport function\nMeasurement function\n\nCorrective function\n\nDefect\n\n\nFunction model\n\nValue analysis\n\nValue\n\nIdeal system\n\nFunctionality index\n\n\n\nComponent analysis"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-4",
    "href": "Problem-identification-tools.html#overview-4",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nComponent analysis is the starting point of the function analysis, both for devices and processes. Its goal is to identify all components of the engineering system and relevant components of its supersystem.\nThe output of the analysis is a component model, which serves as input for interaction analysis when analyzing a device, and for function modeling when analyzing a process."
  },
  {
    "objectID": "Problem-identification-tools.html#defining-the-system-boundaries",
    "href": "Problem-identification-tools.html#defining-the-system-boundaries",
    "title": "Problem-identification tools",
    "section": "Defining the system boundaries",
    "text": "Defining the system boundaries\nBefore proceeding to the component analysis, it is essential to define boundaries of the system. They are crucial during function modeling stage as they significantly influence function ranking.\nFor devices, boundaries between the system and its supersystem are necessary to determine the status of components, i.e. to determine which components belong to the system and which of them belong to its supersystem. Additionally, main function of the system can only be identified once the boundaries are defined – as the boundaries change, the main function may also change, along with the target component.\nIn processes, supersystem components do not play an active role in the function analysis; however, how we define the boundaries can still have a direct impact on ranks of functions."
  },
  {
    "objectID": "Problem-identification-tools.html#component-analysis-for-devices",
    "href": "Problem-identification-tools.html#component-analysis-for-devices",
    "title": "Problem-identification tools",
    "section": "Component analysis for devices",
    "text": "Component analysis for devices\n\nProcedure\nThe procedure of the component analysis for the device is the following:\n\nestablish boundaries of the system,\nidentify all the system components and relevant supersystem components (see: Recommendations),\ncreate the component model in an appropriate form.\n\n\n\nRecommendations\nThe choice of the hierarchy level depends on the goal and constraints of the project. The analysis should be conducted at the level where components are directly linked to the problem. In some cases, these components may need to be broken down into smaller parts for clarity.\nFor the supersystem components, select only those that are relevant to the project, but don’t overlook those that may provide resources that can be used to improve the system, includingair or gravity.\nWhen performing component analysis for devices, the system’s specifications can be very helpful; however, the level of detail can be adjusted as needed. Components sourced from external suppliers, where there is no control over the design or redesign is not permitted, sould be included as a single assembly without detailed analysis."
  },
  {
    "objectID": "Problem-identification-tools.html#component-analysis-for-processes",
    "href": "Problem-identification-tools.html#component-analysis-for-processes",
    "title": "Problem-identification tools",
    "section": "Component analysis for processes",
    "text": "Component analysis for processes\nIn the function analysis of the process, the component analysis is a phase when the process is split into operations that are its components.\nThe operations in the process are usually carried out sequentially:\n\nThey may also be performed in parallel:\n\nRegardless of whether the operations are carried out in parallel or sequentially, it may happen that they will create a loop:\n\n\nProcedure\nThe procedure of the component analysis for the process is the following:\n\nestablish boundaries of the system,\nidentify all the operations of the process (see: Recommendations),\nidentify relevant supersystem operations, particularly those that can provide free resources,\ncreate the component model in an appropriate form.\n\n\n\nRecommendations\nSimilarly to devices, in the analysis of processes, the decision on the level of detail in the breakdown depends on us and should be based on the project’s goal. The system can be divided into large operations or a greater number of smaller ones.\nIt’s important to remember that having operations with only one function is not practical. On the other hand, if an operation contains too many functions, it may significantly complicate trimming.\nExisting process documentation, such as standard operating procedures (SOPs), process flow diagrams, equipment specifications, or transformation flowsheets, can be a very useful source of data for component analysis. Interviews with employees who operate, maintain, or supervise the process can also provide valuable insights. Finally, it’s worth spending some time on the production floor, observing the process in action, analyzing historical process data, and so on. This hands-on approach may reveal discrepancies compared to the documentation.\n\nArticles\n\nComponent\nEngineering system\nComponent model\nSupersystem\n\n\nComponent"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-5",
    "href": "Problem-identification-tools.html#overview-5",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nAs a rule, a component is defined as a part that constitutes an engineering system or its supersystem. However, it should be emphasized that there is a significant difference between components understood as parts of devices and those that make up processes.\nFor both types of systems, components are identified during the component analysis, i.e. the first stage of function analysis.\n\nComponent of a device\nComponent of a device may be:\n\na substance, i.e. an object with a rest mass;\na field, an object without a rest mass that transfers interaction between substances, or\na combination of a substance and a field.\n\nSome examples of components can be the following:\n\na substance:\n\na wheel (of a car)\na screw\nair\nan operator (a person)\n\na field:\n\ngravity\nlight (electromagnetic field)\nelectric current\n\na combination of a substance and a field:\n\na light bulb with the light it emits\na radio with a sound it emits (acoustic field)\na star (a celestial body) with its radiation\n\n\nBiological objects can also be components, for examaple:\nsystem components:\n\nan operator (in the lift to move things),\nmicroorganisms (in a bioreactor to produce biogas),\na flower (as a decoration to entertain a person),\n\nsupersystem components:\n\na pig (for a lifestock trailer),\na heart (for a cardioverter),\ngrass (for a lawnmower).\n\n\nField in TRIZ\nIn TRIZ, the concept of a field extends beyond the traditional scientific definition and includes any interaction between system components, not just classical fields like gravity and electromagnetism. The term field is used from a technical perspective to facilitate idea generation. Fields represent various interactions that can occur between substances in a system.\nCategorizing fields according to their types has led to the development of MATChEM that is an acronym representing six types of fields:\n\nmechanical: interactions that are perceived as mechanical energy, e.g. gravity, friction, centrifugal force, vibrations, etc.\nacoustic: sound interactions like audible sound, ultrasound, seismic waves, resonance, etc.\nthermal: temperature related interactions, e.g. heating, cooling, phase changes, etc.\nchemical: interactions and reactions like oxidation, polymerization, synthesizing, as well as using catalysts or inhibitors, etc.\nelectrical: phenomena based on electricity, e.g. Foucault currents, electrostatic charges, ionization, piezoelectric effects, etc.\nmagnetic: mostly magnetic fields.\n\nThe last two letters (EM) also may stand for electromagnetic and refer to phenomena like microwaves, X-rays, light, or color.\n\n\n\nComponent of a process\nA component of a process is an operation.\nOperationis a set of functions within a technological process grouped because of certain considerations.\nSome examples of process components can be the following:\nsystem: making a dough for a pizza\n\nmixing ingredients,\nkneading the dough,\nproofing the dough,\nshaping the dough,\nrolling and stretching the dough.\n\nsystem: polymerization in a reactor\n\nmonomer introduction,\ncatalyst addition,\nreaction monitoring,\npolymer formation,\nmixing,\nproduct removal,\npost-reaction treatment.\n\nsystem: a fermenter process\n\ninoculation (introducing microorganisms),\nnutrient addition,\naeration,\nmixing or agitation,\nfermentation,\ngas management,\nsampling,\nharvesting,\ncleaning and sterilization.\nTagged:\nfield\nmatchem\nsubstance\n\n\nEngineering system"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-6",
    "href": "Problem-identification-tools.html#overview-6",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nEngineering system and technical system are the terms used interchangeably in TRIZ.\nThe function for which the system is designed is called main function. A system that doesn’t perform any main function cannot exist, but there are many systems performing several main functions.\nDefining boundaries of the engineering system is a crucial step in any project. The boundaries are determined by the project goal and project constraints. They depend on what is necessary and possible to change and stay within the project budget and other specifics. Everything beyond the boundaries, including the environmental surrounding, is called a supersystem.\nDefining the system boundaries of the system is important because:\n\nmain function of the system can only be identified once the boundaries are defined – as the boundaries change, the main function may also change, along with the target component;\nit determines which components belong to the system and which of them belong to its supersystem;\nthe function rank depends on the main function – since the boundaries of the engineering system are determined by the project goal and project constraints, they may depend on what part of the device is within the scope of the project (what is allowed to redesign, what changes are covered by the project budget, etc.).\n\nTechnical systems can also include subsystems or components created by nature, both organic (plants, animals, or humans) and inorganic (minerals, water, etc.)."
  },
  {
    "objectID": "Problem-identification-tools.html#types-of-engineering-systems",
    "href": "Problem-identification-tools.html#types-of-engineering-systems",
    "title": "Problem-identification tools",
    "section": "Types of engineering systems",
    "text": "Types of engineering systems\nIn general, two types od engineering system are considered in TRIZ:\n\ndevices, and\nprocesses.\n\n\nDevice as an engineering system\nBy the device, we understand a system with a certain set of components that remains unchanged in time. Their parameters can change, but no components appear, disappear, or merge into one. The device can be machinery, apparatus, equipment, etc.\nExamples of engineering systems that are devices can be the following:\n\na car,\na computer,\na table,\na book,\nan air conditioner, etc.\n\n\n\nProcess as an engineering system\nTechnological process is a process that uses material objects, such as raw material, labour, energy, and machinery, to create finished products.\nBy the process, we understand a system, in which the set of components changes as the time goes. Some of them appear, while others disappear from the system. To model such a system, the axis of time has to be introduced:\n\nExamples of engineering systems that can be considered processes are the following:\n\na conveyor system (to assembling products),\nprocess of polymerization,\na combustion chamber (for burning fuel to produce heat and energy),\nconverting sugars into alcohol or acids in a fermenter,\na concrete mixer, etc.\n\n\nComponent model"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-7",
    "href": "Problem-identification-tools.html#overview-7",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nComponent model is an output of component analysis performed as a first step of function analysis, for both devices and processes. In the function analysis of devices, the model is an input for interaction analysis. In function analysis of processes, the interaction analysis is skipped, and the component model (in this case, operations) serves as the input for function modeling."
  },
  {
    "objectID": "Problem-identification-tools.html#presentation-of-the-component-model",
    "href": "Problem-identification-tools.html#presentation-of-the-component-model",
    "title": "Problem-identification tools",
    "section": "Presentation of the component model",
    "text": "Presentation of the component model\nThe way the component model is presented is quite flexible.\n\nPresentation for the device\nIt is a good practice to list the identified components in the form of a table. In the first column, enter the name of the engineering system, in the second column – its components, and in the third column – the components of its supersystem:\n\ndescription of the engineering system,\nsystem components, and\ncomponents of the supersystem.\n\n\n\n\nPresentation for the process\nFor processes, the component model is usually presented as a list of operations. If it is needed to show whether the operations are sequential or parallel, it is useful to create a graph, for example:\n\n\nSupersystem"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-8",
    "href": "Problem-identification-tools.html#overview-8",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nSupersystem is everything beyond the boundaries of the engineering system, including the environmental surrounding.\nIf the engineering system is a chair, the components of its supersystem may be the floor, the walls, the window, the air, other furniture nearby, the person sitting in the chair etc. If the system is a seat of a chair, the supersystem’s components will be not only the floor, the walls, the window, the air, the person sitting in the chair, but also legs of the chair and back of the chair.\n\nInteraction analysis"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-9",
    "href": "Problem-identification-tools.html#overview-9",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe primary purpose of the interaction analysis is to identify whether interactions exist between components within the component model. At this stage, the consequences of the identified interactions are not considered; the focus is solely on their presence.\nNote that the interaction analysis is a stage of function analysis that is performed only for devices. In function analysis of processes this step is entirely skipped because there are no interactions between components."
  },
  {
    "objectID": "Problem-identification-tools.html#procedure-2",
    "href": "Problem-identification-tools.html#procedure-2",
    "title": "Problem-identification tools",
    "section": "Procedure",
    "text": "Procedure\nTo facilitate the interaction analysis, the previously developed component model is utilized. The analysis is typically conducted by creating an interaction matrix, which is the output.\nThe matrix is created according to the following steps:\n\ncreate the matrix template with the number of columns and rows corresponding to the number of all identified components,\nfill out the matrix template with the names of components in column and the raw headings, in the same order,\ncheck if there is any interaction for each pair of components in the matrix; record the results of your analysis – with a “+” sign if the interaction exists, a “–” when it does not,\ncheck if the interaction matrix is symmetrical relative to the diagonal running from the upper left-hand corner to the lower right-hand corner.\n\n\nArticles\n\nInteraction\nInteraction matrix\n\n\nInteraction"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-10",
    "href": "Problem-identification-tools.html#overview-10",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nInteraction is one of key terms in function analysis for devices (not applied for processes) as the a fundamental principle is that for any function to exist between two components, there must be an interaction (physical touch) between them.\nThe occurrence of interactions depends directly on how components are defined. Identifying interactions between components that are substances is usually straightforward – they occur when these components come into direct contact, even at a single point.\nIf a component is a field, such as an electromagnetic field (light), there is a physical interaction between the field and its emitter (e.g., a light bulb) as well as between the field and its receiver (e.g., a watching person). However, in this case, the emitter (the light bulb) and receiver (the person) do not interact directly with each other.\nIf a component is defined as a combination of a substance and a field (e.g., a light bulb along with the electromagnetic field it emits), then an interaction with the receiver does exist (the light bulb “touches” the person through the light).\nInteractions between components are identified during interaction analysis, which is the second stage of function analysis for devices. They are recorded in the form of an interaction matrix, which then serves as the input for function modeling, the final stage of the analysis.\n\nInteraction matrix"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-11",
    "href": "Problem-identification-tools.html#overview-11",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe interaction matrix is an output of the interaction analysis conducted during the function analysis of a device. It is typically presented in the form of a table, where the input data are the components identified during the component analysis. Accurate completing this matrix is crucial for conducting the next stage of the function analysis, which is function modeling."
  },
  {
    "objectID": "Problem-identification-tools.html#creating-the-interaction-matrix",
    "href": "Problem-identification-tools.html#creating-the-interaction-matrix",
    "title": "Problem-identification tools",
    "section": "Creating the interaction matrix",
    "text": "Creating the interaction matrix\nThe interaction matrix is created based on the component model. To build it, follow the steps:\n\nConstruct a matrix with rows and columns equal to the number of all components identified during the component analysis.\nPlace the names of the components in both the column headers and row headings in the same sequence. It is  recommended that the components be entered in the following order:\n\nthe target component(s) of the system,\nthe system components,\nthe supersystem components.\n\nIn the matrix, record the presence of an interaction with a “+” sign and the absence with a “–” sign.\n\n\nThe interaction matrix must be symmetrical relative to the diagonal that runs from the upper left corner to the lower right corner. If component 1 interacts with component 2, then 2 must also interact with 1. This symmetry arises because the matrix uses the same set of components in both its rows and columns in the same order, making any interaction mutual.\nWhen constructing the interaction matrix, it’s important to accurately assess the presence of interactions between components. Mislabeling these interactions can affect the outcome of the whole function analysis.\nIf a non-existent interaction is mistakenly marked with an “+,” the analysis process may take longer as it will be examined for potential functions later. However, failing to mark an actual interaction has more serious consequences, as it can result in missing functions, leading to incomplete analysis and possibly incorrect conclusions. In cases of uncertainty, it is advisable to use a “+” to ensure all potential interactions are considered.\n\nFunction modeling"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-12",
    "href": "Problem-identification-tools.html#overview-12",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nFunction modeling is the final stage of function analysis for both devices and processes. This stage involves creating a function model in the form of a table, a graph, or both.\nIf cost reduction is the goal of the project, function modeling is supplemented with cost analysis, which provides important information about the components. On one hand, it helps identify the cost-related disadvantages, on the other, it aids in making decisions about which components should be considered for trimming. Function-cost analysis is usually presented by adding a column to the function model table."
  },
  {
    "objectID": "Problem-identification-tools.html#differences-between-function-modeling-for-devices-and-for-processes",
    "href": "Problem-identification-tools.html#differences-between-function-modeling-for-devices-and-for-processes",
    "title": "Problem-identification tools",
    "section": "Differences between function modeling for devices and for processes",
    "text": "Differences between function modeling for devices and for processes\nFunction modeling is the stage of function analysis where the two types of analysis differ the most.\n\nInput\nThe input to function modeling for devices is the interaction matrix, specifically the boxes with the sign “+”. Since interaction is a basic condition for the function to exist, only those pairs of components between which it exists are considered, while all the cells assigned with “–“ are being ignored.\nFor each cell containing „+” sign, an analysis is performed to investigate if the interaction between components represents a function. The components in the vertical axis are treated as function carriers and the components in the horizontal axis as function objects.\nSince the interaction analysis for processes is not performed at all, the input to function modeling is a component model created during the component analysis.\n\n\nRelation between functions and components\nFor both types of analyses, the notion of a function remains the same; however the role played by components changes.\nIn the case of devices, both the carriers and the objects of functions are the previously identified components:\n\nIn the case of processes, functions are performed within components (operations), meaning that neither their carriers nor their objects are components:\n\n\n\nFunction ranking\nFor devices, a function can have one of three ranks, which depend solely on the status of their objects. The most valued are functions whose object is the a target component. Those directed at other components of the supersystem hold a slightly lower rank. Finally, the least valued are functions that act on the components of the system itself.\nSince the target component and the supersystem components are not actively used in processes, ranking for them is based on different criteria."
  },
  {
    "objectID": "Problem-identification-tools.html#procedure-3",
    "href": "Problem-identification-tools.html#procedure-3",
    "title": "Problem-identification tools",
    "section": "Procedure",
    "text": "Procedure\n\nProcedure for function modeling for devices\nFor devices, the function modeling is performed according to the following procedure:\n\ncheck whether any function is performed for every interaction identified during the interaction analysis,\nspecify each function as useful or harmful,\ndetermine the level of performance of the useful function,\nrank the functions (if needed),\ncalculate the functionality index of the engineering system components (if needed),\ncalculate the value of each component of the engineering system (if needed).\n\n\n\nProcedure for function modeling for processes\nFor processes, the function modeling is performed according to the following procedure:\n\nidentify functions performed within each operation,\nspecify each function as useful or harmful,\nrank the useful functions.,\ncalculate the functionality index of each operation (if needed),\ncalculate the value of each operation of the engineering system (if needed).\n.\n\n\nArticles\n\nFunction\nMain function\n\nTarget component\n\nFunction disadvantage\nFunction rank\n\nBasic function\nAdditional function\nAuxiliary function\nProductive function\nProviding function\n\nSupporting function\nTransport function\nMeasurement function\n\nCorrective function\n\nDefect\n\n\nFunction model\n\n\nFunction"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-13",
    "href": "Problem-identification-tools.html#overview-13",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nFunction in TRIZ plays a particularly crucial role. One of the main paradigms of the methodology is separating the function from its carrier. In practice, this means that as long as the function is being performed, it does not matter which component performs it. This approach helps us overcome limitations and discover innovative solutions."
  },
  {
    "objectID": "Problem-identification-tools.html#elements-of-the-function",
    "href": "Problem-identification-tools.html#elements-of-the-function",
    "title": "Problem-identification tools",
    "section": "Elements of the function",
    "text": "Elements of the function\nFunction consists of 3 elements:\n\na function carrier, i.e., a substance and/or a field performing an action,\na function object, i.e., the addressee of the action,\na verb describing the action being performed.\n\n\nFunctions are identified during function analysis, specifically its last stage – function modeling."
  },
  {
    "objectID": "Problem-identification-tools.html#conditions-for-a-function-existence",
    "href": "Problem-identification-tools.html#conditions-for-a-function-existence",
    "title": "Problem-identification tools",
    "section": "Conditions for a function existence",
    "text": "Conditions for a function existence\nFor a function to be considered as performed, the following conditions must be met:\n\nboth the function carrier and the object of the function are substances and/or fields,\nthe function carrier interacts with the object of the function, and\nthe action performed by the function carrier changes or maintains (keeps unchanged) some parameter of the object; if such a parameter cannot be identified, it means that there is no function.\n\nNote that one function can change only one parameter of the function object. If the function carrier changes more than one parameter of the function object, it means that it performs more functions.\nSome examples of functions can be the following:\n\nthe hammer moves the nail (changes its position in space),\nthe glasses focus light (changes its direction),\nthe book informs the reader (changes the scope of their knowledge).\n\nIn the table below, the left column shows some examples of incorrectly formulating functions. The right column contains correctly formulated functions.\n\n\n\n\n\n\n\nincorrect formulation of functions (no parameter of the object is changed = no function)\ncorrectly formulated functions\n\n\nthe sunglasses protect eyes\nthe sunglasses direct light\n\n\nthe vacuum cleaner cleans the carpet\nthe vacuum cleaner removes dust\n\n\nthe dryer dries clothes\nthe dryer removes water\n\n\nthe ruler measures the length\nthe ruler informs a person\n\n\nthe lamp illuminates a book\nthe lamp generates light\n\n\nthe drill makes a whole in a board\nthe drill changes the shape of a board"
  },
  {
    "objectID": "Problem-identification-tools.html#evaluation-of-functions",
    "href": "Problem-identification-tools.html#evaluation-of-functions",
    "title": "Problem-identification tools",
    "section": "Evaluation of functions",
    "text": "Evaluation of functions\nFunctions are evaluated in terms of:\n\nusefulness (categories),\nlevel of performance, and\nimportance (ranks).\n\nFunctions are evaluated during function modeling, and the results of this evaluation are used in subsequent steps of the analytical process. Categories and performance levels are essential for identifying the function disadvantages of the system, which serve as inputs for the cause-effect chain analysis (CECA). Function ranking is crucial for trimming.\n\nCategories of functions\nIn modern TRIZ, two categories of functions are identified:\n\nuseful functions, and\nharmful functions.\n\nUseful function is a function performed by a function carrier that results in a positive (required) change or preservation a parameter of an object of the function.\nHarmful function is a function performed by a function carrier that results in an inacceptable change or inacceptable preservation of a parameter of an object of the function.\nSimply put, if the function carrier changes the object’s parameter in a desired direction, the function is useful; if it changes it in an undesired direction, the function is harmful.\nFunctions themselves are neither harmful nor useful. Their category must always be considered in the context of the specific situation. The function hot air melts plastic would be useful if the goal is to increase the plasticity of the plastic, but if the hardness of the plastic needs to be preserved, it would be a harmful function.\n\n\nLevel of performance\nLevel of the function performance is determined only for useful functions. For harmful functions it is ignored, and they inherently represent function disadvantages of the system.\nThe level of performance determines whether the useful function is performed normally (i.e., within the intended parameters, exactly as it was designed) or is performed excessively or insufficiently. The excessive and insufficient performance of the function are viewed as function disadvantages of the system.\nThe performance level of a function can be illustrated by the example of a bicycle rim brake. Its purpose is to hold the tire to enable smooth and effective stopping of the bicycle. If the brake holds too tightly, the stop is too abrupt, which can lead to an accident. If the brake holds too loosely, the braking distance dangerously increases, also raising the risk of an incident.\n\n\nFunction ranking\nFunction ranking is conducted when it is necessary to develop an innovation strategy. It involves identifying the type of the function and then assigning it an appropriate number of points based on that type.\nWhile categories and level of performance are the same for all types of engineering systems, function ranking is completely different for devices and processes. They are as follows:\n\n\n\n\n\n\n\n\nfunction ranks for devices\nfunction ranks for processes\nscore\n\n\nbasic function\nproductive function\n3\n\n\nadditional function\nproviding function\n2\n\n\nauxiliary function\ncorrective function\n1\n\n\n\nFunction ranking plays a particularly important role in trimming for processes because the type of the function is the only factor determining which trimming rule will be applied."
  },
  {
    "objectID": "Problem-identification-tools.html#practical-tips-on-formulating-functions",
    "href": "Problem-identification-tools.html#practical-tips-on-formulating-functions",
    "title": "Problem-identification tools",
    "section": "Practical tips on formulating functions",
    "text": "Practical tips on formulating functions\nHere are some practical tips on how to formulate a function correctly:\n\nFormulate the function in the affirmative form – not to do something is not a function. It relates both to useful and harmful functions.\nDo not use declarative terms (e.g. to provide, to protect, or to seek); they do not change/maintain any parameter of the object, hence do not constitute any function.\nBe as specific as possible.\nIf you are unable to determine the action with one verb, you can use the formula: component A changes (or maintains) a parameter X of component B.\nRemember that function carrier cannot perform any function on itself. If you come across such a situation, split the object into two parts – one part will perform the the role of function carrier, the other one the role of function object."
  },
  {
    "objectID": "Problem-identification-tools.html#function-as-a-model-of-a-problem",
    "href": "Problem-identification-tools.html#function-as-a-model-of-a-problem",
    "title": "Problem-identification tools",
    "section": "Function as a model of a problem",
    "text": "Function as a model of a problem\nA generalized function can be used as a primary criterion for identifying technologies that exist worldwide. By reducing functions to universal terms, it becomes possible to identify technologies performing similar functions in both related and unrelated industries.\nThe tool designed for this purpose is function-oriented search (FOS).\n\nMain function"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-14",
    "href": "Problem-identification-tools.html#overview-14",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nAn object of the main function of the engineering system is called target component. It always belongs to the supesystem; the engineering system cannot perform the main function on any of its components.\nThe determination of the main function and the target component depends on how the system’s boundaries have been defined. As we change the boundaries of the system, the main function and the target change too.\nWhile a system that does not perform any main function cannot exist, there can be systems that perform several (sometimes a lot) main functions. For example, the main function of the air conditioner can be to heat the air, cool the air, move moisture in or out of the air, etc. Swiss army knife or a food processor perform even more main functions.\nIf there are several main functions, there may be several targets too. If the system performs several main functions, its targets can be different components of the supersystem or different main function can be directed on one target:\n\nThe main function is something that never changes during the whole life cycle of the system. If a spoon is broken and it’s hidden in a drawer, its main function is still to hold liquid.\nDepending on the circumstances, each technical system can perform some other functions. For example, a chair is designed to support a person, but one can also block the door with it, hang some clothes on it, or use it to break the window during fire. However, the chair was not designed to hold clothes, block doors, or break windows; it was designed to support a person.\n\nArticles\n\nTarget component\n\n\nTarget component"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-15",
    "href": "Problem-identification-tools.html#overview-15",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe target component is always a component of the supersystem.\nIf the system performs several main functions, there may be several targets too. Different components of the supersystem can be the targets, or different main functions can be directed on one target.\n\nSome examples of the target components can be the following:\n\na person is a target of the car (the car carries a person),\na bullet is a target of the helmet (the helmet stops a bullet),\na bike-frame is a target of the wheel (the wheel moves a bike-frame).\n\n\nFunction disadvantage"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-16",
    "href": "Problem-identification-tools.html#overview-16",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThere are 3 types of function disadvantages:\n\nharmful functions,\nuseful functions performed insufficiently,\nuseful functions performed excessively.\n\nIdentifying all function disadvantages of the system is one of the main goals of the function analysis. Along with flow disadvantages, they serve as key inputs for the cause-effect chain analysis (CECA) in the analytical stage of the project.\n\nFunction model"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-17",
    "href": "Problem-identification-tools.html#overview-17",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nFunction model is created during the last stage of function analysis referred to as function modeling. Along with the list of function disadvantages, it represents the final outcome of the entire analysis.\nThe model is the input for trimming as it provides the information about what useful functions of trimmed components should be transferred and what new carriers may be used."
  },
  {
    "objectID": "Problem-identification-tools.html#presentation",
    "href": "Problem-identification-tools.html#presentation",
    "title": "Problem-identification tools",
    "section": "Presentation",
    "text": "Presentation\nBoth for the devices and for processes, the function model can be presented in two ways – either as a table or as a graph.\nIt the project involvs many components, the table is usually employed, since the graph could be too complicated and therefore unreadable. The graph form is usually used for systems with a small number of components.\n\nFunction model as a table\nFor the device, the table usually contains a list of components, their functions, categories of functions (useful or harmful), the level of performance of useful functions (normal, excessive or insufficient), and a ranking of functions (basic, additional, auxiliary), which is the basis for calculating the functionality index of the components.\nIf it is necessary to calculate the functionality index, it is being included in the tabular function model. In this case the model not only contains a list of components, their functions, categories of functions, the level of performance of useful functions, but also the ranking of functions (basic, additional, auxiliary), as well as the functionality index of functions\nIn some cases, the table can be extended with additional parameters for categorizing components and functions if this helps in classifying components, e.g. the costs of components and their values.\nThe picture below presents a schematic for creating a tabular function model of a hypothetical device:\n\nThe following picture presents a schematic for creating a tabular function model of a hypothetical process:\n\n\n\nFunction model as a graph\nWhile the tables for function models of devices and processes are quite similar, their presentation in the form of graphs differs significantly.\n\nGraph for a device\nTo visualize the function model of the device, it is recommended that the shape and color coding for components implemented in component model be used. Additionally, shape and color coding for functions should be determined. Usually, it is as follows:\n\nUsing the proposed symbols, the example function model presented in the table in the Function model as a table section can be graphically represented the following way:\n\nWhen creating the graph, it is important to maintain the correct direction of the arrows representing the functions, so that they clearly indicate which component is the carrier, and which is the object of the function.\n\n\nGraph for a process\nThe function model of a process in the form of a graph is highly useful when it is necessary to reflect the relationships between operations – for instance, whether they are performed in parallel or sequentially. Below, we present the simplest graphical process model. It includes only functions and their categories. This information can be supplemented with additional data, such as the level of performance, rank, or the total score of the entire operation.\n\nThe graph represents an example of the process model described in the table above. To maintain the schematic clarity of the function graph, we used the format carrier (action) object. In place of (action), a verb describing the specific function should be inserted, e.g., carrier A moves object Z, carrier B holds object X, etc.\n\nFunction rank"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-18",
    "href": "Problem-identification-tools.html#overview-18",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nFunction ranking is conducted when it is necessary to develop an innovation strategy.\nUsually, it is calculated for components of the engineering system only; components of the supersystem are not ranked.\nRanking involves identifying the type of the function and then assigning it an appropriate number of points based on that type. The purpose of the scoring system is to establish relative importance among functions. The total points of all functions performed by a given component allow for calculating its functional index, which is essential for estimating the component’s value to the system. During the ranking only useful functions are considered, harmful functions are ignored. The level of performance is also not taken into account.\nFunctions are ranked for both devices and processes, but different criteria applied for them."
  },
  {
    "objectID": "Problem-identification-tools.html#function-ranks-for-devices",
    "href": "Problem-identification-tools.html#function-ranks-for-devices",
    "title": "Problem-identification tools",
    "section": "Function ranks for devices",
    "text": "Function ranks for devices\nThe evaluation criterion here is the status of the component that is the object of the function. The function with the highest value (basic) is the one performed on the target component, i.e., the object of the main function. Functions performed on other components of the supersystem (additional) have a lower value. The least valued are the functions performed on the components of the system (auxiliary) since the primary concern is about interactions between the system and its supersystem components.\nFunctions for devices have three ranks, which are usually based on the following scoring system:\n\nbasic function – 3 points,\nadditional function – 2 points,\nauxiliary function – 1 point."
  },
  {
    "objectID": "Problem-identification-tools.html#function-ranks-for-processes",
    "href": "Problem-identification-tools.html#function-ranks-for-processes",
    "title": "Problem-identification tools",
    "section": "Function ranks for processes",
    "text": "Function ranks for processes\nApplying the same criteria used for devices to functions performed in processes turns out to be impossible. In this context, neither the target component nor the supersystem components are actively utilized, even though they technically exist.\nFor processes, functions have ranks, which are usually based on the following scoring system:\n\nproductive function – 3 points,\nproviding function (supporting, transport, or measurement function) – 2 points,\ncorrective function – 1 point.\n\nThe most valued are functions directly resulting with an irreversible change in the final product of the process (productive). Functions that help perform other functions but are not resulting with an irreversible change at the end of the process (providing) are slightly less important. Corrective functions have the lowest rank.\nThe algorithm for function ranking for processes can be presented in the form of the following diagram:\n\nIn the function analysis of processes, the ranking is particularly important because what happens to a function during trimming depends closely on its rank. For devices, any rule can be applied to functions of any rank (except Rule A, which is not recommended if the removed component performs a basic function). However, for processes, there is no universal set of rules. A trimmed operation typically includes a broad set of functions, and each of them must be appropriately addressed based on its rank.\n\nArticles\n\nBasic function\nAdditional function\nAuxiliary function\nProductive function\nProviding function\n\nSupporting function\nTransport function\nMeasurement function\n\nCorrective function\n\nDefect\n\n\n\nBasic function"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-19",
    "href": "Problem-identification-tools.html#overview-19",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\n\nThe basic function is one of the three types of functions (alongside additional and auxiliary) that can be performed by components of an engineeiring system that is a device. As a function directed at the target component, it holds the highest value in the function ranking (usually 3 points).\nThe basic function should not be confused with the main function. The target component is the object of both, but their carriers are significantly different. The basic function is performed by a component of the system, whereas the main function is performed by the system as a whole.\n\nAdditional function"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-20",
    "href": "Problem-identification-tools.html#overview-20",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\n\nThe additional function is one of the three types of functions (alongside basic and auxiliary) that can be performed by components of an engineeiring system that is a device.\nAs a function directed at a supersystem component, it ranks higher (usually 2 points) than functions directed at system components but not as high as the basic function performed on a target component. This is because the ranking approach assumes that the main emphasis is placed on interactions between the system and the components of its supersystem.\n\nAuxiliary function"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-21",
    "href": "Problem-identification-tools.html#overview-21",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\n\nThe auxiliary function is one of the three types of functions (alongside basicand additional) that can be performed by components of an engineeiring system that is a device.\nAs a function directed at a system component, it has the lowest rank in function ranking (usually 1 point). This is because the ranking approach assumes that the main emphasis is placed on interactions between the system and components of its supersystem. How well the functions inside the system are performed is of least importance.\n\nCorrective function"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-22",
    "href": "Problem-identification-tools.html#overview-22",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe corrective function is one of the three types of functions (alongside productive and providing) that can be performed within operations (components) of an engineeiring system that is a process.\nAs a function whose only purpose is to eliminate defects arising in the process, it is ranked the lowest among all functions in the function ranking. In the most commonly used scoring system, it receives 1 point.\n\nArticles\n\nDefect\n\n\nDefect"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-23",
    "href": "Problem-identification-tools.html#overview-23",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nA defect is a phenomenon that occurs in engineering systems that are processes.\nIt can be introduced intentionally at preceding operations where it performed useful functions, or it may occur independently of us.\n\nProductive function"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-24",
    "href": "Problem-identification-tools.html#overview-24",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe productive function is one of the three types of functions (alongside providing and corrective) that can be performed within operations (components) of an engineeiring system that is a process.\nThe only criterion for a productive function is whether the change it causes remains in the final product at the end of the process. For this reason, it is the highest-valued function in the ranking for processes (usually 3 points).\n\nProviding function"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-25",
    "href": "Problem-identification-tools.html#overview-25",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe providing function is one of the three types of functions (alongside productive and corrective) that can be performed within operations (components) of an engineeiring system that is a process.\nThere are 3 types of providing functions:\n\nsupporting function,\ntransport function, and\nmeasurement function.\n\nIn the function ranking, providing functions are valued lower than productive functions but higher than the corrective ones. In the most commonly used scoring system, they receive 2 points.\n\nArticles\n\nSupporting function\nTransport function\nMeasurement function\n\n\nMeasurement function"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-26",
    "href": "Problem-identification-tools.html#overview-26",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe measurement function is one of the three types of providing functions (alongside supporting and transport) that can be performed within operations (components) of an engineeiring system that is a process.\nAs a providing function, it is valued lower than productive function but higher than the corrective one in the function ranking. In the most commonly used scoring system, it receives 2 points.\nIt is important to remember that a function that reveals information about components can be classified as a providing measurement function as long as measuring or detection is not the main function of the process. If it is, then it will be considered a productive function.\n\nSupporting function"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-27",
    "href": "Problem-identification-tools.html#overview-27",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe supporting function is one of the three types of providing functions (alongside transport and measurement) that can be performed within operations (components) of an engineeiring system that is a process.\nAs a providing function, it is valued lower than productive function but higher than the corrective one in the function ranking. In the most commonly used scoring system, it receives 2 points.\n\nTransport function"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-28",
    "href": "Problem-identification-tools.html#overview-28",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe transport function is one of the three types of providing functions (alongside supporting and measurement) that can be performed within operations (components) of an engineeiring system that is a process.\nAs a providing function, it is valued lower than productive function but higher than the corrective one in the function ranking. In the most commonly used scoring system, it receives 2 points.\nIt is important to remember that a function that changes a position of its object in space can be classified as a providing transport function unless transport is the main function of the process. If it is, then it will be considered a productive function.\n\nValue analysis"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-29",
    "href": "Problem-identification-tools.html#overview-29",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nValue analysis is a historical tool that was once used as the basis for identifying components to trim. At the time, this term referred to the simultaneous execution of function modeling and cost analysis.\nValue analysis involved calculating and comparing value of system components. It was conducted based on the function-cost diagram.\nToday, it is rarely used in projects and has been replaced by other tools. Practice has shown that the list of components immediately associated with key disadvantages from CECA or the disadvantages (mainly cost-related) identified through function-cost analysis provide much more reliable indications than the value of components derived from calculations.\n\nArticles\n\nValue\n\nIdeal system\n\nFunctionality index\n\n\nValue"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-30",
    "href": "Problem-identification-tools.html#overview-30",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nHistorically, value was calculated during the value analysis. Depending on the project, it was used for individual components or the entire systems.\nThis concept helps in understanding factors that influence component (or system) value in TRIZ, but it is no longer applied in contemporary projects."
  },
  {
    "objectID": "Problem-identification-tools.html#calculating-value",
    "href": "Problem-identification-tools.html#calculating-value",
    "title": "Problem-identification tools",
    "section": "Calculating value",
    "text": "Calculating value\nValue can be presented in the form of the following formula:\n\nwhere Fn means the normalized sum of function points, and Cn is normalized costs.\nValue can never be negative. Both the function point score and costs are positive, so their ratio is also positive. For a component/system with very low function point score and very high cost, its value may aim for 0, however it still remains positive.\n\nCalculating value of components\nThe sum of function points can be calculated based on a function ranking, while the costs are calculated during cost analysis.\nThe way of calculation should be identical for all components. Both the function score and the cost of each component should be normalized relatively to the total function score and the total cost of the whole system.\nFor example, a system consists of two components. Component 1 performs 2 basic, 1 additional, and 2 auxiliary functions and costs 5\\(; component 2 performs 1 basic, 1 additional, and 1 auxiliary function and costs 2\\). Value calculation is as follows:\nFunction score of component 1:\n\n2 basic functions – 2 x 3 pt. = 6 pt.\n1 additional function – 1 x 2pt = 2 pt.\n2 auxiliary functions – 2 x 1 pt. = 2 pt.\n\ntotal = 10 pt.\nFunction score of component 1:\n\n1 basic function – 1 x 3 pt. = 3 pt.\n1 additional function – 1 x 2pt = 2 pt.\n1 auxiliary functions – 1 x 1 pt. = 1 pt.\n\ntotal = 6 pt.\nThe total score of both components is 16 pts. The normalized function score of component 1 is 10/16, and the normalized function score of component 2 is 6/16.\nAnalogous, the normalized cost can be calculated. The cost of component 1 is 5\\(, and 2\\) of component 2. Together they cost 7$, so the normalized cost of component 1 is 5/7, and the normalized cost of component 2 is 2/7.\nValue of component 1 equals:\n\nValue of component 2 equals:\n\nIt follows from the above that value of component 2 is greater than value of component 1.\n\n\nCalculating value of the system\nTo calculate the value of the whole system, function analysis for the supersystem should be performed, and the system should be considered as one of components."
  },
  {
    "objectID": "Problem-identification-tools.html#comparing-value-to-ideality",
    "href": "Problem-identification-tools.html#comparing-value-to-ideality",
    "title": "Problem-identification tools",
    "section": "Comparing value to ideality",
    "text": "Comparing value to ideality\nConceptually, value related to function ranking in function analysis is the same as ideality. The only difference is that value can be calculated, while  no calculation system has been developed for ideality. Neither benefits nor payment factors have established methods for estimation and calculation.\n\nArticles\n\nIdeal system\n\n\nIdeal system"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-31",
    "href": "Problem-identification-tools.html#overview-31",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nIdeality of the system is understood as the ratio of the total benefits provided by the system to the sum of all payment factors associated with it. Payment factors include not only direct costs but also required space, environmental damage, maintenance, etc. Conceptually, ideality is the same as value related to function ranking in function analysis. The only difference is that value of different components of an engineering system can be calculated and compared to assess their contribution to the system’s performance. No similar system has been developed for ideality. Neither benefits nor payment factors have established methods for estimation and calculation.\nIdeality can be presented in the form of the following formula:\n\nWhen all payments of the system become 0, we can call it ideal system."
  },
  {
    "objectID": "Problem-identification-tools.html#difference-between-ideal-system-and-ideal-final-result-ifr",
    "href": "Problem-identification-tools.html#difference-between-ideal-system-and-ideal-final-result-ifr",
    "title": "Problem-identification tools",
    "section": "Difference between ideal system and ideal final result (IFR)",
    "text": "Difference between ideal system and ideal final result (IFR)\nIdeal system is sometimes confused with ideal final result (IFR). These concepts are significantly different, and it is a major mistake to equate them.\nThe ideal system referes to with infinite value. It has no components or associated costs, but still delivers the intended function(s). In other words, the system does not exist, but its main function is performed.\nIFR is a term used in ARIZ. It is****a model of the best solution****to a specific problem, whereby the problem is fully eliminated with minimal changes to the system and without any deterioration of system parameters. However, the system exists, it occupies space, incurs costs, requires maintenance, etc.\n\nFunctionality index"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-32",
    "href": "Problem-identification-tools.html#overview-32",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe functionality index is used to calculate a component’s value in the value analysis.\nIt usually depends on the number of useful functions the component performs and ranks of these functions. Originally, harmful functions were also included in the calculation, with points subtracted for their presence. Different factors were also applied to useful functions, depending on their level of performance. Some TRIZ specialists still follow this classical approach.\nThe method of calculation presented below is one of the simplest."
  },
  {
    "objectID": "Problem-identification-tools.html#calculating-the-functionality-index",
    "href": "Problem-identification-tools.html#calculating-the-functionality-index",
    "title": "Problem-identification tools",
    "section": "Calculating the functionality index",
    "text": "Calculating the functionality index\nBoth for devices and for processes, the following steps should be performed to calculate the functionality of a component:\n\nidentify all functions performed by the component / within the operation,\ndetermine their category,\nrank each useful function (eg. basic / productive – 3pts, additional / providing – 2pts, auxiliary / corrective – 1pt),\nsum up the function points of all functions performed by the component / in th operation,\nnormalize the function score.\n\nSince harmful functions are not scored, they are not included in the calculations.\nLet’s consider the fllowing example for a device: one of the components (component A) performs 1 harmful function and 3 useful functions:\n\n1 basic function (3pts), and\n2 auxiliary functions (2 x 1pts = 2pts).\n\nThe harmful function is ignored, so the total score of the component is 5pts. Let us assume that the sum of point scores for all components of the system equals 41pts. The total function index of component A equals 5/41.\nIn the same way, the functionality index for operations in processes can be calculated. For example, the sum of point scores for all operations in the process equals 132pts. Within operation X, the following useful functions are performed:\n\n2 productive functions (2 x 3pts = 6pts),\n3 providing function (3 x 2pts = 6 pts), and\n1 corrective function (1pt).\n\nThe total score of the operation X is 13pts; therefore, its functionality index equals 13/132.\n\nCost analysis"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-33",
    "href": "Problem-identification-tools.html#overview-33",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nCost analysis is typically conducted in projects aimed at reducing system costs. It is conducted simultaneously with function analysis, specifically during function modeling. Function analysis supplemented with cost analysis is called function-cost analysis.\nThe analysis provides crucial information about the system and its components. On one hand, it helps identify its cost disadvantages, and on the other, it aids in making decisions about which components should be considered for trimming.\nTwo types of costs can be considered during the analysis:\n\nabsolute cost, i.e. the monetary value of a component (for example, if a component costs €7, its absolute cost is €7.\nrelative cost, i.e. the component’s cost as a percentage of the total cost of the system (for example, if the system costs €1000 and a component costs €23, its relative cost is 2,3%).\n\nUsing relative component costs not only makes comparison easier but also provides a more accurate assessment. A cost difference of €4 is significant if the total system cost is €13, but much less so if the system costs €2000. A high relative cost is considered a cost disadvantage. Cost disadvantages, along with function disadvantages, form the building blocks for cause-effect chain analysis.\nEffects of the analysis are typically presented by adding a column to the function model table. If the project involves developing an innovation strategy, they can be used to create a function-cost diagram.\n\nFunction-cost diagram"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-34",
    "href": "Problem-identification-tools.html#overview-34",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe function–cost diagram is created based on the results of function-cost analysis.\nIt can be a very helpful in developing an innovation strategy for the system improvement. It also is useful to show if the system has been designed reasonably or not."
  },
  {
    "objectID": "Problem-identification-tools.html#building-the-diagram",
    "href": "Problem-identification-tools.html#building-the-diagram",
    "title": "Problem-identification tools",
    "section": "Building the diagram",
    "text": "Building the diagram\nThe horizontal axis of the diagram is the sum of the component costs; the vertical axis is the sum of its function point score. After calculating functionality index and the cost of the components, each of them can be placed in the appropriate place on the diagram."
  },
  {
    "objectID": "Problem-identification-tools.html#insights-from-the-diagram",
    "href": "Problem-identification-tools.html#insights-from-the-diagram",
    "title": "Problem-identification tools",
    "section": "Insights from the diagram",
    "text": "Insights from the diagram\nIf the functionality index increases proportionally to the cost of the components, it indicates that the engineering system has been optimally designed. To evaluate this, try to draw a straight line between the points representing the components so that they are distributed roughly evenly around it. If successful, it suggests that the system is designed rationally; if the points are scattered widely across the area, the design leaves much to be desired. The steeper the line, the better it is for the system."
  },
  {
    "objectID": "Problem-identification-tools.html#strategy-planning-based-on-the-diagram",
    "href": "Problem-identification-tools.html#strategy-planning-based-on-the-diagram",
    "title": "Problem-identification tools",
    "section": "Strategy planning based on the diagram",
    "text": "Strategy planning based on the diagram\nBy splitting the diagram by four parts, the components can be grouped according to their functionality and costs:\nA: low cost, high functionality index,\nB: low cost, low functionality index,\nC: high cost, high functionality index,\nD: high cost, low functionality index.\n\nThe most valuable components are those that are located in area A (high functionality inex, low cost), which is the desired location for all the components. Locating them in this sector is the basis for developing an innovation strategy.\nIn practice it means:\n\nfor the components from the section B – increase functionality;\nfor the components from the section C – reduce costs;\nfor the components from the section D there are two alternative ways:\n\nincrease functionality and decrease costs,\ntrim them completely from the system.\n\n\n\nFlow analysis"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-35",
    "href": "Problem-identification-tools.html#overview-35",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nFlow analysis compliments function analysis by identifying disadvantages that may not have been revealed through it.\nThere are three types of flows analyzed during the analysis:\n1. substance flow,\n2. energy flow, and\n3. information flow.\nModeling the engineering system as flows of substance, energy, and information provides an alternative view of the system.\nThe flows go through their channels, which are the system’s components. That’s why function analysis must be completed prior to flow analysis.\nFlow analysis can be conducted for both devices and processes. In either case, the outcome is a list of flow disadvantages. Together with function disadvantages, they can be used as building blocks in cause-effect chain analysis."
  },
  {
    "objectID": "Problem-identification-tools.html#stages-of-flow-analysis",
    "href": "Problem-identification-tools.html#stages-of-flow-analysis",
    "title": "Problem-identification tools",
    "section": "Stages of flow analysis",
    "text": "Stages of flow analysis\nThere are two major stages of flow analysis. These are as follows:\n\nflow partition analysis during which the allocations of flows are identified,\nflow modeling during which the flow model is created (e.g., in a graphical form), and specific flow disadvantages are identified from the list of typical disadvantages."
  },
  {
    "objectID": "Problem-identification-tools.html#algorithm",
    "href": "Problem-identification-tools.html#algorithm",
    "title": "Problem-identification tools",
    "section": "Algorithm",
    "text": "Algorithm\n\nSelect the type of flows for analyzing.\nCreate the first flow channel:\n\nindicate the components through which the flow is flowing (the outcome of the component analysis can serve as the basis for that, but if needed you should split the components into more granular ones (recommended));\nconnect those components.\n\nMoving along the channel, identify as many flow disadvantages as possible. Use the list of typical flow disadvantages for that.\nPerform the similar actions for other flows.\nCompose the general list of flow disadvantages to use as an input to CECA together with the list of function disadvantages.\n\n\nArticles\n\nFlow disadvantage\nFlow\n\n\n\nFlow disadvantage"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-36",
    "href": "Problem-identification-tools.html#overview-36",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe flow disadvantages analyzed during the flow analysis can be divided into the following types:\n\nconductivity disadvantages,\nutilization disadvantages,\nharmful flows, and\nflow partition disadvantages.\n\nFlow conductivity disadvantages can be the following:\n\nbottleneck, i.e., a place in the flow channel where the resistance to flow is significantly increased (e.g., merging traffic lanes);\nstagnant zone, i.e., a place where the flow stops temporarily or permanently (e.g., traffic red light);\npoorly transferable flow (e.g., a speaking tube on a ship);\nlong flow (e.g., a power transmission line);\nhigh channel resistance (e.g., 2-lane traffic compared to 4-lane traffic);\nlow flow density (e.g., transport of uncompressed mattresses);\nlarge number of transformations (e.g., a traditional clock transmission).\n\nFlow utilization disadvantages can be the following:\n\ngray zone, i.e., a location in a flow where the parameters are difficult to predict (e.g., an icy road);\nchannel damages flow, i.e., a location in the channel where the channel damages the flow (e.g., a hole in the road surface);\nflow damages channel, i.e., a location in the channel where the flow damages its channel (e.g., a pipe corroded by the flowing substance).\n\n\nFlow"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-37",
    "href": "Problem-identification-tools.html#overview-37",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nFlow refers to the movement of material objects (substances and energy), or information through space. What matters is its presence and motion within the engineering system under consideration, although it may also partially occur in the supersystem.\nDynamics (movement through space) is a key feature of flow. It exists as long as the “flowing” element is in motion – if it stops, the flow ceases (disappears), even though all of its components remain within the system. This means that flow can “disappear” from the system without removing any of its components.\nFlows in the system are analyzed during the flow analysis, which is performed after the function analysis. There are three types of flows analyzed:\n1. substance flow,\n2. energy flow, and\n3. information flow."
  },
  {
    "objectID": "Problem-identification-tools.html#categories-of-flows",
    "href": "Problem-identification-tools.html#categories-of-flows",
    "title": "Problem-identification tools",
    "section": "Categories of flows",
    "text": "Categories of flows\nThere are four categories of flows. They are the following:\nUseful flow is a flow whose object (substance, energy, or information) performs a useful function or is an object of a useful function.\nHarmful flow is a flow whose object (substance, energy, or information) performs a harmful function.\nWasted flow is a flow that is characterized by losses of substance, energy, or information.\nNeutral flow is a flow that has an irrelevant or insignificant influence on the engineering system.\n\nCause-effect chain analysis"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-38",
    "href": "Problem-identification-tools.html#overview-38",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nRegardless of whether you are dealing with a device or a process, it is essential to conduct a function-cost analysis and (optionally) a flow analysis before performing CECA. Function and cost disadvantages, as well as flow disadvantages (if identified) are the fundamental building blocks of CECA, and all of them should be considered in the analysis.\n\nThe primary outcome of CECA is a list of key disadvantages.\nCause-effect chain analysis can be performed for both devices and processes."
  },
  {
    "objectID": "Problem-identification-tools.html#performing-ceca",
    "href": "Problem-identification-tools.html#performing-ceca",
    "title": "Problem-identification tools",
    "section": "Performing CECA",
    "text": "Performing CECA\n\nProcedure\nBuilding CECA begins with the initial disadvantage formulated by inverting the goal of the project. Next, we ask the question why? to understand what directly causes it. Disadvantages identified in earlier analyses are typically used at the beginning of the chains. However, they can also appear in the middle or at the end of the chain, as they are not always the direct cause of the initial disadvantage.\nAs the chain progresses downward, more disadvantages are revealed, with each subsequent one serving as the cause of the previous one. Disadvantages that lie between the initial disadvantages and the key disadvantages are referred to as intermediate disadvantages.\nThe final step of the analysis is to designate certain disadvantages as key disadvantages, and it is up to you to decide which ones to select. Usually, they can be found the end of the chains, however it is not uncommon to assign the status of key disadvantage to some intermediate disadvantages.\n\n\n\nStarting and ending the analysis\nThe key point in CECA is to determine where to start and when to stop the chain.\nAs mentioned, the starting point for the analysis is always the initial disadvantage. As for stopping the analysis, there are two main recommendations:\n\nIf the disadvantage is caused by a natural phenomenon (physical, chemical, biological, geometric, etc.), asking questions why? further is meaningless. For example, if it is needed to answer the question Why does water consist of hydrogen and oxygen molecules?, the answer is always *That is just the way it is**.*\nIf the cause of the disadvantage is beyond your control and influence of this project. It may be caused by administrative or legislative restrictions that cannot be circumvented (e.g., radiation level is limited by the law), project constraints may prevent from solving the problem that lies behind the disadvantage (e.g., redesigning the component associated with the disadvantage exceeds the project budget), or you may have no influence on the solution of the problem that is behind the disadvantage (e.g., a certain assembly cannot be redesigned since it is provided by an external supplier).\n\nSometimes, a chain cannot be completed because the cause of the disadvantage leads back to a previous one, creating what is known as a vicious circle.\n\n\nAND and OR operators\nIf one disadvantage is caused by two or more disadvantages, it is necessary to use one of the operators that indicate the relationship between them:\n\noperator AND is used if at least two causes have to occur simultaneously for a disadvantage to appear; removing one of them does automatically remove the other;\noperator OR is used if one disadvantage is caused by several factors that are independent of each other; removing one of them does not remove any other automatically.\n\n\n\n\nRecommendations\nThe technique used for building cause-effect chains involves multiple asking the question why?It is recommended that at least 5 levels down from the initial disadvantage be analyzed, what means that the question why? should be asked at least five times (that is why this tool is sometimes called a method of 5 Whys).\nIt is recommended to complete the entire branch of the chain before starting the next one.\nNote that CECA is composed of disadvantages only. Do not enter positive and advantageous effects into the chain.\n\nArticles\n\nKey disadvantage\nInitial disadvantage\nVicious circle\n\n\n\nKey disadvantage"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-39",
    "href": "Problem-identification-tools.html#overview-39",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe initial disadvantage is always predetermined by the goal of the project. The selection of key disadvantages is your decision.\nUsually, key disadvantages can be found at the roots of cause-effect chains or close to them; however, the its status can be assigned to any intermediate disadvantage of the chain."
  },
  {
    "objectID": "Problem-identification-tools.html#relation-between-key-disadvantages-and-key-problems",
    "href": "Problem-identification-tools.html#relation-between-key-disadvantages-and-key-problems",
    "title": "Problem-identification tools",
    "section": "Relation between key disadvantages and key problems",
    "text": "Relation between key disadvantages and key problems\nSome of key disadvantages are directly reformulated into key problems, the others can be used in trimming. The component immediately associated with the key disadvantage may be trimmed from the system, thus, the key disadvantage disappear together with the trimmed component and trimming problems are generated instead.\nAnother scenario includes performing feature transfer on the component associated with key disadvantage. It generates a set of feature transfer problems.\nTrimming problems and feature transfer problems have the status of key problems."
  },
  {
    "objectID": "Problem-identification-tools.html#recommendations-3",
    "href": "Problem-identification-tools.html#recommendations-3",
    "title": "Problem-identification tools",
    "section": "Recommendations",
    "text": "Recommendations\nIt is recommended to examine the entire chain when selecting key disadvantages. Some disadvantages may be easy to eliminate, or certain issues might have already been resolved in the past. Consider who could assist you in this process.\nA key disadvantage formulated around a parameter is usually easier to model using an engineering (technical) or physical contradiction. For example, if the key disadvantage is that an element is too thin, it can be relatively straightforward to model it as a physical contradiction: the element should be thick because…, and it should be thin because…\nConsider the disadvantages located in the branch containing the AND operator – removing one can eliminate (collapse) the entire branch or part of the chain.\n\nInitial disadvantage"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-40",
    "href": "Problem-identification-tools.html#overview-40",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nInitial disadvantage is the starting point for the cause-effect chain analysis. It is formulated by inverting the goal of the project.\nFor example, if the project’s goal is to improve the final product’s purity, the initial disadvantage would be stated as: the product is contaminated. Similarly, if the project’s goal is to reduce the cost of engine assembly, the initial disadvantage would be phrased as: the cost of engine assembly is high.\nSome projects have more than one goal. This means that they have several initial disadvantages, and separate CECAs are built for each of them. The disadvantages that come from branches of different initial disadvantages may be interconnected.\n\nVicious circle"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-41",
    "href": "Problem-identification-tools.html#overview-41",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nWhen building a CECA, we always aim to reach the end of the chains during the analysis. However, there may be situations where the cause of a disadvantage leads back to a previous disadvantage – either intermediate or even the initial one. This creates a vicious circle, where the chain has no definitive end.\n\nTo break the vicious circle, any of its disadvantages can be selected as a key disadvantage. It is recommended to select the one that will be easier to address according to your opinion.\n\nTrimming"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-42",
    "href": "Problem-identification-tools.html#overview-42",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nTrimming is one of fundamental analytical tools. Like feature transfer, it is a problem-generating tool since it creates problems that have never existed before. Solving these problems leads to entirely new and unexpected solutions.\nTrimming aims to improve an engineering system by reducing the number of its components and simplifying the system. Eliminating components responsible for key disadvantages increases the system’s value by reducing its costs while maintaining or enhancing its overall functionality.\nTrimming offers multiple options for eliminating the same component. These options represent a spectrum of possible innovations – from incremental to more radical. It also reveals a set of problems that other approaches cannot detect. It yields new problem statements, and also points toward effective solutions.\nThe input into trimming are the following:\n\nfunction model including useful functions, developed during the function analysis, and\nkey disadvantages identified in CECA.\n\nThe function model provides information about which useful functions of the trimmed components should be preserved in the system and what new carriers can be used. The key disadvantages, on the other hand, indicate components to trim, as those directly associated with key disadvantages are recommended to be removed from the system first.\nThe output of trimming is one or more trimming models, and a list of trimming problems.\nTrimming is guided by a set of rules that determine which components to trim and/or how to redistribute their useful functions. However, a different set of rules applies to devices and another to processes.\nIn some projects, completely removing a component recommended for trimming may be impossible or impractical. In such cases, partial trimming can be applied."
  },
  {
    "objectID": "Problem-identification-tools.html#selecting-components-for-trimming",
    "href": "Problem-identification-tools.html#selecting-components-for-trimming",
    "title": "Problem-identification tools",
    "section": "Selecting components for trimming",
    "text": "Selecting components for trimming\nWhen selecting components for trimming, the decision should align with the project’s goal. If the goal is to reduce costs, consider removing the most expensive component. If minimizing weight is a priority, eliminate the heaviest one. For size reduction, focus on the largest component.\nTo determine which component to trim, it is advisable to use the following approaches:\n\nUtilize the list of components directly linked to key disadvantages identified through CECA. This method is widely applied in most projects. By removing the component responsible for a key disadvantage, the associated issue is effectively addressed.\nIn cost-reduction projects, rely on cost assessments, such as those derived from function-cost analysis. This provides insights into the costs of units and their individual parts. When the project aims to cut costs, it is logical to trim the most expensive components.\nFor general system improvement, refer to strategies like those outlined in the function-cost diagram. One effective approach is to eliminate components with the lowest value, typically found in quadrant D of the diagram. This method helps in improving the overall system by removing elements that contribute the least value.\n\nThe decision to complete the trimming process is made by the team. After removing the selected component and addressing the trimming problems, the process can be concluded or repeated for another component."
  },
  {
    "objectID": "Problem-identification-tools.html#difference-between-trimming-for-devices-and-trimming-for-processes",
    "href": "Problem-identification-tools.html#difference-between-trimming-for-devices-and-trimming-for-processes",
    "title": "Problem-identification tools",
    "section": "Difference between trimming for devices and trimming for processes",
    "text": "Difference between trimming for devices and trimming for processes\nThe key difference between trimming for devices and trimming for processes lies in the trimming rules.\nFor devices, there are three trimming rules that can be applied to functions of any rank, with some limitations for rule A. In the process, a trimmed operation comprises a set of functions with different ranks, and each function requires a distinct approach to be effectively addressed. Therefore, there is no universal set of trimming rules, but there are different sets of rules for carriers of function of a specific rank.\nTrimming for processes is usually more radical than trimming for devices. While for devices, component by component are trimmed, for processes, an entire operation is eliminated, along with its associated equipment, tools, labor, energy, raw materials, etc.\n\nArticles\n\nTrimming rules\nTrimming model\nPartial trimming\nTrimming problem\n\n\n\nTrimming rules"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-43",
    "href": "Problem-identification-tools.html#overview-43",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nTrimming rules are scenarios according to which the process of trimming is conducted and they represent the key difference between trimming for devices and trimming for processes. For devices, there are three trimming rules that can be applied to functions of any rank (with some limitations for rule A). In the process, a trimmed operation comprises a set of functions with different ranks, and each function requires a distinct approach to be effectively addressed. Therefore, there is no universal set of trimming rules, but there are different sets of rules for carriers of function of a specific rank. Trimming for processes is usually more radical than trimming for devices. While for devices, component by component are trimmed, for processes, an entire operation is eliminated, along with its associated equipment, tools, labor, energy, raw materials, etc.\nTrimming rules should always be selected considering the goal and constraints of the project, as well as the boundaries of the system."
  },
  {
    "objectID": "Problem-identification-tools.html#trimming-rules-for-devices",
    "href": "Problem-identification-tools.html#trimming-rules-for-devices",
    "title": "Problem-identification tools",
    "section": "Trimming rules for devices",
    "text": "Trimming rules for devices\nWhen selecting a component of the device to trim, one of three trimming rules can be applied.\nRule A: Function carrier can be trimmed if the object of its useful function is removed too.\n\nRule A is the most radical of all the options for trimming – two components are removed at once. If the object of the function does not exist, the carrier of this function is no longer needed.\nThat rule should be used with caution. It is recommended that it be applied when the system is over-engineered and consists of too many components.\nIt is not recommended that Rule A be applied when the component being trimmed performs a basic function, because then the target must be also removed. Theoretically it is possible, but it does not happen often.\nRule B: Function carrier can be trimmed if the object of function performs its useful function itself.\n\nRule B, sometimes referred to as the self-service rule, is less radical than Rule A. However, remember that the component that is supposed to perform a new function on itself may have limited resources, and it might be challenging to “teach” it to do so.\nRule C: Function carrier can be trimmed if another component performs its useful function.\n\nRule C is the most frequently used scenario, since it is much easier to meet its conditions than for A or B. The system and its supersystem contain a number of components that gives a broad choice of new function carrier selection. The new function carrier should meet at least one of the four conditions:\n\nThe component already performs an identical or similar function on the object of function.\nThe component already performs identical or a similar function on another object.\nThe component performs any function on the object of function, or it at least simply interacts with it.\nThe component has resources necessary to perform the required function."
  },
  {
    "objectID": "Problem-identification-tools.html#trimming-rules-for-processes",
    "href": "Problem-identification-tools.html#trimming-rules-for-processes",
    "title": "Problem-identification tools",
    "section": "Trimming rules for processes",
    "text": "Trimming rules for processes\nTrimming for processes involves entire operations, but the sets of trimming rules apply to individual functions performed within them. According to some rules, performing a function may not be necessary, but this does not mean it is being trimmed.\nThere is no universal set of trimming rules here, but there are different sets of rules for carriers of functions of a specific rank.\nThere are five different sets of trimming rules, and each of them may contain a different number of rules. They are as follow.\n\nTrimming rules for productive functions\nWhen trimming the operation with productive function, the function can be handled the following ways:\nRule A: it can be eliminated if its object is eliminated from the system.\nRule B: it can be eliminated if the necessity to perform it is eliminated.\nRule C: it can be transferred to another operation.\n\n\nTrimming rules for providing functions\nWhen trimming an operation with providing functions, the functions are handled depending on the rank.\n\nSupporting functions\nSupporting function can be handled the following ways:\nRule A: it can be eliminated if the operation with the supported function is trimmed.\nRule B: it can be eliminated if the operation with the supported function is changed so that no support is required now.\nRule C: it can be transferred to the operation with the supported function.\nRule D: it can be transferred to another operation.\n\n\nTransport functions\nTransport function can be handled the following ways:\nRule A: it can be eliminated if its object is eliminated from the system.\nRule B: it can be eliminated if the entities between which its object moves are eliminated from the system.\nRule C: it can be eliminated if the subsequent operations are changed in such a way that it eliminates the need to perform the transport function.\nRule D: it can be transferred to another operation.\n\n\nMeasurement functions\nTrimming rules for measurement functions direct us to the rules for other functions. They can be handled the following ways:\nRule A: it is handled according to trimming rules for the productive function if the measurement function is needed as the final output (for example, research, statistics, etc.).\nRule B: it is handled according to trimming rules for the supporting function if the measurement function is needed for the provision of another operation.\n\n\n\nTrimming rules for corrective functions\nWhen trimming the operation with corrective function, the function can be handled the following ways:\nRule A: it can be eliminated if the defect-generating operation is trimmed.\nRule B: it can be eliminated if the defect-generating operation is changed in such a way that the defect is not generated any longer.\nRule C: it can be eliminated if the defect-generating operation is changed in such a way that the defect is generated with another (safe) set of parameters; in this case the defect ceases to be a defect and the need for performing a corrective function is eliminated.\nRule D: it can be eliminated if operations which are harmed by the defect are trimmed.\nRule E: it can be eliminated if operations which are harmed by the defect are changed in such a way that they become insensitive to it; in this case the defect ceases to be a defect and the need for performing a corrective function is eliminated.\nRule F: it can be transferred to the defect-generating operation.\nRule G: it can be transferred to another operation.\n\nTrimming model"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-44",
    "href": "Problem-identification-tools.html#overview-44",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe trimming model is created by applying trimming to the function model of the system. Each alternative trimming scenario results in a different model, hence there may be several (theoretically, infinitely many) trimming models deriving from different scenarios.\nAs the trimming model is a function model, it is presented in the same format – either as a table or a graph."
  },
  {
    "objectID": "Problem-identification-tools.html#procedure-of-creating-a-trimming-model",
    "href": "Problem-identification-tools.html#procedure-of-creating-a-trimming-model",
    "title": "Problem-identification tools",
    "section": "Procedure of creating a trimming model",
    "text": "Procedure of creating a trimming model\nFor both devices and processes, creating a trimming model consists of the following steps:\n\nSelect the component to trim.\nSelect a useful function of that component.\nSelect an appropriate trimming rule.\nPerform trimming according to the selected rule.\nFormulate trimming problems generated by step 4.\nRepeat steps 2-5 for all the functions of the component being trimmed.\nRepeat steps 1-6 for all the components to trim.\n\n\nPartial trimming"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-45",
    "href": "Problem-identification-tools.html#overview-45",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nIn simple terms, partial trimming means that the component remains in the system, but redistributing some of its useful functions to other components leads to its “unloading.” This often allows for reducing the component’s cost, size, weight etc.\nThe picture below presents an example. Consider a system component (component 1) that performs three useful functions but is large and heavy. By delegating two of its functions to other component (component 3), it can be made smaller and lighter. Component 1 remains in the system, but after partial trimming, it performs only one function, and its key disadvantages – size and weight – are eliminated.\n\nPartial trimming can be applied to all engineering systems – both devices and processes. Just like with typical trimming, the redistribution of functions follows specific trimming rules, accordingly for devices and processes.\n\nTrimming problem"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-46",
    "href": "Problem-identification-tools.html#overview-46",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe trimming problem is usually presented in the form of a question: How will the new function carrier perform the function?\nJust like feature transfer problems and key disadvantages from CECA, trimming problems can be reformulated into key problems, which are the output of the problem-identification stage of the project.\n\nFeature transfer"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-47",
    "href": "Problem-identification-tools.html#overview-47",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nFeature transfer is a special tool facilitating the innovative hybridization. It has been designed to improve engineering systems (both devices and processes) by transferring desirable feature(s) from one or more feature-providing systems to the base system.\nLike trimming, feature transfer is a problem-generating tool. It creates problems that have never existed before. Solving these problems leads to entirely new and unexpected solutions.\nFeature transfer is a tool that not only helps reduce the cost of innovation but also minimizes the associated risks, as the required functions already exist in other engineering solutions. From another perspective, this tool expands the range of available resources for addressing key disadvantages of the analyzed engineering system.\nDepending on the goal of the project, future transfer can be used at two different points of the analytical stage:\n\nAt the beginning of the project for new product development when it is used to hybridize the systems identified during benchmarking. This mode of hybridization usually changes the system considerably.\nAfter CECA, as one of the scenarios to handle key disadvantages(trimming is the other one). This mode of hybridization does not change the system much.\n\n\nThe outcome of feature transfer is a set of feature-transfer problems about how to transfer one or more features."
  },
  {
    "objectID": "Problem-identification-tools.html#feature-transfer-algorithm",
    "href": "Problem-identification-tools.html#feature-transfer-algorithm",
    "title": "Problem-identification tools",
    "section": "Feature transfer algorithm",
    "text": "Feature transfer algorithm\nFeature transfer algorithm is the following:\n\nIdentify the main function of the initial system / component that is being improved.\nFormulate its advantages and disadvantages.\nIdentify the pool of competing systems.\nSelect an alternative system from the pool of the competing systems.\nSelect the base system out of the initial and the alternative systems (the base system is the one that was selected for improvement (transferring a feature to).\nUse CECA to identify the feature in the alternative (feature-providing) system that can eliminate the disadvantage of the base system.\nFormulate the feature transfer problem.\n\nWhen selecting alternative systems for feature transfer, multiple options may be considered. In such cases, the application of each system should be developed separately, and steps 4–7 should be repeated for each."
  },
  {
    "objectID": "Problem-identification-tools.html#nuances-of-feature-transfer",
    "href": "Problem-identification-tools.html#nuances-of-feature-transfer",
    "title": "Problem-identification tools",
    "section": "Nuances of feature transfer",
    "text": "Nuances of feature transfer\n\nMulti-step feature transfer\nFeature transfer can be highly useful for combining the advantages of different alternative systems. If a solution does not meet the requirements or still has disadvantages, the algorithm can be repeated as many times as necessary until all advantages are consolidated in a single system or all required parameters are achieved.\nNo matter how many systems you are going to combine, work on one case at a time.\n\n\nThree levels of feature transfer\nFeature transfer can be conducted at three levels of engineering complexity. Depending on project conditions, constraints, and the desired level of innovation, the following can be transferred to the base system:\n\na feature along with its physical carrier,\na feature along with its physical carrier, but in the form of a mixture,\na pure feature (without its physical carrier).\n\n\n\nPhysical system integration – transferring the feature along with its carrier\nTransferring the feature along with its physical carrier is the simplest way; however, it is characterized by the lowest level of innovation and patentability.\nThis method is quick and easy but can only be applied if the base system has enough space for the feature-providing component/system.\n\n\n\nMixture - a special case of physical system integration\nMixture is a more advanced form of transferring a feature along with its physical carrier. This approach typically results in more innovative solutions compared to directly transferring a physical component.\nThe method involves breaking down the feature-providing component into small particles and mixing these particles with the corresponding component of the base system. From a macro-level perspective, only the base system component is recognizable, while at a micro level, the particles of the feature-providing component are also present.\n\nMixture is typically considered when there is not enough space in the base system for the feature-providing component. However, a key requirement is that the particles of the feature-providing component must retain the feature intended for transfer. For example, embedding magnet particles in silicone results in magnetic silicone.\n\n\nPure feature transferring\nFor the most innovative solutions, the pure feature transfer is the most desired way. Transferring the feature without any physical component completely blurs the boundary between systems, making their identification no longer possible. Such solutions not only represent the highest level of innovation but also have the greatest potential for patentability.\n\n\n\n\nNeutral (or inert) system\nA neutral (or inert) system is defined as a system whose advantage lies in the absence of the base system’s disadvantage, while its disadvantage is that it does not perform the desired main function. Since a neutral system does not fulfill the intended function, it is typically chosen for its low cost or even for being freely available. Common examples include air, water, sand, etc.\nDuring hybridization, the base system provides the required functionality, while the neutral system neutralizes the drawback, effectively “diluting” its negative impact.\n\nArticles\n\nNeutral system (Inert system)\nBase system\nAlternative system\nCompeting system\nFeature transfer problem\n\n\n\nNeutral system (Inert system)"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-48",
    "href": "Problem-identification-tools.html#overview-48",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nNeutral (or inert) system is a type of feature-providing system used in feature transfer.\nIt is defined as a system whose advantage lies in the absence of the base system’s disadvantage, while its disadvantage is that it does not perform the desired main function. During hybridization, the base system provides the required functionality, while the neutral system neutralizes the disadvantage, effectively “diluting” its negative impact.\nSince a neutral system does not fulfill the intended function, it is typically chosen for its low cost or even for being freely available. Common examples include air, water, or sand.\n\nBase system"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-49",
    "href": "Problem-identification-tools.html#overview-49",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe term of base system is used in feature transfer.\nThe base system should not be equated with the initial system, as they are not always the same. The initial system is the one from which we start the feature transfer procedure, while the base system is ultimately selected after identifying the pool of alternative systems."
  },
  {
    "objectID": "Problem-identification-tools.html#recommendations-for-selecting-the-base-system",
    "href": "Problem-identification-tools.html#recommendations-for-selecting-the-base-system",
    "title": "Problem-identification tools",
    "section": "Recommendations for selecting the base system",
    "text": "Recommendations for selecting the base system\nWhen selecting the base system, it is important to remember that it will not necessarily be the initial system. It is recommended to choose the simplest or cheapest system, assuming all other conditions are equal.\nEngineers naturally tend to prefer their own system as the base, either because the project aims to improve it or because it contains the component responsible for the key disadvantage. However, the final decision should be based on the project’s goals and constraints. In some cases – especially when developing a new product – it may be more beneficial to transfer the features of the initial system to an alternative system.\nSometimes, both systems may be strong candidates for the base system. In such cases, it is worth conducting feature transfer for both options, as this can lead to a broader set of potential solutions.\n\nAlternative system"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-50",
    "href": "Problem-identification-tools.html#overview-50",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe term of alternative system is used in feature transfer.\nThe alternative systems are selected from the list of competing systems, meaning they always perform the same (or similar) main function. What distinguishes them is that they have exactly opposite advantages and disadvantages (identified in the first step of the feature transfer procedure) compared to the initial system/component that is being improved.\nExamples of the alternative systems can be the following:\n\n\n\n\nCompeting system"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-51",
    "href": "Problem-identification-tools.html#overview-51",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nThe term of competing system is used in feature transfer. These are systems that can potentially provide features needed by the initial system/component that is being improved.\nAt the stage of their identification, main function is the only criterium for selection. A special attention must be given to its correct formulating. A poorly defined main function can lead to incorrect identification of systems (for example, a movie theater and a television are not competitive systems).\nThe competing systems can be found in a similar or entirely different fields, industries, or environments, also in fairytales or sci-fi stories. Their design, scale, or utilized resources can be extremely different.\nA specific case of a competing system is an alternative system."
  },
  {
    "objectID": "Problem-identification-tools.html#competing-systems-for-devices-and-for-processes",
    "href": "Problem-identification-tools.html#competing-systems-for-devices-and-for-processes",
    "title": "Problem-identification tools",
    "section": "Competing systems for devices and for processes",
    "text": "Competing systems for devices and for processes\nDepending on the project, competing systems can be identified for devices or for processes.\nSome examples for devices can be the following:\n\n\n\n\n\n\n\n\n\nsystem\na hair dryer\na car\na light-bulb\n\n\nmain function\nremoves moisture (liquid)\nmoves things\ngenerates light\n\n\ncompeting systems\na sponge an activated charcoal a heater a centrifugal dryer a paper towel a freeze-dryer an electrolyzer\na boat a shopping bag an elevator a conveyor belt a magnet (for metal objects) a drone a dimensional portal\na glow sticks LED (light-emitting diode) a candle a firefly phosphorescent material Tesla coil a smartphone screen\n\n\n\nAn example of a process can be an aqueous detergent cleaning performed in a washing machine. It has been designed to eliminate adhesive forces between dirt particles and fibers. Some examples of competing systems can be the following:\n\nultrasonic cleaning,\nmicrowave cleaning,\ndry cleaning (with organic solvents),\ncryogenic cleaning (dry ice or liquid nitrogen),\nlaser ablation,\nsupercritical CO₂ cleaning, etc.\n\n\nFeature transfer problem"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-52",
    "href": "Problem-identification-tools.html#overview-52",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nJust like trimming problems and key disadvantages from CECA, feature transfer problems can be reformulated into key problems, which are the output of the problem-identification stage of the project.\nThe feature transfer problem is usually presented in the form of a question, for example:\n\nHow to do something?\nHow to make something bigger?\nHow to make someting lighter?\n\n\nKey problem"
  },
  {
    "objectID": "Problem-identification-tools.html#sources-of-key-problems",
    "href": "Problem-identification-tools.html#sources-of-key-problems",
    "title": "Problem-identification tools",
    "section": "Sources of key problems",
    "text": "Sources of key problems\nKey problems are identified during the problem-identification stage of the project.\nThey are derived using the following tools:\n\ncause effect-chain analysis (CECA),\ntrimming, or\nfeature transfer.\n\n\nIf components directly associated with the key disadvantages are subjected to trimming, trimming problems are generated. Another scenario involves performing a feature transfer on components linked to the key disadvantages, which generates a set of feature transfer problems. Both trimming problems and feature transfer problems are classified as key problems.\nThe key disadvantages identified through CECA that are not further used in trimming or feature transfer are converted into key problems.\nIn projects that aim for minimal changes to the system, particularly complex key problems are addressed using ARIZ."
  },
  {
    "objectID": "Problem-identification-tools.html#models-of-key-problems",
    "href": "Problem-identification-tools.html#models-of-key-problems",
    "title": "Problem-identification tools",
    "section": "Models of key problems",
    "text": "Models of key problems\nTRIZ operates with 4 types of problem models:\n\nengineering contradiction,\nphysical contradiction,\nsubstance-field model (Su-Field) of the problem, and\nfunction.\n\nDepending on the model, the following tools are used to resolve key problems:\n\n\n\n\n\n\n\n\nmodel of the problem\ntool used to process the problem model\nmodel of solution\n\n\nengineering (technical) contradiction\n1. contradiction (Atshuller) matrix\n1. inventive principle\n\n\nphysical contradiction\n1. algorithm of resolving physical contradiction 2. function-oriented search (FOS) 3. database of scientific effects 4. clone problems application\n1. inventive principle 2. technology identified during FOS 3. scientific effects\n\n\nSu-Field\n1. system of 76 standard inventive solutions\n1. standard inventive solution\n\n\nfunction\n1. function-oriented search (FOS) 2. database of scientific effects\n1. technology identified during FOS 2. scientific effect/phenomenon\n\n\n\n\nS-curve analysis"
  },
  {
    "objectID": "Problem-identification-tools.html#overview-53",
    "href": "Problem-identification-tools.html#overview-53",
    "title": "Problem-identification tools",
    "section": "Overview",
    "text": "Overview\nPragmatic S-curve analysis evolved from the classical approach originally developed by Altshuller. Experience has shown that the practical application of the method based on the four indicators he proposed often poses significant challenges, and the results of such analysis are not always fully reliable.\nIn the modern approach to the S-curve, both technical and market indicators are considered essential for gaining a more comprehensive understanding of a system’s development. Key factors include the system’s market presence and the behavior of its MPV.\nPragmatic S-curve analysis incorporates an extensive list of indicators that enable precise identification of each stage, along with a set of strategic recommendations tailored to every phase.\n\nInnovative benchmarking"
  },
  {
    "objectID": "Problem-identification-tools.html",
    "href": "Problem-identification-tools.html",
    "title": "Problem-identification tools",
    "section": "",
    "text": "The goal of the first stage of the project is to analyze the engineering system and identify the “right” problems to solve. These are deep, hidden issues that represent the root causes rather than the symptoms and are typically not obvious at the beginning.\nThe outcome of the whole analytical block is a list of key problems that have to be solved during the problem-solving stage to achieve the goal of the project.\nAccording to MATRIZ methodology, the problem-identification toolbox consists of the following tools:\n\nfuction-cost analysis,\nflow analysis,\ncause-effect chain analysis (CECA),\ntrimming,\nfeature transfer,\nS-curve analysis, and\ntrends of engineering system evolution (TESE) analysis.\n\nA tool that is also used at this stage of the project is innovative benchmarking.\nThe selection of tools and the order in which they are used should always be tailored to the project’s goal. Projects aimed at developing a new, patentable solution may be conducted differently than those focused on improving an existing system.\n\n\n\nFunction-cost analysis\n\nFunction analysis\n\nComponent analysis\n\nComponent\nEngineering system\nComponent model\nSupersystem\n\nInteraction analysis\n\nInteraction\nInteraction matrix\n\nFunction modeling\n\nFunction\nMain function\n\nTarget component\n\nFunction disadvantage\nFunction rank\n\nBasic function\nAdditional function\nAuxiliary function\nProductive function\nProviding function\n\nSupporting function\nTransport function\nMeasurement function\n\nCorrective function\n\nDefect\n\n\nFunction model\n\nValue analysis\n\nValue\n\nIdeal system\n\nFunctionality index\n\n\nCost analysis\nFunction-cost diagram\n\nFlow analysis\n\nFlow disadvantage\nFlow\n\nCause-effect chain analysis\n\nKey disadvantage\nInitial disadvantage\nVicious circle\n\nTrimming\n\nTrimming rules\nTrimming model\nPartial trimming\nTrimming problem\n\nFeature transfer\n\nNeutral system (Inert system)\nBase system\nAlternative system\nCompeting system\nFeature transfer problem\n\nKey problem\nS-curve analysis\nInnovative benchmarking"
  },
  {
    "objectID": "Problem-solving-tools.html",
    "href": "Problem-solving-tools.html",
    "title": "Problem-solving tools",
    "section": "",
    "text": "Problem-solving tools represent a set of instruments designed to address specific key problems identified during the problem-identification stage of the project.\nThe following model serves as the foundation for every problem-solving process according to TRIZ:\n\nIn the first step, a specific key problem is transformed into a model of the problem. This model is then processed using a tool dedicated to that particular model to generate a solution model. Finally, a brainstorming is conducted around the generated solution model to develop concrete solution concepts.\nThe problem-solving tools are grouped into two blocks: those that require the formulation of contradictions (engineering or physical) and those that have nothing to do with contradictions:\ncontradiction required\n\nARIZ\nclone problem\ninventive principles\n\ncontradiction NOT required\n\nfunction-oriented search (FOS)\nstandard inventive solutions\nscientific database\n\n\n\nDepending on how the problem has been modeled, the appropriate problem-solving tool is applied. Consequently, the use of a specific tool results in a corresponding model of solution. The table below illustrates these relationships:\n\n\n\n\n\n\n\n\nmodel of the problem\ntool used to process the problem model\nmodel of solution\n\n\nengineering (technical) contradiction\n1. contradiction (Atshuller) matrix\n1. inventive principle\n\n\nphysical contradiction\n1. algorithm of resolving physical contradiction 2. function-oriented search (FOS) 3. database of scientific effects 4. clone problems application\n1. inventive principle 2. technology identified during FOS 3. scientific effects\n\n\nSu-Field\n1. system of 76 standard inventive solutions\n1. standard inventive solution\n\n\nfunction\n1. function-oriented search (FOS) 2. database of scientific effects\n1. technology identified during FOS 2. scientific effect/phenomenon\n\n\n\n\n\n\nSubstance-field modeling\n\nStandard inventive solutions (SIS)\n\nSubstance-field analysis\nSubstance-field model\n\n\nContradictions\n\nEngineering (technical) contradiction\n\nContradiction matrix\n\nTypical parameters\n\n\nPhysical contradiction\n\nAlgorithm for resolving physical contradictions\n\nInventive principle\n\nARIZ\n\nConflicting pair\nProduct\nTool\nARIZ Block 1: Restructuring the original problem\nX-factor\nOperating zone\nOperating time\nMini-problem\nIdeal final result\n\nFunction-oriented search (FOS)\nClone problems application\nDatabase of scientific effects"
  },
  {
    "objectID": "Concept-substantiation-tools.html",
    "href": "Concept-substantiation-tools.html",
    "title": "Concept substantiation tools",
    "section": "",
    "text": "Concept substantiation tools\nAt this stage of the project, all solutions proposed during the problem-solving phase are evaluated for practical feasibility based on technical and business requirements.\nThe evaluation criteria often include technical and production constraints, time-to-market requirements, as well as investment and cost limitations, among others. The highest-scoring solutions are selected and recommended for further development – or for additional assessment if deemed necessary. This process efficiently filters out the best solutions, optimizing resources and time."
  },
  {
    "objectID": "TESE.html",
    "href": "TESE.html",
    "title": "Trends of engineering systems evolution (TESE)",
    "section": "",
    "text": "Trends of engineering systems evolution (TESE) are statistically proven or empirically derived directions of engineering system development that describe the natural transition of engineering systems from one state to another.\n\n\nThe identification and understanding of trends of engineering systems evolution (TESE) is arguably TRIZ’s most significant contribution to the science of innovation. They also form the basis for many TRIZ tools.\nTESE emerged from an in-depth analysis of product and technology evolution across various industries. Studying their history – based on the examination of thousands of patents – revealed that all products and technologies follow similar conceptual patterns. TESE define the stages that nearly all products and technologies are likely to go through during their development. This does not mean that designing a product that deviates from TESE is technically impossible, but rather that sooner or later, it is likely to fail.\nAt the core of TESE lies the assumption that technologies evolve along their own trajectory, independent of human influence. For this reason, they are often referred to as the voice of the product. However, it is important to note that to be fully effective, TESE should be integrated with market needs – the voice of the customer.\n\n\n\nTESE are organized in a hierarchical structure that reflects the relationships between them. In this structure, a lower-level trend functions as a sub-trend (mechanism) of a higher-level trend. However, each trend also has its own internal mechanisms that drive system evolution. In other words, for a system to evolve according to a higher-level trend, both its internal mechanisms and the mechanisms of its sub-trends must be implemented.\n\nIt is important to note that both TESE and their structure have evolved over decades, which is why different versions can be found in TRIZ literature. The officially approved definitions of the trends and their hierarchy, as recognized by MATRIZ, were developed by the St. Petersburg TRIZ Scientific School, which is considered the most pragmatic TRIZ school.\n\nTrend of S-curve evolution: as an engineering system evolves, the evolution of each main parameter of value (MPV) describes an S-shaped curve in time.\nTrend of increasing value: an engineering system evolves so that its value always increases.\nTrend of transition to the supersystem: as an engineering system evolves, it is integrated with supersystem components.\nTrend of increasing completeness of system components: as an engineering system evolves, it acquires the following typical functions: operating agent, transmission, energy source, and control system.\nTrend of decreasing human involvement: as an engineering system evolves, the number of engineering system functions performed by humans decreases.\nTrend of increasing degree of trimming: as an engineering system evolves, system elements (components or operations) are eliminated without impairing the functionality of the system, and possibly improving it.\nTrend of flow enhancement: as an engineering system evolves, flow rates of substances, energy, or information increase, and/or the flows are better utilized.\nTrend of increasing coordination: as an engineering system evolves, characteristics of the components of the engineering system become more coordinated with each other and with the supersystem.\nTrend of uneven development of system components: as an engineering system evolves, development is concentrated on the operating agent first, and on the rest of the system later.\nTrend of increasing controllability: as engineering systems evolve, they develop more ways in which they can be controlled.\nTrend of increasing dynamization: as an engineering system evolves, it and its components become more “dynamic”.\n\n\n\n\nTrend of S-curve evolution\n\nMain parameter of value\nS-curve\n\nTrend of increasing value\nTrend of transition to the supersystem\nTrend of increasing completeness of system components\nTrend of decreasing human involvement\nTrend of increasing degree of trimming\nTrend of flow enhancement\nTrend of increasing coordination\nTrend of uneven development of system components\nTrend of increasing controllability\nTrend of increasing dynamization"
  }
]